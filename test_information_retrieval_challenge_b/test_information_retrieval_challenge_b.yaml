interactions:
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3304'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA5xTS2/bMAy+71cQPDuvPpbG9wHrMAwdumED5iGQZdpma0muRNdNi/z3QXaaNimw
        AbsZNPW9SD4hF5iirpVo0zaT5efHs0/z/vr+46LOV4vG/OQPj6W+u/56c/EDE3T5DWnZvZhqZ9qG
        hJ3FBLUnJVRgunh/cX62PF2tFgkaV1CDKVatTE6n5xPpfO4m89P5AhPsgqoI0ydsvTOtrMXdkg2Y
        Ls9OEnzB3tdPTs8TFCeq2ZdWy+U2QV071hQw/fWEhsIzrHcNYYoqBA6irESRzgrZaOApswAAGUrt
        uqqWkGEKu+LuBz1ILGZ4CZaoAHFQsi3AdQJ97aB3FqQmOJkv5vDF5dTAledHArZwVW8C6wDKFtB7
        Foqd7MEqQyEBVZbccMwLOsv35APLJhm6Cw7a3ZPfRD4FJTc0hUvQykIQ5QXyDQRSXtdsKyidHzSw
        LZ03KuYFzjZsaZph8tqOJxWcZVsde6qU1OQPEHIqnacd6yif5bWebwOlkLckwAEUVM4V0DZKU+wb
        lB4raBtlR/IJfA9DIpB71wda95SHyKKdMTGECDF4HAwemvtX5llmX/AH8Wtx66j7Nfx+KAfoe4tH
        0rVnYc3BHIdn1C1B6HyEUvIG73LcmJiQ1p1XQsOMh95LUAasEzAcQpylshtg0zoflxUKEsVNOA4x
        tKRun1X03DT/H9Sr5TyYboYj4TZ5vpFdbm9OJG7zqOVwjkeala+Oz2v80flmfF6LtCGdzfq+n9oo
        to1ap85Xs+ErzNpR8yz6mYXOGOU3swOeEfKuoxD9j7h/c9+zteSfzQ6Gd74zu8VtgiVbDvV6PBxM
        MYhrMUG2BT1gOt/+3r77AwAA//8DALC6hzNABQAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94afe2b4f1403-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:13:28 GMT
      Function-Execution-Id:
      - ldou4cmk8dvo
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '16803'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 4c5fd5eab0fd112b592f227468c4ce4a;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86502'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.332s
      X-Request-Id:
      - 310cab176f000a0275ee5a50471c7dbc
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text; include any information that can be
      used to answer the question \"2010 Nobel Prize in Physics winner\". Do not directly
      answer the question itself:\n\n\nLITERAL TEXT: \"\"\"Skip to content This website
      uses cookies to improve the user experience. By using this website you consent
      to all cookies in accordance with our cookie policy.I understand Close the search
      form A button that allows you to close the search form if needed Close the search
      form A button that allows you to close the search form if needed Close Mobile
      Menu The Nobel Prize The Nobel Prize Logo Toggle Mobile Menu Nobel Prizes &
      Laureates All Nobel Prizes Physics Prize Chemistry Prize Medicine Prize Literature
      Prize Peace Prize Prize in Economic Sciences Quick facts Nomination Physics
      Prize Chemistry Prize Medicine Prize Literature Prize Peace Prize Prize in Economic
      Sciences Nomination Archive Alfred Nobel Alfred Nobel\u2019s life Alfred Nobel\u2019s
      will News & insights Press In-depth Events Public events Nobel Prize Concert
      Nobel Week Dialogue Nobel Prize Dialogue Nobel Prize Summit Nobel Prize Inspiration
      Initiative Nobel Prize award ceremonies Educational Close the search form A
      button that allows you to close the search form if needed Close the search form
      A button that allows you to close the search form if needed Header Search Submit
      a search term Allows users to submit a search term Physics The Nobel Prize in
      Physics 2010 Explore Summary Physics Prizes Chemistry Prizes Medicine Prizes
      Literature Prizes Peace Prizes Prizes in Economic Sciences Summary Prize announcement
      Press release Advanced information Popular information Illustrated information
      Speed read Award ceremony video Award ceremony speech Banquet video Laureates
      Andre Geim Konstantin Novoselov Enhanced Page Navigation The Nobel Prize in
      Physics 2010 The Nobel Prize in Physics 2010 - Prize announcement The 2010 Nobel
      Prize in Physics - Press release The Nobel Prize in Physics 2010 Andre Geim
      Konstantin Novoselov Share this Share on Facebook: The Nobel Prize in Physics
      2010 Share this content on Facebook Facebook Tweet: The Nobel Prize in Physics
      2010 Share this content on Twitter Twitter Share on LinkedIn: The Nobel Prize
      in Physics 2010 Share this content on LinkedIn LinkedIn Share via Email: The
      Nobel Prize in Physics 2010 Share this content via Email Email this page The
      Nobel Prize in Physics 2010 \u00a9 The Nobel Foundation. Photo: U. Montan Andre
      Geim Prize share: 1/2 \u00a9 The Nobel Foundation. Photo: U. Montan Konstantin
      Novoselov Prize share: 1/2 The Nobel Prize in Physics 2010 was awarded jointly
      to Andre Geim and Konstantin Novoselov \"for groundbreaking experiments regarding
      the two-dimensional material graphene\" To cite this section MLA style: The
      Nobel Prize in Physics 2010. NobelPrize.org. Nobel Prize Outreach AB 2023. Tue.
      30 May 2023. <https://www.nobelprize.org/prizes/physics/2010/summary/> Back
      to top Back To Top Takes users back to the top of the page Nobel Prizes and
      laureates Nobel Prizes 2022 Fourteen laureates were awarded a Nobel Prize in
      2022, for achievements that have conferred the greatest benefit to humankind.
      Their work and discoveries range from paleogenomics and click chemistry to documenting
      war crimes.See them all presented here. Explore prizes and laureates Look for
      popular awards and laureates in different fields, and discover the history of
      the Nobel Prize. Select the category or categories you would like to filter
      by Physics Chemistry Medicine Literature Peace Economic Sciences Select the
      category or categories you would like to filter by Physics Chemistry Medicine
      Literature Peace Economic Sciences Decrease the year by one - Choose a year
      you would like to search in Increase the year by one + Explore About the Nobel
      Prize organisation The Nobel Foundation Tasked with a mission to manage Alfred
      Nobel''s fortune and has\u00a0ultimate responsibility for fulfilling the intentions
      of Nobel''s will. The prize-awarding institutions For more than a century, these
      academic institutions have worked independently to select Nobel Prize laureates.
      Nobel Prize outreach activities Several outreach organisations and activities
      have been developed to inspire generations and disseminate knowledge about the
      Nobel Prize. Press Contact FAQ Privacy policy Technical support Terms of use
      For developers Media player Join us Facebook Twitter Icon Follow The Nobel Prize
      on Twitter Twitter Instagram Icon Follow The Nobel Prize on Instagram Instagram
      Youtube Icon Follow The Nobel Prize on Youtube Youtube LinkedIn IconConnect
      with The Nobel Prize on LinkedIn LinkedIn The Nobel Prize Copyright \u00a9 Nobel
      Prize Outreach AB 2023\"\"\"\n\n\nCONCISE SUMMARY: The text is best summarized
      as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4870'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0TOT2/bMAwF8Ps+BcGzHNhL3Ky67bIi2FBkh+4yDIUiszEzifQkJv0T5LsPHtb2
        +vj4wzsjD+gxjsFinlKz/vayOmzyn+Pddj2Mp7T5chqu+pvvm8PyR4cOdXegaP8/FlHzlMhYBR3G
        QsFoQN9dfepX61XbrR1mHSihx/1kzXLRN3YsO23aZTtjxxr2hP6MU9E82b3pb5KK/rprHb7bb/my
        d2hqIb03V/3FYRyVI1X0P8+Yqb6qRROhx1ArVwti80YVI5n3BxE9SmTZg40EH9uuhVvdUYJt4RcC
        FtiOz5VjhUcWoVIdfJahENwQZwgywFeVfy4L3OpJKyU9OXjQMotcgJ4mKpxJrIIK7EuYRhJyEMAe
        tRnmU2WVkCAHo8IhLfDi8IGF63hfKFQV9FhNJ3TIMtAT+vby6/LhLwAAAP//AwCxXhQNtwEAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94b9e2a45119b-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:13:39 GMT
      Function-Execution-Id:
      - ldoucqfmwj9c
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '2791'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 5b910ed49bf11234e094e665a36013a6;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '88317'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 1.121s
      X-Request-Id:
      - 9bff19c2948df6fb290febe90a17eeb8
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["Skip to content This website uses cookies to improve the user
      experience. By using this website you consent to all cookies in accordance with
      our cookie policy.I understand Close the search form A button that allows you
      to close the search form if needed Close the search form A button that allows
      you to close the search form if needed Close Mobile Menu The Nobel Prize The
      Nobel Prize Logo Toggle Mobile Menu Nobel Prizes & Laureates All Nobel Prizes
      Physics Prize Chemistry Prize Medicine Prize Literature Prize Peace Prize Prize
      in Economic Sciences Quick facts Nomination Physics Prize Chemistry Prize Medicine
      Prize Literature Prize Peace Prize Prize in Economic Sciences Nomination Archive
      Alfred Nobel Alfred Nobel\u2019s life Alfred Nobel\u2019s will News & insights
      Press In-depth Events Public events Nobel Prize Concert Nobel Week Dialogue
      Nobel Prize Dialogue Nobel Prize Summit Nobel Prize Inspiration Initiative Nobel
      Prize award ceremonies Educational Close the search form A button that allows
      you to close the search form if needed Close the search form A button that allows
      you to close the search form if needed Header Search Submit a search term Allows
      users to submit a search term Physics The Nobel Prize in Physics 2010 Explore
      Summary Physics Prizes Chemistry Prizes Medicine Prizes Literature Prizes Peace
      Prizes Prizes in Economic Sciences Summary Prize announcement Press release
      Advanced information Popular information Illustrated information Speed read
      Award ceremony video Award ceremony speech Banquet video Laureates Andre Geim
      Konstantin Novoselov Enhanced Page Navigation The Nobel Prize in Physics 2010
      The Nobel Prize in Physics 2010 - Prize announcement The 2010 Nobel Prize in
      Physics - Press release The Nobel Prize in Physics 2010 Andre Geim Konstantin
      Novoselov Share this Share on Facebook: The Nobel Prize in Physics 2010 Share
      this content on Facebook Facebook Tweet: The Nobel Prize in Physics 2010 Share
      this content on Twitter Twitter Share on LinkedIn: The Nobel Prize in Physics
      2010 Share this content on LinkedIn LinkedIn Share via Email: The Nobel Prize
      in Physics 2010 Share this content via Email Email this page The Nobel Prize
      in Physics 2010 \u00a9 The Nobel Foundation. Photo: U. Montan Andre Geim Prize
      share: 1/2 \u00a9 The Nobel Foundation. Photo: U. Montan Konstantin Novoselov
      Prize share: 1/2 The Nobel Prize in Physics 2010 was awarded jointly to Andre
      Geim and Konstantin Novoselov \"for groundbreaking experiments regarding the
      two-dimensional material graphene\" To cite this section MLA style: The Nobel
      Prize in Physics 2010. NobelPrize.org. Nobel Prize Outreach AB 2023. Tue. 30
      May 2023. <https://www.nobelprize.org/prizes/physics/2010/summary/> Back to
      top Back To Top Takes users back to the top of the page Nobel Prizes and laureates
      Nobel Prizes 2022 Fourteen laureates were awarded a Nobel Prize in 2022, for
      achievements that have conferred the greatest benefit to humankind. Their work
      and discoveries range from paleogenomics and click chemistry to documenting
      war crimes.See them all presented here. Explore prizes and laureates Look for
      popular awards and laureates in different fields, and discover the history of
      the Nobel Prize. Select the category or categories you would like to filter
      by Physics Chemistry Medicine Literature Peace Economic Sciences Select the
      category or categories you would like to filter by Physics Chemistry Medicine
      Literature Peace Economic Sciences Decrease the year by one - Choose a year
      you would like to search in Increase the year by one + Explore About the Nobel
      Prize organisation The Nobel Foundation Tasked with a mission to manage Alfred
      Nobel''s fortune and has\u00a0ultimate responsibility for fulfilling the intentions
      of Nobel''s will. The prize-awarding institutions For more than a century, these
      academic institutions have worked independently to select Nobel Prize laureates.
      Nobel Prize outreach activities Several outreach organisations and activities
      have been developed to inspire generations and disseminate knowledge about the
      Nobel Prize. Press Contact FAQ Privacy policy Technical support Terms of use
      For developers Media player Join us Facebook Twitter Icon Follow The Nobel Prize
      on Twitter Twitter Instagram Icon Follow The Nobel Prize on Instagram Instagram
      Youtube Icon Follow The Nobel Prize on Youtube Youtube LinkedIn IconConnect
      with The Nobel Prize on LinkedIn LinkedIn The Nobel Prize Copyright \u00a9 Nobel
      Prize Outreach AB 2023"], "model": "text-embedding-ada-002", "encoding_format":
      "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4560'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94bc2f89de23d-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:13:43 GMT
      Function-Execution-Id:
      - ldou6edrrjfb
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '176'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 384df9262218dd36d483722601437611
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 4f717577279beaebeda58ccce2e10097
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "announcing the 2010 Nobel Prize in Physics winners, Andre Geim
      and Konstantin Novoselov, for their experiments on graphene, a two-dimensional
      material.", "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '228'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94bca8995e268-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:13:44 GMT
      Function-Execution-Id:
      - ldou72tkymgg
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '28'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 81f3d87fa060df13ae30e75aaeff5685
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - cb4a72efeb7d8328b98a8e3f1215e991
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out who won the
      2010 Nobel Prize in Physics and write their names, affiliated university, and
      discovery to a file. I can start by searching for the information online.\",\n        \"reasoning\":
      \"I need to gather information before I can write it to a file. The internet
      is a good place to start.\",\n        \"plan\": \"- Use the browse_website command
      to search for information on the 2010 Nobel Prize in Physics\\n- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that the information I find is accurate and that I am not missing
      any important details.\",\n        \"speak\": \"I will search for information
      on the 2010 Nobel Prize in Physics and write it to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: announcing
      the 2010 Nobel Prize in Physics winners, Andre Geim and Konstantin Novoselov,
      for their experiments on graphene, a two-dimensional material.\n\nLinks: [''\\nSkip
      to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '5499'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6SST28aQQzF7/0Uls8LggQasrceqoi0jVSp6aVEq8muYV1m7O2MgRDEd6+WPyEl
        yqm30Xj88/Obt0GuMMeydlaGxneuvj4P7Od1s9Kb6c3w9k/vtrkfDX58n6+HnwUz1MffVNqho1tq
        aDwZa1sqIzmjCvP+x9FwcDXoXVxlGLQijznOGutcdocdW8RH7fQue33McJHcjDDfYBM1NFaYzkkS
        5v2LwXWGJ/ipMLrO0NScP10NLkfbDMtauaSE+a8NBkpHcFRPmKNLiZM5sVamipG0K2wmAgAwQat1
        MastTTCHw+WhQE/WXk5wDLVbEkx1IRVYTcAy1RhcKw/GIERVF+50dTiDKawiGwFbe3YwZU/dCWav
        8ZFcUmGZHWeUTmCRaDdg116YFm0nlBqCk1fccw3vDmm8kz2/A/f/yT5Dl5GNS07hqP+4enBzgrSI
        LcoZjMGFHZpl9gbuynIRnZFfw07ES4OoQeCU2iYna+DQaGw/ESoyxz6db5oacvOjlBV7/8464+M3
        vrJsz9lmx0gcPHmTCHGB9iP+8fBMiYuz8zDtC+3bE+Ki1+8Voo/kiybyMxUrFqGYutbGLjtvPqXx
        k1SR4IY47Dz7orJLNwvc6VITeV1mcC+8pJjY1qBT+OakrCkZxQymGltTOAI9NRQ5kFgCFZhF19Qk
        lIEDW2mnakuJVZyH4IwiO/9i1s6wg28T2eI2wykLp7rY5xpzTKYNZshS0RPmve3D9sNfAAAA//8D
        APG3rSNxBAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94bddcb3d2c40-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:01 GMT
      Function-Execution-Id:
      - ldou08e0m716
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '14325'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - a08e3c30268035df5fbe852c71190d43;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86020'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.652s
      X-Request-Id:
      - 0e28cb76406a8cde5951964012c2b184
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out who won the
      2010 Nobel Prize in Physics and write their names, affiliated university, and
      discovery to a file. I can start by searching for the information online.\",\n        \"reasoning\":
      \"I need to gather information before I can write it to a file. The internet
      is a good place to start.\",\n        \"plan\": \"- Use the browse_website command
      to search for information on the 2010 Nobel Prize in Physics\\n- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that the information I find is accurate and that I am not missing
      any important details.\",\n        \"speak\": \"I will search for information
      on the 2010 Nobel Prize in Physics and write it to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: announcing
      the 2010 Nobel Prize in Physics winners, Andre Geim and Konstantin Novoselov,
      for their experiments on graphene, a two-dimensional material.\n\nLinks: [''\\nSkip
      to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have found the information I need. Now I need to write
      it to a file.\",\n        \"reasoning\": \"I can use the write_to_file command
      to write the information to a file.\",\n        \"plan\": \"- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that I am writing the information accurately and that I am not
      missing any important details.\",\n        \"speak\": \"I will write the information
      I found to a file.\"\n    },\n    \"command\": {\n        \"name\": \"write_to_file\",\n        \"args\":
      {\n            \"filename\": \"2010_nobel_prize_winners.txt\",\n            \"text\":
      \"Andre Geim and Konstantin Novoselov, University of Manchester, for their experiments
      on graphene, a two-dimensional material.\"\n        }\n    }\n}"}, {"role":
      "system", "content": "Command write_to_file returned: File written to successfully."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6594'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6ySQWvbQBCF7/0Vw5xlYyd2EnTvIVAIhDZQ6mJW0kjaendG7I7sOMb/vaxkY+P0
        2JuY2Xnvm6c5oK0wx7I1WvrOTR6/fSy/NpX9/uLf+vc3z/pDX+aLeruT4idmKMUfKvU0MS3Fd47U
        CmOGZSCjVGE+f3haLh4Xs8VThl4qcphj0+nkfrqcaB8KmczuZ3PMsI+mIcwP2AXxna5VNsQR8/ni
        aZbhRfzSeLzLUEWNu5QelnfHDMtWbEkR818H9BTPwkEcYY4mRhvVsCZMYSVOKxxWDACwQm2lb1qN
        K8zhVDw16F1TcYXP0JotwYmJKtCWQE3cTOEZYiu9qyDQ1tIO/B5MmbAjqABx7AOBtkbhJNJRqCX4
        JCKDTkFRQephsrDOqqU4XWF2jRLIRGHLzcjzOnhZbq7tdtY5aMl14AlsRay23oPhPZg0DruWAsEz
        lIbB+i7IlsBwBd5sEoQqBaiotHFQszzA1b32gW5xOmd4JJnA66e9k+jFf/CuJZw9PbHeyJXBqi1t
        9Oe0mcZ4BrTrBI2HgtLerXCKbWe1Bb+P5OrB9vKMRUG2FJzIJg2kHHw6gw1FkJC+I1UgXSdBe/5n
        6rEjszkzDfH+7588uh2z8y2W4r3h6tMpsvE0ggQy1bq2jm5YTWhuL3hspLeX8bvZfLZmKcitu2A/
        aL2zzBTiVNOtX2aPJ7IVH/GYYW3ZxnY9niHmGFU6zNByRe+Yz46/j1/+AgAA//8DAGcaVHlMBAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94c611cc4634a-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:20 GMT
      Function-Execution-Id:
      - ldoufyhkjt80
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '12652'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - bc00246bd99aa29c71ea7cac23f2dcc2;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86017'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.654s
      X-Request-Id:
      - c29de628b3f6c8f00e965c283a79737b
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"Andre Geim
      and Konstantin Novoselov, University of Manchester, for their experiments on
      graphene, a two-dimensional material.\"\"\"\n\n\nCONCISE SUMMARY: The text is
      best summarized as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '366'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SOy24TQRBF93xFqdY91jh+hPSOFUhAVjgbhKJKd9nTYbpqqC4/guV/R0aQbO89
        9+iesWSMmAbyVKexu/3ye/Ww+HSzv1/S6dd8t1na5iF9K/bs6xcMqE/PnPzfYpa0TiN7UcGAyZic
        M8b5+v1qebvs16uAVTOPGHE3ebeYrTrf25N2/aKfY8B9ox1jPONkWid/dP3J0jCu5wHf1K/xzV1A
        V6fxNbnrLwHToCVxw/j9jJXbf6fpyBiRWivNSfz6UMVZru8/SDaGj1wqkGT4rPKXKQL3etDGox5g
        a1rBB4aNlANbK/4CuoWvJGng5mxwZGOgI1nmDFu1K10M+DSxlcriDVRgZzQNLByAwI/a5WvVigqN
        UMnZCo0zvATcFilteDSmpoIRm+uEAYtkPmHsLz8u7/4AAAD//wMATpfBVq8BAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94ccedc2a29f1-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:28 GMT
      Function-Execution-Id:
      - edh33d4cdqfo
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '2440'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - ca98a4f1886ba45b13f25ca474539fbb;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89437'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 374ms
      X-Request-Id:
      - d366453eb1b0c0c62bd7b8ba250ea83b
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["Andre Geim and Konstantin Novoselov, University of Manchester,
      for their experiments on graphene, a two-dimensional material."], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '204'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        P//x/wAAAP//AwDdgpZ+4yAAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94ceaf8561157-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:30 GMT
      Function-Execution-Id:
      - edh3o640by07
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '248'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 0c141b2d116fb7cbef45bb5ce5cac91a
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - d44b3093f6e390eca95b6e2367631fb7
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "Andre Geim and Konstantin Novoselov from the University of Manchester
      were awarded for their experiments on graphene, a two-dimensional material.",
      "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '222'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        IAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94cf8db922317-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:33 GMT
      Function-Execution-Id:
      - edh3o2jg8ehu
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '456'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - c52218405b4b3c2daea566af09cb5ffb
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 87d6bc01c3b5ee04ca0260a6751b0731
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out who won the
      2010 Nobel Prize in Physics and write their names, affiliated university, and
      discovery to a file. I can start by searching for the information online.\",\n        \"reasoning\":
      \"I need to gather information before I can write it to a file. The internet
      is a good place to start.\",\n        \"plan\": \"- Use the browse_website command
      to search for information on the 2010 Nobel Prize in Physics\\n- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that the information I find is accurate and that I am not missing
      any important details.\",\n        \"speak\": \"I will search for information
      on the 2010 Nobel Prize in Physics and write it to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: announcing
      the 2010 Nobel Prize in Physics winners, Andre Geim and Konstantin Novoselov,
      for their experiments on graphene, a two-dimensional material.\n\nLinks: [''\\nSkip
      to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have found the information I need. Now I need to write
      it to a file.\",\n        \"reasoning\": \"I can use the write_to_file command
      to write the information to a file.\",\n        \"plan\": \"- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that I am writing the information accurately and that I am not
      missing any important details.\",\n        \"speak\": \"I will write the information
      I found to a file.\"\n    },\n    \"command\": {\n        \"name\": \"write_to_file\",\n        \"args\":
      {\n            \"filename\": \"2010_nobel_prize_winners.txt\",\n            \"text\":
      \"Andre Geim and Konstantin Novoselov, University of Manchester, for their experiments
      on graphene, a two-dimensional material.\"\n        }\n    }\n}"}, {"role":
      "system", "content": "Command write_to_file returned: File written to successfully."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have completed the task. I should review my actions
      to ensure that I have performed to the best of my abilities.\",\n        \"reasoning\":
      \"Reviewing my actions will help me identify any areas where I can improve and
      make better decisions in the future.\",\n        \"plan\": \"- Review my actions
      and identify areas for improvement\",\n        \"criticism\": \"I need to make
      sure that I am being honest with myself and that I am not overlooking any mistakes
      or missed opportunities.\",\n        \"speak\": \"I will review my actions to
      ensure that I have performed to the best of my abilities.\"\n    },\n    \"command\":
      {\n        \"name\": \"read_file\",\n        \"args\": {\n            \"filename\":
      \"2010_nobel_prize_winners.txt\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command read_file returned: Andre Geim and Konstantin Novoselov,
      University of Manchester, for their experiments on graphene, a two-dimensional
      material."}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}], "temperature": 0, "max_tokens":
      0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7744'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA4RSTY/TQAy98yssn9OqpdvtkhvqAS1CcEFcKFq5EyeZ7cw4O+P0gyr/HWWTqmw5
        cLX9nt979hltgTmamtT4xk1WX34vrb5ff/r4Ybt+savv5fG59J/Xvvn2Y4YZyvaZjY6IqRHfOFYr
        ATM0kUm5wHx+/7C8W93NVg8ZeinYYY5Vo5PFdDnRNm5lMlvM5phhm6hizM/YRPGNPqnsOCTM56v5
        MsMr+bWxuM9QRcldSw/LeZehqcUaTpj/PKPndCGO4hhzpJRsUgray5SgHHoL500AANig1tJWtaYN
        5jAWxwYftS9u8BFq2jNE3ls+cAH+BGR6bQkoFPAI5CGR2lRaLuBgtQatGaRVI56nMOJHT1y8dpXS
        DlJrDKdUts6dphvM/t4fmZIEG6pRhIJNYH0jsTcDKhC5dGwUJNxKsgUHteUJqGeBUmKPjLJnz0Ez
        2LYK9pWQXJK3rGR2QQ6Oi4rhUHO4yG84lhJ975Cdu1XbOAqD0Al8FSjbqDXHUVS/KPJLayMXt0AT
        rVpjk79kHbhPSMDTjiG1kUFr0iHlIApbNuJtqIY8yXDQV8/XKXIHOiVIGu2+H1S5uL9dnhqm3Zsj
        //9IA77LLg9kxHsKxT//E8jzQH2zlGI1fFs3Um1Ch12GpQ021U/D3THHpNJghjYUfMR81v3q3v0B
        AAD//wMArIUGhLIDAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94d1d1966e12b-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:48 GMT
      Function-Execution-Id:
      - edh383euagce
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '9927'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - ff02bfdc093693b48ddfc096cecd6fa1;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86004'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.664s
      X-Request-Id:
      - 02773f1693aaa77bbe36491f9fd3dbcd
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"Andre Geim
      and Konstantin Novoselov, University of Manchester, for their experiments on
      graphene, a two-dimensional material.\"\"\"\n\n\nCONCISE SUMMARY: The text is
      best summarized as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '366'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SOwU7jQBBE73xFq8/jyAYCZG4cYMUuiwSIE1qhwdOxZ9fTbXoaJxDl31EQG65V
        r55qgymix7YP1uZxqE6v3+fTz/Oz27tOLl66F22uFzdTvFzP76+u0KE8/6XWvhazVvI4kCVhdNgq
        BaOIvjk5mx+fHteLxmGWSAN67Earjmbzyl71War6qG7Q4WsJHaHf4KiSR3sy+Udc0J80Dr/V+/hw
        4dDEwrBPFvXWYdtLaqmgf9xgpvLfqTIQegylpGKBbfdQ2Ih37885KsEPShkCR/gl/MkkhhuZpNAg
        EyxVMlhP8MBpIi3J3kCW8Dtw21MxUliREoRV0EgRlqI7OinQeiRNmdgKCEOnYeyJyUEAW0kVd1VJ
        wmGAHIw0hWGGW4fLxKn0T0qhCKPHYjKiw8SR1ujr7Z/twQcAAAD//wMAq+oeaK8BAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94d70cb1c10f4-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:54 GMT
      Function-Execution-Id:
      - edh3785v0vca
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '2475'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - c68cb813d1057241cbe711f8a2f7d43b;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89438'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 374ms
      X-Request-Id:
      - 96665b4ddd6e8f66b27afe3454c25d44
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["Andre Geim and Konstantin Novoselov, University of Manchester,
      for their experiments on graphene, a two-dimensional material."], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '204'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        P//x/wAAAP//AwDdgpZ+4yAAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94d875e7f61e0-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:55 GMT
      Function-Execution-Id:
      - edh3up6zgtvv
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '352'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - c700adf31be0c87a6f65daad3b3fb382
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 218f7b4182122a4abc46b4478e630a3d
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "Andre Geim and Konstantin Novoselov from the University of Manchester
      were awarded for their experiments on graphene, a two-dimensional material.",
      "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '222'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        IAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94d913c398140-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:57 GMT
      Function-Execution-Id:
      - edh3a5lsm8nk
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '247'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - f9b19c031cfa978744eb509a32eeee58
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 30d5d360293b74e0a8b00b9c38daf18a
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text; include any information that can be
      used to answer the question \"2010 Nobel Prize in Physics winner\". Do not directly
      answer the question itself:\n\n\nLITERAL TEXT: \"\"\"Skip to content This website
      uses cookies to improve the user experience. By using this website you consent
      to all cookies in accordance with our cookie policy.I understand Close the search
      form A button that allows you to close the search form if needed Close the search
      form A button that allows you to close the search form if needed Close Mobile
      Menu The Nobel Prize The Nobel Prize Logo Toggle Mobile Menu Nobel Prizes &
      Laureates All Nobel Prizes Physics Prize Chemistry Prize Medicine Prize Literature
      Prize Peace Prize Prize in Economic Sciences Quick facts Nomination Physics
      Prize Chemistry Prize Medicine Prize Literature Prize Peace Prize Prize in Economic
      Sciences Nomination Archive Alfred Nobel Alfred Nobel\u2019s life Alfred Nobel\u2019s
      will News & insights Press In-depth Events Public events Nobel Prize Concert
      Nobel Week Dialogue Nobel Prize Dialogue Nobel Prize Summit Nobel Prize Inspiration
      Initiative Nobel Prize award ceremonies Educational Close the search form A
      button that allows you to close the search form if needed Close the search form
      A button that allows you to close the search form if needed Header Search Submit
      a search term Allows users to submit a search term Physics The Nobel Prize in
      Physics 2010 Explore Summary Physics Prizes Chemistry Prizes Medicine Prizes
      Literature Prizes Peace Prizes Prizes in Economic Sciences Summary Prize announcement
      Press release Advanced information Popular information Illustrated information
      Speed read Award ceremony video Award ceremony speech Banquet video Laureates
      Andre Geim Konstantin Novoselov Enhanced Page Navigation The Nobel Prize in
      Physics 2010 The Nobel Prize in Physics 2010 - Prize announcement The 2010 Nobel
      Prize in Physics - Press release The Nobel Prize in Physics 2010 Andre Geim
      Konstantin Novoselov Share this Share on Facebook: The Nobel Prize in Physics
      2010 Share this content on Facebook Facebook Tweet: The Nobel Prize in Physics
      2010 Share this content on Twitter Twitter Share on LinkedIn: The Nobel Prize
      in Physics 2010 Share this content on LinkedIn LinkedIn Share via Email: The
      Nobel Prize in Physics 2010 Share this content via Email Email this page The
      Nobel Prize in Physics 2010 \u00a9 The Nobel Foundation. Photo: U. Montan Andre
      Geim Prize share: 1/2 \u00a9 The Nobel Foundation. Photo: U. Montan Konstantin
      Novoselov Prize share: 1/2 The Nobel Prize in Physics 2010 was awarded jointly
      to Andre Geim and Konstantin Novoselov \"for groundbreaking experiments regarding
      the two-dimensional material graphene\" To cite this section MLA style: The
      Nobel Prize in Physics 2010. NobelPrize.org. Nobel Prize Outreach AB 2023. Sat.
      3 Jun 2023. <https://www.nobelprize.org/prizes/physics/2010/summary/> Back to
      top Back To Top Takes users back to the top of the page Nobel Prizes and laureates
      Nobel Prizes 2022 Fourteen laureates were awarded a Nobel Prize in 2022, for
      achievements that have conferred the greatest benefit to humankind. Their work
      and discoveries range from paleogenomics and click chemistry to documenting
      war crimes.See them all presented here. Explore prizes and laureates Look for
      popular awards and laureates in different fields, and discover the history of
      the Nobel Prize. Select the category or categories you would like to filter
      by Physics Chemistry Medicine Literature Peace Economic Sciences Select the
      category or categories you would like to filter by Physics Chemistry Medicine
      Literature Peace Economic Sciences Decrease the year by one - Choose a year
      you would like to search in Increase the year by one + Explore About the Nobel
      Prize organisation The Nobel Foundation Tasked with a mission to manage Alfred
      Nobel''s fortune and has\u00a0ultimate responsibility for fulfilling the intentions
      of Nobel''s will. The prize-awarding institutions For more than a century, these
      academic institutions have worked independently to select Nobel Prize laureates.
      Nobel Prize outreach activities Several outreach organisations and activities
      have been developed to inspire generations and disseminate knowledge about the
      Nobel Prize. Press Contact FAQ Privacy policy Technical support Terms of use
      For developers Media player Join us Facebook Twitter Icon Follow The Nobel Prize
      on Twitter Twitter Instagram Icon Follow The Nobel Prize on Instagram Instagram
      Youtube Icon Follow The Nobel Prize on Youtube Youtube LinkedIn IconConnect
      with The Nobel Prize on LinkedIn LinkedIn The Nobel Prize Copyright \u00a9 Nobel
      Prize Outreach AB 2023\"\"\"\n\n\nCONCISE SUMMARY: The text is best summarized
      as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4869'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SOTW/TQBCG7/yK0ZzXkY1rSPcGlyJVjdoLBaGq2qwn9oB3ZrU7aQpR/jsKou31
        /Xj0HJFH9BjnYDHlpfm4uam78er+8123a++/pfT1cHN5l+WL5ek7OtTtT4r2/7GKmvJCxiroMBYK
        RiP67sN6WLf9eugdJh1pQY9TtqZfDY3ty1abtm87dLivYSL0R8xFU7ZH018kFf1l1zp8Y7/m/eDQ
        1MLytrwYTg7jrBypov9xxET1hVp0IfQYauVqQezsqGIkZ/8gonuJLBPYTPC+7VrY6JYWuC38h4AF
        bufflWOFA4tQqQ4+yVgIrogTBBnhWuUflwU2+qSVFn1ysNNyJnIBes5UOJFYBRWYSsgzCTkIYAdt
        xnNVWSUskIJR4bCs8ORwx8J1fiwUqgp6rKYZHbKM9Iy+PT2c3v0FAAD//wMAqRRYQLcBAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d18c04588db0280-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sat, 03 Jun 2023 14:50:57 GMT
      Function-Execution-Id:
      - sdi1g00pdthf
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '3394'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 1560f4f146c5a74a696ce9203436d7f7;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '88318'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 1.121s
      X-Request-Id:
      - 987099714f2959f4f801b6be3b2e3318
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["Skip to content This website uses cookies to improve the user
      experience. By using this website you consent to all cookies in accordance with
      our cookie policy.I understand Close the search form A button that allows you
      to close the search form if needed Close the search form A button that allows
      you to close the search form if needed Close Mobile Menu The Nobel Prize The
      Nobel Prize Logo Toggle Mobile Menu Nobel Prizes & Laureates All Nobel Prizes
      Physics Prize Chemistry Prize Medicine Prize Literature Prize Peace Prize Prize
      in Economic Sciences Quick facts Nomination Physics Prize Chemistry Prize Medicine
      Prize Literature Prize Peace Prize Prize in Economic Sciences Nomination Archive
      Alfred Nobel Alfred Nobel\u2019s life Alfred Nobel\u2019s will News & insights
      Press In-depth Events Public events Nobel Prize Concert Nobel Week Dialogue
      Nobel Prize Dialogue Nobel Prize Summit Nobel Prize Inspiration Initiative Nobel
      Prize award ceremonies Educational Close the search form A button that allows
      you to close the search form if needed Close the search form A button that allows
      you to close the search form if needed Header Search Submit a search term Allows
      users to submit a search term Physics The Nobel Prize in Physics 2010 Explore
      Summary Physics Prizes Chemistry Prizes Medicine Prizes Literature Prizes Peace
      Prizes Prizes in Economic Sciences Summary Prize announcement Press release
      Advanced information Popular information Illustrated information Speed read
      Award ceremony video Award ceremony speech Banquet video Laureates Andre Geim
      Konstantin Novoselov Enhanced Page Navigation The Nobel Prize in Physics 2010
      The Nobel Prize in Physics 2010 - Prize announcement The 2010 Nobel Prize in
      Physics - Press release The Nobel Prize in Physics 2010 Andre Geim Konstantin
      Novoselov Share this Share on Facebook: The Nobel Prize in Physics 2010 Share
      this content on Facebook Facebook Tweet: The Nobel Prize in Physics 2010 Share
      this content on Twitter Twitter Share on LinkedIn: The Nobel Prize in Physics
      2010 Share this content on LinkedIn LinkedIn Share via Email: The Nobel Prize
      in Physics 2010 Share this content via Email Email this page The Nobel Prize
      in Physics 2010 \u00a9 The Nobel Foundation. Photo: U. Montan Andre Geim Prize
      share: 1/2 \u00a9 The Nobel Foundation. Photo: U. Montan Konstantin Novoselov
      Prize share: 1/2 The Nobel Prize in Physics 2010 was awarded jointly to Andre
      Geim and Konstantin Novoselov \"for groundbreaking experiments regarding the
      two-dimensional material graphene\" To cite this section MLA style: The Nobel
      Prize in Physics 2010. NobelPrize.org. Nobel Prize Outreach AB 2023. Sat. 3
      Jun 2023. <https://www.nobelprize.org/prizes/physics/2010/summary/> Back to
      top Back To Top Takes users back to the top of the page Nobel Prizes and laureates
      Nobel Prizes 2022 Fourteen laureates were awarded a Nobel Prize in 2022, for
      achievements that have conferred the greatest benefit to humankind. Their work
      and discoveries range from paleogenomics and click chemistry to documenting
      war crimes.See them all presented here. Explore prizes and laureates Look for
      popular awards and laureates in different fields, and discover the history of
      the Nobel Prize. Select the category or categories you would like to filter
      by Physics Chemistry Medicine Literature Peace Economic Sciences Select the
      category or categories you would like to filter by Physics Chemistry Medicine
      Literature Peace Economic Sciences Decrease the year by one - Choose a year
      you would like to search in Increase the year by one + Explore About the Nobel
      Prize organisation The Nobel Foundation Tasked with a mission to manage Alfred
      Nobel''s fortune and has\u00a0ultimate responsibility for fulfilling the intentions
      of Nobel''s will. The prize-awarding institutions For more than a century, these
      academic institutions have worked independently to select Nobel Prize laureates.
      Nobel Prize outreach activities Several outreach organisations and activities
      have been developed to inspire generations and disseminate knowledge about the
      Nobel Prize. Press Contact FAQ Privacy policy Technical support Terms of use
      For developers Media player Join us Facebook Twitter Icon Follow The Nobel Prize
      on Twitter Twitter Instagram Icon Follow The Nobel Prize on Instagram Instagram
      Youtube Icon Follow The Nobel Prize on Youtube Youtube LinkedIn IconConnect
      with The Nobel Prize on LinkedIn LinkedIn The Nobel Prize Copyright \u00a9 Nobel
      Prize Outreach AB 2023"], "model": "text-embedding-ada-002", "encoding_format":
      "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4559'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        /uUgAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d18c0811e101106-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sat, 03 Jun 2023 14:51:03 GMT
      Function-Execution-Id:
      - sdi11njw4waa
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '171'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 02a67934988d7b19a053f870e84a29c2;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - cec8f681ebc9587e35361eba2b653730
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. replace_in_file: Replace text or code in a file, args: \"filename\":
      \"<filename>\", \"old_text\": \"<old_text>\", \"new_text\": \"<new_text>\",
      \"occurrence_index\": \"<occurrence_index>\"\n6. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n7. delete_agent: Delete
      GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks: Get hyperlinks, args:
      \"url\": \"<url>\"\n9. get_text_summary: Get text summary, args: \"url\": \"<url>\",
      \"question\": \"<question>\"\n10. list_agents: List GPT Agents, args: () ->
      str\n11. message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\":
      \"<message>\"\n12. start_agent: Start GPT Agent, args: \"name\": \"<name>\",
      \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n13. browse_website:
      Browse Website, args: \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3499'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA5xTS4/bNhC+91cM5rIX+bWpN7VuSYAgPrRdFNtDUgUGTY2kyUqkyhlF6y783wtK
        tmt7gRTJjRgOvxdnnpFzTNFWRm3T1pPXv692b+7e/XF3t/KfPoYP4X396X79Nvz6sP1YYIJ++4Ws
        Hl5MrW/ampS9wwRtIKOUY7q4+2W5Wt0ul/MEG59TjSmWrU5eTZcT7cLWT+av5gtMsBNTEqbP2Abf
        tLpR/0hOMH29WiT4H/apfrtcJKheTX0qLeY/3+4TtJVnS4LpX8/YkBxxg68JUzQiLGqcRpXeKbno
        4DlzAAAZauW7slLJMIVD8XBBTxqLGa7BEeWgHgp2OfhOoa889N6BVgS388UcfvNbquE+8D8E7OC+
        2glbAeNy6AMrxU4O4ExDkoApCq45Bgad468UhHWXDN05i/VfKewin4GCa5rCGqxxIGqCwnYHQibY
        il058LNTCo4UCh8OhcKHxsT0phkm56YCGfGOXXntrDRaUTh/ClsqfKAD92iC9VzVwzk5Cxgovc+h
        rY2l2DfovVbQ1saN5BP4U4Zc4GYbfC+06WkrrHQD1jdNDCOCDF4Hb+fi/j/7LHNnDIP+jfpNlH5B
        cPqeC/yTzSv5NrCyZWmuA2zMI4F0IUIZfYG3HmcnpmRtF4zS8NtD7xpMA84rNCwSf9W4HXDT+hDH
        FnJSw7VcByktmcejip7r+hjVi5n4vtwuZxZ6do6C3Pzg6GY4at4nx4U7RP9i3yL+aOdyGq5sm1Be
        7+p40YV6fF6ptpLOZn3fT1202EaHUx/K2XCSWTs6ncUUZtI1jQm72QXPCPl3RxJTG3G/ldmY0tHs
        YPjgO3N73CdYsGOpNuP+YYqivsUE2eX0hOl8/3n/078AAAD//wMAq+o0Ro4FAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d2abf20bfa0e1ad-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 05 Jun 2023 19:16:11 GMT
      Function-Execution-Id:
      - jr0a3r4zc0f2
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '20449'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 7f7c58972e5d48ae0174ba73dfc444ae;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86506'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.328s
      X-Request-Id:
      - 8029ce971e925a5ab37442a77ec4eb1a
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text; include any information that can be
      used to answer the question \"2010 Nobel Prize in Physics winner\". Do not directly
      answer the question itself:\n\n\nLITERAL TEXT: \"\"\"Skip to content This website
      uses cookies to improve the user experience. By using this website you consent
      to all cookies in accordance with our cookie policy.I understand Close the search
      form A button that allows you to close the search form if needed Close the search
      form A button that allows you to close the search form if needed Close Mobile
      Menu The Nobel Prize The Nobel Prize Logo Toggle Mobile Menu Nobel Prizes &
      Laureates All Nobel Prizes Physics Prize Chemistry Prize Medicine Prize Literature
      Prize Peace Prize Prize in Economic Sciences Quick facts Nomination Physics
      Prize Chemistry Prize Medicine Prize Literature Prize Peace Prize Prize in Economic
      Sciences Nomination Archive Alfred Nobel Alfred Nobel\u2019s life Alfred Nobel\u2019s
      will News & insights Press In-depth Events Public events Nobel Prize Concert
      Nobel Week Dialogue Nobel Prize Dialogue Nobel Prize Summit Nobel Prize Inspiration
      Initiative Nobel Prize award ceremonies Educational Close the search form A
      button that allows you to close the search form if needed Close the search form
      A button that allows you to close the search form if needed Header Search Submit
      a search term Allows users to submit a search term Physics The Nobel Prize in
      Physics 2010 Explore Summary Physics Prizes Chemistry Prizes Medicine Prizes
      Literature Prizes Peace Prizes Prizes in Economic Sciences Summary Prize announcement
      Press release Advanced information Popular information Illustrated information
      Speed read Award ceremony video Award ceremony speech Banquet video Laureates
      Andre Geim Konstantin Novoselov Enhanced Page Navigation The Nobel Prize in
      Physics 2010 The Nobel Prize in Physics 2010 - Prize announcement The 2010 Nobel
      Prize in Physics - Press release The Nobel Prize in Physics 2010 Andre Geim
      Konstantin Novoselov Share this Share on Facebook: The Nobel Prize in Physics
      2010 Share this content on Facebook Facebook Tweet: The Nobel Prize in Physics
      2010 Share this content on Twitter Twitter Share on LinkedIn: The Nobel Prize
      in Physics 2010 Share this content on LinkedIn LinkedIn Share via Email: The
      Nobel Prize in Physics 2010 Share this content via Email Email this page The
      Nobel Prize in Physics 2010 \u00a9 The Nobel Foundation. Photo: U. Montan Andre
      Geim Prize share: 1/2 \u00a9 The Nobel Foundation. Photo: U. Montan Konstantin
      Novoselov Prize share: 1/2 The Nobel Prize in Physics 2010 was awarded jointly
      to Andre Geim and Konstantin Novoselov \"for groundbreaking experiments regarding
      the two-dimensional material graphene\" To cite this section MLA style: The
      Nobel Prize in Physics 2010. NobelPrize.org. Nobel Prize Outreach AB 2023. Mon.
      5 Jun 2023. <https://www.nobelprize.org/prizes/physics/2010/summary/> Back to
      top Back To Top Takes users back to the top of the page Nobel Prizes and laureates
      Nobel Prizes 2022 Fourteen laureates were awarded a Nobel Prize in 2022, for
      achievements that have conferred the greatest benefit to humankind. Their work
      and discoveries range from paleogenomics and click chemistry to documenting
      war crimes.See them all presented here. Explore prizes and laureates Look for
      popular awards and laureates in different fields, and discover the history of
      the Nobel Prize. Select the category or categories you would like to filter
      by Physics Chemistry Medicine Literature Peace Economic Sciences Select the
      category or categories you would like to filter by Physics Chemistry Medicine
      Literature Peace Economic Sciences Decrease the year by one - Choose a year
      you would like to search in Increase the year by one + Explore About the Nobel
      Prize organisation The Nobel Foundation Tasked with a mission to manage Alfred
      Nobel''s fortune and has\u00a0ultimate responsibility for fulfilling the intentions
      of Nobel''s will. The prize-awarding institutions For more than a century, these
      academic institutions have worked independently to select Nobel Prize laureates.
      Nobel Prize outreach activities Several outreach organisations and activities
      have been developed to inspire generations and disseminate knowledge about the
      Nobel Prize. Press Contact FAQ Privacy policy Technical support Terms of use
      For developers Media player Join us Facebook Twitter Icon Follow The Nobel Prize
      on Twitter Twitter Instagram Icon Follow The Nobel Prize on Instagram Instagram
      Youtube Icon Follow The Nobel Prize on Youtube Youtube LinkedIn IconConnect
      with The Nobel Prize on LinkedIn LinkedIn The Nobel Prize Copyright \u00a9 Nobel
      Prize Outreach AB 2023\"\"\"\n\n\nCONCISE SUMMARY: The text is best summarized
      as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4869'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SOTW/TQBCG7/yK0ZzXkd2QUvtGDyCE1BYOIIRQtdmd2pOsZ6zdcZ00yn9HQUCv
        79fznpAjdhgGb2GcUvXuvj1S/aXpd9dfP1m4/fFhvj3wt5d9uY/f0aFudxTsb2MVdJwSGaugw5DJ
        G0XsmuubTdtebW5qh6NGSthhP1m1Xm0qm/NWq3pdN+hwLr4n7E44ZR0nezTdkxTs2qZ2+Lr9X1+3
        Dk3Np9fk2/bsMAzKgQp2P084Uvm3mjURduhL4WJe7PJRxUgu/72IzhJYerCB4KpuarjTLSV4yPxC
        wAIPw7FwKA6WgcMAiy/gF58jRdgpi6UjmMJ7iZngI/EIXiJ8VvkDY4E7fdZCSZ/hSfOFwhn6rLPE
        bSa/v6DpMFHmkcQKLGwD9NlPAwk58GCLVvFiFlbxCUZvlNmnFZ4dPrFwGR4z+aKCHRbTCR2yRDpg
        V59/nd/8BgAA//8DAArrCubcAQAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d2abfdc6e1f2c7c-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 05 Jun 2023 19:16:24 GMT
      Function-Execution-Id:
      - jr0a0wun4aul
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '3674'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 111a8c25049d45025f780d997a4705f5;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '88318'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 1.121s
      X-Request-Id:
      - 39ac5ef57f62a4e5bf71b16d6e1d4a61
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["Skip to content This website uses cookies to improve the user
      experience. By using this website you consent to all cookies in accordance with
      our cookie policy.I understand Close the search form A button that allows you
      to close the search form if needed Close the search form A button that allows
      you to close the search form if needed Close Mobile Menu The Nobel Prize The
      Nobel Prize Logo Toggle Mobile Menu Nobel Prizes & Laureates All Nobel Prizes
      Physics Prize Chemistry Prize Medicine Prize Literature Prize Peace Prize Prize
      in Economic Sciences Quick facts Nomination Physics Prize Chemistry Prize Medicine
      Prize Literature Prize Peace Prize Prize in Economic Sciences Nomination Archive
      Alfred Nobel Alfred Nobel\u2019s life Alfred Nobel\u2019s will News & insights
      Press In-depth Events Public events Nobel Prize Concert Nobel Week Dialogue
      Nobel Prize Dialogue Nobel Prize Summit Nobel Prize Inspiration Initiative Nobel
      Prize award ceremonies Educational Close the search form A button that allows
      you to close the search form if needed Close the search form A button that allows
      you to close the search form if needed Header Search Submit a search term Allows
      users to submit a search term Physics The Nobel Prize in Physics 2010 Explore
      Summary Physics Prizes Chemistry Prizes Medicine Prizes Literature Prizes Peace
      Prizes Prizes in Economic Sciences Summary Prize announcement Press release
      Advanced information Popular information Illustrated information Speed read
      Award ceremony video Award ceremony speech Banquet video Laureates Andre Geim
      Konstantin Novoselov Enhanced Page Navigation The Nobel Prize in Physics 2010
      The Nobel Prize in Physics 2010 - Prize announcement The 2010 Nobel Prize in
      Physics - Press release The Nobel Prize in Physics 2010 Andre Geim Konstantin
      Novoselov Share this Share on Facebook: The Nobel Prize in Physics 2010 Share
      this content on Facebook Facebook Tweet: The Nobel Prize in Physics 2010 Share
      this content on Twitter Twitter Share on LinkedIn: The Nobel Prize in Physics
      2010 Share this content on LinkedIn LinkedIn Share via Email: The Nobel Prize
      in Physics 2010 Share this content via Email Email this page The Nobel Prize
      in Physics 2010 \u00a9 The Nobel Foundation. Photo: U. Montan Andre Geim Prize
      share: 1/2 \u00a9 The Nobel Foundation. Photo: U. Montan Konstantin Novoselov
      Prize share: 1/2 The Nobel Prize in Physics 2010 was awarded jointly to Andre
      Geim and Konstantin Novoselov \"for groundbreaking experiments regarding the
      two-dimensional material graphene\" To cite this section MLA style: The Nobel
      Prize in Physics 2010. NobelPrize.org. Nobel Prize Outreach AB 2023. Mon. 5
      Jun 2023. <https://www.nobelprize.org/prizes/physics/2010/summary/> Back to
      top Back To Top Takes users back to the top of the page Nobel Prizes and laureates
      Nobel Prizes 2022 Fourteen laureates were awarded a Nobel Prize in 2022, for
      achievements that have conferred the greatest benefit to humankind. Their work
      and discoveries range from paleogenomics and click chemistry to documenting
      war crimes.See them all presented here. Explore prizes and laureates Look for
      popular awards and laureates in different fields, and discover the history of
      the Nobel Prize. Select the category or categories you would like to filter
      by Physics Chemistry Medicine Literature Peace Economic Sciences Select the
      category or categories you would like to filter by Physics Chemistry Medicine
      Literature Peace Economic Sciences Decrease the year by one - Choose a year
      you would like to search in Increase the year by one + Explore About the Nobel
      Prize organisation The Nobel Foundation Tasked with a mission to manage Alfred
      Nobel''s fortune and has\u00a0ultimate responsibility for fulfilling the intentions
      of Nobel''s will. The prize-awarding institutions For more than a century, these
      academic institutions have worked independently to select Nobel Prize laureates.
      Nobel Prize outreach activities Several outreach organisations and activities
      have been developed to inspire generations and disseminate knowledge about the
      Nobel Prize. Press Contact FAQ Privacy policy Technical support Terms of use
      For developers Media player Join us Facebook Twitter Icon Follow The Nobel Prize
      on Twitter Twitter Instagram Icon Follow The Nobel Prize on Instagram Instagram
      Youtube Icon Follow The Nobel Prize on Youtube Youtube LinkedIn IconConnect
      with The Nobel Prize on LinkedIn LinkedIn The Nobel Prize Copyright \u00a9 Nobel
      Prize Outreach AB 2023"], "model": "text-embedding-ada-002", "encoding_format":
      "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4559'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        AGG8SoDlIAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d2ac01d3a4a10b2-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 05 Jun 2023 19:16:31 GMT
      Function-Execution-Id:
      - jr0a3zll0eul
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '61'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 17bd928b941a8be62bd091e612b5b44b;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - e44d659a8158a48556b7724f459bfee3
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "announcing the 2010 Nobel Prize in Physics, which was awarded
      jointly to Andre Geim and Konstantin Novoselov for their groundbreaking experiments
      with graphene, a two-dimensional material.", "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '265'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        AAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d2ac021ae79e25c-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 05 Jun 2023 19:16:31 GMT
      Function-Execution-Id:
      - jr0aprv4q027
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '22'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - e1fc553221858fed0647d609ef0a8f8f
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 3ca396b80a7f786f0559a535cf0742a8
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. replace_in_file: Replace text or code in a file, args: \"filename\":
      \"<filename>\", \"old_text\": \"<old_text>\", \"new_text\": \"<new_text>\",
      \"occurrence_index\": \"<occurrence_index>\"\n6. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n7. delete_agent: Delete
      GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks: Get hyperlinks, args:
      \"url\": \"<url>\"\n9. get_text_summary: Get text summary, args: \"url\": \"<url>\",
      \"question\": \"<question>\"\n10. list_agents: List GPT Agents, args: () ->
      str\n11. message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\":
      \"<message>\"\n12. start_agent: Start GPT Agent, args: \"name\": \"<name>\",
      \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n13. browse_website:
      Browse Website, args: \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out who won the
      2010 Nobel Prize in Physics and write their names, affiliated university, and
      discovery to a file. I can start by searching the internet for the information.\",\n        \"reasoning\":
      \"I need to gather information before I can write it to a file. The internet
      is a good place to start.\",\n        \"plan\": \"- Use the ''browse_website''
      command to search for information on the 2010 Nobel Prize in Physics\\n- Use
      the ''write_to_file'' command to write the information to a file\",\n        \"criticism\":
      \"I need to make sure that the information I find is accurate and that I am
      not missing any important details.\",\n        \"speak\": \"I will search the
      internet for information on the 2010 Nobel Prize in Physics and write the winners''
      names, affiliated university, and discovery to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: announcing
      the 2010 Nobel Prize in Physics, which was awarded jointly to Andre Geim and
      Konstantin Novoselov for their groundbreaking experiments with graphene, a two-dimensional
      material.\n\nLinks: [''\\nSkip to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '5808'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6yUQW/bSAyF7/0VBC+5yIadwEmsWy9bpItNAzRFD/XCGEuUxFpDCjO0HW/g/74Y
        2Y4bZ9HuoTdhyPnmvTdDPSOXmGPROCt81w5uPk23q4evf8j90029dNPi5uH7so7vPz8+frzBDHXx
        nQo77BgW6ruWjFUwwyKQMyoxH1/fTqbTy8n0OkOvJbWYY93Z4Go4GdgqLHQwuhqNMcNVdDVh/oxd
        UN/Z3HRJEjEfX41vMzzBXwqX15MMTc21p97J7dUuw6JRLihi/u0ZPcUjOGhLmKOLkaM5sSRTxUiS
        heeZAADM0Bpd1Y3FGeZwWDwU6MnS4gzvoHFrgkpXUoI1BCyVBu+SPLgDISqHcK+bwzeYwiawUd+7
        YREK8QLEeYoZuKrillNYsBJeU4hs2wyclFByLHRNYZsIDipuaQh3UDiBVdzTLnrw3HSeqhdQqPdp
        qymUCtZwHM4w+9FGIBdVWOpXXv7bRa9CXhmJqZvtR0WPP9HBsUcvKBpo16MrDb0wMBeX5+q61sle
        2AC+/Nrjb4v1TEYR2Ljg6I8hHe17tySIq5AOdfYmNo69JCOBQkOgwtptf2bffQfOg6iB5xhZanCy
        BfadhvQcoSRz3L65sNiRWx51bLht/8/l/8Zg9lp22XFADqe8mY/E38t8JevMjQv1+WjtC6n3hLgc
        jUdz0QW18y7wPzQ/2BhaGsLsfPNpNh9PlkGrPoHEgvvEgofEAhZ4aLaRiwguELyXMhB8IPZ9Cn+q
        9L8HFrjXtUZqdQ1VUN/DvrxklvB/OSkaikbh8KyJA9Qh/RgWgdwyXTI9dRTYk1iEDVsDdXBdQ0IZ
        OLCNDspUjKziWvDOKLBrX3Lvsz9cwUx2uMuwYuHYzPeDjDlG0w4zZCnpCfPR7u/du38BAAD//wMA
        8FpUB8oFAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d2ac03dcff18728-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 05 Jun 2023 19:16:57 GMT
      Function-Execution-Id:
      - jr0ai2h5qm4c
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '21719'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - ad4efa1e52a0c768dec05acd2f03ed56
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86017'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.655s
      X-Request-Id:
      - bf966855adf25fda7515658e9c08132a
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. replace_in_file: Replace text or code in a file, args: \"filename\":
      \"<filename>\", \"old_text\": \"<old_text>\", \"new_text\": \"<new_text>\",
      \"occurrence_index\": \"<occurrence_index>\"\n6. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n7. delete_agent: Delete
      GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks: Get hyperlinks, args:
      \"url\": \"<url>\"\n9. get_text_summary: Get text summary, args: \"url\": \"<url>\",
      \"question\": \"<question>\"\n10. list_agents: List GPT Agents, args: () ->
      str\n11. message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\":
      \"<message>\"\n12. start_agent: Start GPT Agent, args: \"name\": \"<name>\",
      \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n13. browse_website:
      Browse Website, args: \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out who won the
      2010 Nobel Prize in Physics and write their names, affiliated university, and
      discovery to a file. I can start by searching the internet for the information.\",\n        \"reasoning\":
      \"I need to gather information before I can write it to a file. The internet
      is a good place to start.\",\n        \"plan\": \"- Use the ''browse_website''
      command to search for information on the 2010 Nobel Prize in Physics\\n- Use
      the ''write_to_file'' command to write the information to a file\",\n        \"criticism\":
      \"I need to make sure that the information I find is accurate and that I am
      not missing any important details.\",\n        \"speak\": \"I will search the
      internet for information on the 2010 Nobel Prize in Physics and write the winners''
      names, affiliated university, and discovery to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: announcing
      the 2010 Nobel Prize in Physics, which was awarded jointly to Andre Geim and
      Konstantin Novoselov for their groundbreaking experiments with graphene, a two-dimensional
      material.\n\nLinks: [''\\nSkip to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have found the information I need. Now I need to write
      the winners'' names, affiliated university, and discovery to a file. I can use
      the ''write_to_file'' command to do this.\",\n        \"reasoning\": \"I have
      the information I need and now I need to save it to a file. The ''write_to_file''
      command is the best option for this task.\",\n        \"plan\": \"- Use the
      ''write_to_file'' command to write the winners'' names, affiliated university,
      and discovery to a file.\",\n        \"criticism\": \"I need to make sure that
      the information is written correctly and that I am not missing any important
      details.\",\n        \"speak\": \"I will use the ''write_to_file'' command to
      write the winners'' names, affiliated university, and discovery to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"2010_nobel_prize_winners.txt\",\n            \"text\": \"The winners of the
      2010 Nobel Prize in Physics are Andre Geim and Konstantin Novoselov from the
      University of Manchester for their groundbreaking experiments with graphene,
      a two-dimensional material.\"\n        }\n    }\n}"}, {"role": "system", "content":
      "Command write_to_file returned: File written to successfully."}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7248'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7SST2/aQBDF7/0Uo7nkYpCBkhQfK1UItVEPUaVKJbKG9WBv8e5au+MAQf7u1cYm
        RLSXHnKdP+/93u6cUBeYoapIlGnq0d33xfPDsvgiD5+Xy8NP12wV3X+8r74V++YrJug2v1nJsDFW
        zjQ1i3YWE1SeSbjAbHL7ab5YTG9naYLGFVxjhmUjo9l4PpLWb9wonaUTTLANVDJmJ2y8M43k4nZs
        QxSYzhO8iF8ad2mC4oTqN6XFvEtQVU4rDpj9OqHhcBb2rmbMkELQQchKxHRW2MYIp7UFAFijVK4t
        KwlrzGAoDg0+SCyucQUVPTEMTFyAOYJQ2I1hBYostIFBKoYbz1TkW13zTRw2ZAsQB0/s9fYIUpG8
        jGm7dd5QDAd7CrD3WoQtKOc9K6mP4zUmb0k8U3BW2/KMsycrUdnQjiG0nv9DHF6o4ngPT0pxCKDl
        2rWpyfaGI/jxzgmV16KVDuac0DIX/0i4AjKgKlY7bcsXq0ESItMl2jWEDjFn60n42jo0TLvXh9V1
        /R7f2Rt2yfnoBrm/bs6S4Z7l1fsKl3x5fap9I85e1qfpJM2t23CdN14/c77X1rIPY4lHfdntBrK1
        7bBLcKutDlXeHxxmGMQ1mKC2BR8wS7vH7sMfAAAA//8DALO70mA1BAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d2ac1117aaa011d-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 05 Jun 2023 19:17:24 GMT
      Function-Execution-Id:
      - d7g9ijbyzvk7
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '14752'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 49d7e3c9537870af14c88fd8f2b9e341;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86004'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.664s
      X-Request-Id:
      - a039290e5195fe745c2d1412d3f43083
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"The winners
      of the 2010 Nobel Prize in Physics are Andre Geim and Konstantin Novoselov from
      the University of Manchester for their groundbreaking experiments with graphene,
      a two-dimensional material.\"\"\"\n\n\nCONCISE SUMMARY: The text is best summarized
      as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '441'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SOQW/TQBCF7/yK0ZzXkd20abO3nDgAwUhthUCo2qzH8VDvjNmdJk2j/HeUqpTr
        97739I7IHXqMQ7CYprG6/rp8eWxXcr9vN/2PdfPnW736vrrNy8/t4YAOdfObor01ZlHTNJKxCjqM
        mYJRh75Z3FwtlxeLyxuHSTsa0eN2smo+u6rsKW+0qud1gw6fStgS+iNOWdNkD6aPJAX99aXD/9Pv
        eL5waGphfCdNU58cxkE5UkH/84iJyr/RrCOhx1AKFwti54sqRnK+v5IuE3wkThCkg08qrw4LrHWn
        hUbdQZ81gQ0Ed8I7yoXtANrDlyBxoGKUYa/yKlzUTQ1r3dAIbeYXAhZoh0PhWKDXfHY4Az1PlDmR
        WIE92wDbHKaBhBwEsL1W3TksrBJGSMEocxhneHLYs3AZHjKFooIei+mEDlk6ekZfn36dPvwFAAD/
        /wMAMW50BckBAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d2ac182c9422303-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 05 Jun 2023 19:17:31 GMT
      Function-Execution-Id:
      - d7g9b9208sc6
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '2966'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 3b83189f5ede7c2e73825737f7ae17b5;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85662'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.891s
      X-Request-Id:
      - bd6240cbf1619d585518acbb3c6f560d
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["The winners of the 2010 Nobel Prize in Physics are Andre Geim
      and Konstantin Novoselov from the University of Manchester for their groundbreaking
      experiments with graphene, a two-dimensional material."], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '279'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        AA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d2ac19b28be018a-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 05 Jun 2023 19:17:32 GMT
      Function-Execution-Id:
      - d7g9q0le7y45
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '171'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 9dd09c449ccc81b77e26fa94c49af72c
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 05de1e36ebf3ac71fe2f29cda3a0d296
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "Andre Geim and Konstantin Novoselov from the University of Manchester
      won the 2010 Nobel Prize in Physics for their experiments with graphene, a two-dimensional
      material.", "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '247'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SaSxO6vLrl5/tTvPVO6V1yURL2jKsgt6AgYldXFygiICKXBJJT57t36X/X6XMm
        DoASCMl6fms9+Y9//PXX333RlLf573/99fernua//9f32D2f87//9df//sdff/3113/8fv/HlWVX
        lPd7/a5+l/9O1u97uf79r7/4/zry/y/6119/PzRQYW70ZmMdbuoAo3rIiBEIp3E8ujcVnh5LSopH
        5xeskipRwZWdE20tZ2N59PsbBI/bREKjbGISvTsTvtRODRctrmK2bA4tcF0OE5ft6ubj3IoaFsHb
        Cbe+5oGZcWdR9vFnJCaiyJsGN+YV3xrqP/9H+8dmgNr8eIfLdH0XuCIThkvH2eFR0jUghYfAhx4p
        QizQZIon/gAi+H6KFCdvaDU0ctctaKMoRv7nEhVzWK6uIhyFO7EMoTdYtKYUSrz3wFsDRvFcnbYV
        bODdRflSvUYa5fsTPMptTOIPFrzlk10rcNu87giRDQea5dToMIjUD2bufCiWt/FM4fMyKUi9vSqP
        3evtAF4aBwjixKRZok3Ywfc5DdBefIJ4Wfz1Bhkufcxlr3H8c383NTPkgKwbP3LzzEAgvt/k8JFc
        8JHApYfH3dMg6p1ZzSLW2xtE6gZjbrw9jeX1cnIgqeqEgtNpM05Rd6hhvpotSozbhlFYchWM0nuJ
        wbXgAS293oFmqisE2SZqlqmHEzBeJCKBFVE2KN7dhZxbBsgO4QssFpeV8KrvzsR7wMJYlOVcwrQx
        ynDlO7GYC8woDDuQhBuy4dj0yOhe4fxtRpw47wE5ewMP0fXjE7vgTg3JLzsXZlOaInVb1g1+HbYL
        bEXhiKXf+en88aGpfDxyDTinkHaV6sDhxp+IkahDvMjpoYWezdRw+nCxsTylnAN4xzvozF3fI13W
        JwXf70nQFq7eovnpHtp4pyDUSwJgvMU78HTya7zz/ICJDD5PoJTjI7Ju57mZpTpvQR6mY8iXH5Ot
        90uQwfYu2sieU8zYQ7u2oNVxSQ4C3Bu8nGodeLeRQjSUn9ja4TiEXMpRZFeJ7lGrvVTyIsgS8k4y
        ju824bdQNzAI21P7aWbtKsiQF3MHeVmACh4G7xZ6WI/RXqQopp6cVnC6wiOyw7PhTd6jlOUNuJ5Q
        sIs91h/Hlw99Zz8jq1+ksU8mXgf5g3TIhvw7XtSyX6Ci7m1iW3odEzQCE67TQ8CjvPU96lT6sMm5
        PiMFOWya9R7cMLzypxMyjiFi7KSOCbTZkuIzfqnF0o/yVl4HbSBeIVXFIrW2A+7b9oPX5/ACK4gc
        XR4fQAjn/KR6dHs7qkp/ch/I1xxuXLP+EEFHlHb403+sguXPJw/bIZnQ/m6a45/14oHWIbfCVmIK
        3lGtPD0/Q1dNS+Ml6YkKk7Zq0alJwxi/ZyGFg9WQsPTRrWDtsINQPpsdscvH1Zs/r10C77hGIa8Y
        AaCZqVQglVMNGZX1Gl8YHSnEGJeh0KHVI3V6oKCG3h0z1mfNqqtbHh4PKA3lE82NtXnsJ5igpMKi
        y6/NJKhuC8B55oi6LfVRmPtShDYGSvh67vRYaHoph8snPyFdPJXf+VGEUAV0g/bb1Iz5aFfLcGNH
        DxSOlDB81DRfEY7SHaFOrcYPP8CbXGqRQwx2OgB61LQQfDyvJ2qheQaeZaNXpu4mEt+WM7BMzVGH
        K6PXcBMvQYNJ1raQbpocmcqwjLStFRH89FZrb1XMDp/zDV4/Tk+07PIylnb7oZDJ3IoFJDcF+1xF
        E4ZsHxJ1TjOwlgcbQ+ZNCRbsljdqWV63SqWjgASiVzeTr/si6IrjSlRzzeLJkr0S4qS3yJn4jbHM
        3jCApxdmRD9oKhAm1YqgmaoKcmxz1+BacCp4n8tNKDx3dUwcKXbh2+8x0UY580TF2pUwUckthBe9
        bla+qEx4tc4VUS3dj4Xf976WKkeC9wBGdsgPJsDB5YnhbaTFfD8+MeDlIAwltJPiYRcWKXws/IkE
        YdAC+mC7CQSmvAmZ/aq8ZbN5QojtfYScA1oLSs84A8z9mCjOpUc8ncy6hDX3+n6PyxUM+LbroBCV
        9UyBGDfTuRRT0DzgK9wuUhUvVO7wH33zwEE1+DP6QDAtz4gY0VbzGOA+OnyVjwdWhtk1cHs/OSAK
        JYR55QqbgaOZCr76/BvfYoHBuwMocN7f8dl6tBacGlLOfSDrpXkNPfifCHZBfkTuc1OO9FAIPbzV
        2odYQAGMarJkAt2YAHGlPhyXEhARJJ9MRqa+1MUqyioEmnkrkXXJingQCteH2wv3Rv5GVeNRPdk9
        3F2QSQznqLBZl9Q9eG4uHu459+kt6+nsgLs72wTR9VqIQJxkIJzkOeSPyp7xlZVhOG/YhDllxWDu
        8lUES8HfQ7mMTk3nLS8ecPX+RpB9NsZJGXYL1Nf2jpxFUmP+eMv4nz6Sa/TAgO5zLMLJz2/IzIJr
        sbYw2gLBZgay1NtorMssD3BsaYjMY9oaNH4MpnypgEp0f/EZvfU0BC3TvZCmyXNkTUAW2C2OS+yD
        fffWCxh62CftQO7as2OrHlkhWNckxFu1ieOlB+gElW60kL+Z7gznia4DsfxgZHEkjde1eEOYFJIV
        GoUTF6Th615+VtntO/+vDXX1bSebHtcQr90F8VI8C04mzrIl/g128VKM/gCvyAxRsJPDZrxPnwTc
        T5eUeEJyiRf900cwZxUh+3vOCqba6ulXX5HrJbrHrrsoVOCIcCjSW9VMbjPK8HyJbsRN3oYhzYHt
        A8pfV7KftiPolUuWw2fuOeTLA2w1H1cMd2fxEELtempWeEwnKInvAYMHBN60+Gv54yeUlJ+WUdsO
        StBILU++fGSwWaEUTm9hxU+AH8VyTW/ljq8c4cuXgfHel2cI69hJyFcfi9WVYQbJ8XYh4et4GNeL
        VeQAT6eYWPt33fS3yxgpEqUtsk/jEVBZPffwHPh6uHsXD299Hw8uSPKbi+u9eDCmib5yYKL1g+xE
        PIwLGbwKCqQ4Ym7fTQ0rQvUmO6Kw+/EQWO2qqqHRLRWe1JtmzC9a+bK/Y2fksp3eMDwcM9jMVU7s
        dojY/HveusIHgg7i8K2vbg+imWokPLPVWPabtyPb1pYn/nQY2PQ+WCq0LvMLqWZxaFjtH80/810t
        tNFbkv6tyjvnlBBENiVYkBEPsNI8JfzpAdv0hxJSL3ujn55QiAYH6JKE8VbafIp1k8o1FPYzQ9rL
        UQD1lpcINX7xvnrAjc/zVDpA0kuJqGbxadhZk11oz0+deL2WjoI8n/bQOh9zEujltmD36ZnCwXR5
        ZKXuGSynsHBhvxibcJnTLVvXgnAgM7GD7GdtNzhqOA4q2kNHBx0BNhuU7SFt9/tw16Rt3P54LslL
        F3n4rhv0fo5E+OUFvDBqFuvt5ZlwGHIbszd/jJdXBTLgb/Oc7NmVGuv0dlzgXT2A9sww4kXK0xsY
        R+MRit/5T6Jaz+BB2zQhX+q18Zn7kofLySbhKm1YPImzxMu/5w2/PE39YNnDBKUVCkdv9ha8Pfjw
        gJ4XpA4CjUna9ipk9TEmPx4Tv/wEG3CV8YotwhivZje4860cz9P2ydhVMEL49R9YgdPBE64NjOD5
        /pyJ9a1vi2MZOvQcPiIpvakjk2yd+1Pvrtv7NFZRp1VgRUpE1F3Be1jd9TnYcdIJdxe3YuwRvTjY
        bAeTBIWYFLSdcA2OyUUlgVcMxZzDXQk3vitgUZWxRxldOuVyhFHIGzMDq7R2HLzEF48YuubF7Kfn
        3/WI0gDKbNTIld+Fgewi5PftiE/MuME3d0lDRdElRjls6EpmTg7yrkXCaHKc8t1PL788MFL6eJjg
        hsMaSwf7bsyMHEpY8roaev7V8Xg65inEIDCIerTfI+nnRwnODdPC1rg9wJePtzA2gBvST0Q9PG/e
        KdwuyorsQnt6uANAhRi+uD96vnQXF8NA6iVi6504LuZx3cL8BWVkhPuuwfCa/6kXyHld32waRZrD
        8R1ew+35VY1UD6MBgnFzRJYvCR6bjokva2UlkZ9e/PRUMVhshfzT9WIB5ZMLj+T2QYEptx7VMy2F
        KHDfyOk9PV6o4KnQ8PGeeIf02jDJ73qYX8tzyB2wANjZPvPwE+ka0XnsjksWLYtyvuI3Mo396i0+
        fO6V6FLhH18w1i73AarVmBL17uts0dI9hTJxN3jD9KCgpVe5SjA1AVE9vmtov6fd7nQ8nELRK5KC
        RWtJgbSShFiqdzGmOspCiG0zQqc0eTa/egd+/hhkPPVWIRgyMBUXH6leYIBF6SYKJPE1YHC2Om8e
        Q52Dl0dtIsfZ1eP6IYMqd3V3JvqkTw3d3q46hGwXEPt984xFEI88fAhTjx503RWzlW4weDfBjFfZ
        9Twq2r0IcpVK4Sate2O1vCUBv/m21moyruqkdr/1SVx0vbF+K1UD3I9iTiz/2cWT2po34D8tiewj
        LBQfec5NsHOiBJnrS4jJK/Za2G3MHfHzSh67tlZ4+ExTHe2F9gCIuVF0WReKJtzkR96j553AyWwj
        2XjDsps3wqlMgWoPPtnfWDQSKpIOnDvkEz3Yg2Z4DAcVeG38CvlF0zyempcSzly+IsM6JM2s75MK
        aDz1UKA9O0AnLhpgvRo88rKyKdgh1/aAcatEfM34jvclyuCXR5BPkzpekFH08jOjATEfnVgM5JCF
        kHLOAzkrv4IXtp4m+NhJTWwYtA39+etlDrKwPOUMUBrpGHz9Rbh9PFpv9a/3FFr+C5B9N/MGTfRI
        VZyuCsmXH0dKryCH09JE4XCiubdQDkzAS8lCAjm6x8vVdky4avoTuTvWFWxf1/Dnl/H6eIQGddik
        ykcri8iBNj2jVt9WUNQ99+vHz4yNH7eDkNYnLK2T0izyQz6BB4vuxHcnFi+7zwBB75gWclK/KRhr
        9j4c7I0c7kyzZUu/li38TNWLFAfVZUtRbE9Qi4sQ823Tj3/09TjrJYafSxSvH47LIKvkDItuqYP1
        py93i1+/9fIQr1ZhTtCrygfSby1vLGU9LL/6+c2j7IJu8k8PaMbdiHNNpmYS+8SBniNGRHsahkFr
        M4GQ1XGMBZXuwKKlIQXao7OJfuib8cvjp5+fQrYU0XhJvRsHFO2uIw+zBSy7T81BTVdjsv/y2Ww+
        jhgYz61LnL3de/NxF6gQoY5icVHP3hQR2YcbWb382z/rW76HtvS6of4hUEA+7meCZnApkc8Rv1i0
        qNn/xj+UpYv89QNKD+7b7oM3UxQba1juHDhTtCUWL5zACh5JBgUr2f7mh7dK4DLA05x4xJSPLMb3
        9uXDO9D50Gt3czwnciH+6km4WBsFTP0oy9Cfo+WPPyCXqlChfVRLZG3Sq0Gv4obK5d4p0SE6VMb8
        4zv4ERk6bF7nhk3eUv3yJqSvnVaws1eLIDAqE6nJ6zG+UmTuQZFNFB35yB6XnMOqLBwOXNAW0btZ
        kLNJobfPLXIoVMFYmuLRwszot6GS2E5DUW9wMHwcLWIJN6FZm0c4gX3SSESdlaJZpTd3AvyMP8h7
        uVrxGx/g7TOL5M6RMfpQhgw61uFI9FY2ClqbNw5YHlKJxndivJzRh4PfekGM4GEw8esv4ZdfkVtK
        52KO/K6E20AOUCjrOpt91+FAuPQGuX/zE+GbD/34ER1urevRPi84uFNuF7wBeCympTqJkGurN9K7
        8tKwsmwGyA6nA9lfKjLO4LpM8sCXT2Sdedvjfd3kwbnO9ygQn8d45Yt+/+OFEBjzBzAkjAuQozBC
        xifrYiLZLgfyMBnDZSGpsf78nX7LrmGzfblMLJCiymUUbsmXLxl75OUArANvES2bY7CaHz2Hcnp/
        Iv/DMW/VGtyCo3vqCNqew5isQiTDn//SILSaZTC3rvzSIECmcoXjKs8nEzr8FSNzNDEY6cRt5Y+d
        1sRSaAvwtjvgH3+Sgzra42zZYwI3wXMhTuobxVwe7Am2zoZggfiNN10kVkPvJA9EF0ZozMOzTX95
        IPH609DQp/OBgOzTmQTLewZ0K5R78M1TUHCEC1iHZ5vA4tZsMX7M/LjM7XsCXAop8qeDC7ZzvlFh
        /tZdpH95hYrKYkIW2Cjkz9ZiUMmRang6hTVWrOjEvrztQHu6U7ybNom3TstWhBtZv+B2NEMwxs3R
        h3bZnlAe3ryYTs4hg4dFPiPNcqvxx/vwm08T9x2Y4/wRLAzvnCSH4jdfWu3h6ENHSzxy26hVMa8P
        noPcNVeQ/njXxSCbQw/JPpnD3a0djHnNjyd4BypPDtebytj2s+XhFsUOcuTVAPTLn1Ds8/uf+Tx5
        Z+wDjaYqhuBteFNY6Drsob9F8Zs/Fuwqd1sI4iP75Qkxe8VGBwb+9kT7MMBs+Gx5Hqp275Ovny+k
        IlRLuK36PXL4zi+oGPg1+L5vuNzZa+zkVQvheDMJScMgZH/yji9vYXab+piIZ2eA6CzukdectzHG
        sbOFmfMM8XpOxBHTD6Kw+kgF+b4Pk6LazaA4BU1oF30DJrmYI3DwpiPxC/se0yipO+WX3xuTq7LV
        V6OTctnzHWaJOhTfvHCBUfooQ+V4Dg3cqAgC4h4YCn1xY8w7SV/gi58Y8qfHbvz1U+DwON1R+Hpn
        8ZLzSipnJX2G2K+WeEneUQJFVtnkoktDg/c55kEpZAA9blQeMT13GdzAssYAeXqxHkmS/MmfUPBK
        DcE6Jir0CQY48/vw2y9YSlDelwm5kjYC6RMFOXzLdYR8u3UNafK2FTwBNM7ry7mzqTl2Mny9XY7o
        zD03AjfE8p/nKaSlZtN07RPw5YVwXLh+pGm1lSGIpJ7ojZUXzDu+TejWnUK+vD3S33i4IeOJmojx
        uBKwTWB62fHEPXmXmOIpgPDr3zFozllMy/Rdwy/foPCbB33zVxFQL38T+7EHAB+1Qwit3b4OBY6I
        MVbOlgj1fsshZJ6EmFZVlMD15rhY6HMH/NF/3wgvyLoGZrwun3mA7hWUxLhc7eLPeilUI8G8kjzZ
        AgPSwXucdUi9s1czfd6zDL55JNE/0cmjP1789b/Q5TCwtT2XKgipzhH18/aBSA5RqOT6gSK9seSY
        OHN9g5ugWdC+qm/j4sOPCY6HIMXb1G9iel2TvfJ7P3MWD/FiEI+DZKwWpOZ5XyzaQ7rBHx+Y1ltq
        VuoXHVSPU4e7nZw1dK89FyV/zB0xM/7mffPIm5JmG/OrRwNYZ2rX8NbeeYTuRtgMmfAx5WrZk5Dz
        xY2HFWstlY8z38mvnor7iHMgFC8Z0nk8jCu0Ox1+eZ/Ys6oawv1iZUAsUwOFfIm9T9fWNUThs0ZW
        1mkji97dHmpmWRLzqOyB0LV1pXQu3KP7aGzZJD9o9NNbdMzmmH3XVwtl7yyFcDMpAP/RN7XriZmU
        c8zARsJQNMIcA0Qtg3lHsofP7jMjteBuDe3zmIOvyUiIDkQ2rqhCojxduSP68TjL/HWA3/yP+JpT
        Nqy43/ifX8MiGfbG2npzAuYkyVBYHtSYAX5JoC4JGP/ySWyoOQR5sa1IZo+3YkYV4n98gYUoovFg
        YyeRhbHziLn0BuN1fc7kueIVZLdG6M0+anv4zcPDAQIyLnZ9N+XjCVoYqrenRxl8RrB/Wihc8XRq
        6J/1nY15aFegZdP5bPWg5FWVPFb+Db55LLfD8M2F8gCjkRkB/eqZUCAVNkqMcX2O4JYV8Jt/F2PP
        H1gEildwQd6tKY3lbh62UPoYAha++Q2zQe9Ahy8w5hPyLDr9fZ6g9SwTZFv4wZZfvroMLAgBrW9s
        zc9cB+tV44mmNH28WAYM4a9fqTJPG8UOMPWXp6N0J2fjnMO1VBx93mPu9d4WrJXDBJhNR8nBNE2w
        KMu9hKrla+he+Q2jeZPmv34xQk3YeeybP8D+ogs/PWBMoCcMd5fARIYHMFhPr6YH3lPKw1++R7rN
        4MJAfL2//QO9WB+3Z6h8+9PoQFZcLD2wI4V36g658FWBX94Gw2UwyKErg3/nmed7M2N36DQgtvGz
        VPjTSw033/Gf3sYnAQY7WsQoo1uD6zDooSZ6+5CmRtCIXz1SUJ2M3/lU/bt/R9Pq+KffQEzTNWER
        vBxyEEZqsFXItsA6xzlyDiL/7VetKXQvjxhvv/VWuObetx/WOUjdTb037Vjcw/X9fhDN+faDvv3u
        P99DX2FkSD9e60LmE31nXuOuo24CNJqov3y4WFLo1PDv366A//zHX3/9n98Og66/l6/vxoC5XOd/
        /tdWgX/m9/yfPC/+k4h/diLgKa/Kv//1700If3/GvvvM/3fu2/I9/f2vvyT5z3aDv+d+zl///fg/
        vnf7z3/8PwAAAP//AwBgqzNa4yAAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d2ac1a15a9010b2-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 05 Jun 2023 19:17:33 GMT
      Function-Execution-Id:
      - d7g9ozvtyp16
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '29'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 45cfc0f76093b45fa9fe70bf9d31f505
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 6e8dbd15cc9d98ff352fa996048c3486
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. replace_in_file: Replace text or code in a file, args: \"filename\":
      \"<filename>\", \"old_text\": \"<old_text>\", \"new_text\": \"<new_text>\",
      \"occurrence_index\": \"<occurrence_index>\"\n6. write_to_file: Write to file,
      args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n7. delete_agent: Delete
      GPT Agent, args: \"key\": \"<key>\"\n8. get_hyperlinks: Get hyperlinks, args:
      \"url\": \"<url>\"\n9. get_text_summary: Get text summary, args: \"url\": \"<url>\",
      \"question\": \"<question>\"\n10. list_agents: List GPT Agents, args: () ->
      str\n11. message_agent: Message GPT Agent, args: \"key\": \"<key>\", \"message\":
      \"<message>\"\n12. start_agent: Start GPT Agent, args: \"name\": \"<name>\",
      \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n13. browse_website:
      Browse Website, args: \"url\": \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out who won the
      2010 Nobel Prize in Physics and write their names, affiliated university, and
      discovery to a file. I can start by searching the internet for the information.\",\n        \"reasoning\":
      \"I need to gather information before I can write it to a file. The internet
      is a good place to start.\",\n        \"plan\": \"- Use the ''browse_website''
      command to search for information on the 2010 Nobel Prize in Physics\\n- Use
      the ''write_to_file'' command to write the information to a file\",\n        \"criticism\":
      \"I need to make sure that the information I find is accurate and that I am
      not missing any important details.\",\n        \"speak\": \"I will search the
      internet for information on the 2010 Nobel Prize in Physics and write the winners''
      names, affiliated university, and discovery to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: announcing
      the 2010 Nobel Prize in Physics, which was awarded jointly to Andre Geim and
      Konstantin Novoselov for their groundbreaking experiments with graphene, a two-dimensional
      material.\n\nLinks: [''\\nSkip to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have found the information I need. Now I need to write
      the winners'' names, affiliated university, and discovery to a file. I can use
      the ''write_to_file'' command to do this.\",\n        \"reasoning\": \"I have
      the information I need and now I need to save it to a file. The ''write_to_file''
      command is the best option for this task.\",\n        \"plan\": \"- Use the
      ''write_to_file'' command to write the winners'' names, affiliated university,
      and discovery to a file.\",\n        \"criticism\": \"I need to make sure that
      the information is written correctly and that I am not missing any important
      details.\",\n        \"speak\": \"I will use the ''write_to_file'' command to
      write the winners'' names, affiliated university, and discovery to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"2010_nobel_prize_winners.txt\",\n            \"text\": \"The winners of the
      2010 Nobel Prize in Physics are Andre Geim and Konstantin Novoselov from the
      University of Manchester for their groundbreaking experiments with graphene,
      a two-dimensional material.\"\n        }\n    }\n}"}, {"role": "system", "content":
      "Command write_to_file returned: File written to successfully."}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I have completed my task. I can use the ''read_file'' command to verify that
      the information was written correctly.\",\n        \"reasoning\": \"I want to
      make sure that the information was written correctly and that I can access it.\",\n        \"plan\":
      \"- Use the ''read_file'' command to verify that the information was written
      correctly.\",\n        \"criticism\": \"I need to make sure that I am checking
      the correct file and that the information is accurate.\",\n        \"speak\":
      \"I will use the ''read_file'' command to verify that the information was written
      correctly.\"\n    },\n    \"command\": {\n        \"name\": \"read_file\",\n        \"args\":
      {\n            \"filename\": \"2010_nobel_prize_winners.txt\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command read_file returned: The winners of the
      2010 Nobel Prize in Physics are Andre Geim and Konstantin Novoselov from the
      University of Manchester for their groundbreaking experiments with graphene,
      a two-dimensional material."}, {"role": "user", "content": "Determine which
      next command to use, and respond using the format specified above:"}], "temperature":
      0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '8450'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA5yST28TQQzF73wKy5deNlHSNmm7NySkqhwgCDgRVE1mnd0hO/Z27PxrlO+ONpvQ
        Eg5Ivdrz3vt59HYYCszRV858bOrezef3g8GXa99snsqv9/NJ+fQchh8X683qafYBM5TZL/J2VPS9
        xKYmC8KYoU/kjArMh+Pb0d3d5Xh8nWGUgmrMsWysd9Uf9WyZZtIbXA2GmOFSXUmY77BJEht7NFkQ
        K+bD25thhi/mL4vRVYYm5uo/o8vB5fU+Q19J8KSY/9hhJD0ZJ6kJc3SqQc2xtZjCRtyesJsyAMAU
        rZJlWZlOMYfj8LigjbXDKT5A5VYEK0phHqgAq5yBVQSB55KiazFh7RTWKZgRg5eUyFu97cMDeMfA
        sgbiVhkUlFSDcH+K2eu8RE6FA5d/hR4/ggqIWzCnC3BcvA3lW0WJICiwWBW4BKqVYC4JIoEJFHKO
        1NSOO5oefFc6BF0U1PI8upLYLlq+2BKZ/PdAn4IFHzSeDmSigzC6BYEuE3XnPICLLSMcklrQNned
        hEs4pJ4ba0NucTJdh7qG5VtgO8t9dmrG8fU/xWAXqUt77X7G5FJ5XqlusaBtJ74n602qrQavn2RG
        9SSFZzpRHEiOQFPe4z7DeeCg1WNXE8xRTRrMMHBBG8wH+5/7d78BAAD//wMAZnPN39EDAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d2ac1e7eab51098-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 05 Jun 2023 19:17:57 GMT
      Function-Execution-Id:
      - ul772yn4wx73
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '13271'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - abd18228ff539785d9901564162cb52f;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85987'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.674s
      X-Request-Id:
      - 4fbb644c4b5a4b5f07be15cc52d78b34
    status:
      code: 200
      message: OK
version: 1
