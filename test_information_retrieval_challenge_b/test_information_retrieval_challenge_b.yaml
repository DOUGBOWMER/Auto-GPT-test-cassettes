interactions:
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3304'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA5xTS2/bMAy+71cQPDuvPpbG9wHrMAwdumED5iGQZdpma0muRNdNi/z3QXaaNimw
        AbsZNPW9SD4hF5iirpVo0zaT5efHs0/z/vr+46LOV4vG/OQPj6W+u/56c/EDE3T5DWnZvZhqZ9qG
        hJ3FBLUnJVRgunh/cX62PF2tFgkaV1CDKVatTE6n5xPpfO4m89P5AhPsgqoI0ydsvTOtrMXdkg2Y
        Ls9OEnzB3tdPTs8TFCeq2ZdWy+U2QV071hQw/fWEhsIzrHcNYYoqBA6irESRzgrZaOApswAAGUrt
        uqqWkGEKu+LuBz1ILGZ4CZaoAHFQsi3AdQJ97aB3FqQmOJkv5vDF5dTAledHArZwVW8C6wDKFtB7
        Foqd7MEqQyEBVZbccMwLOsv35APLJhm6Cw7a3ZPfRD4FJTc0hUvQykIQ5QXyDQRSXtdsKyidHzSw
        LZ03KuYFzjZsaZph8tqOJxWcZVsde6qU1OQPEHIqnacd6yif5bWebwOlkLckwAEUVM4V0DZKU+wb
        lB4raBtlR/IJfA9DIpB71wda95SHyKKdMTGECDF4HAwemvtX5llmX/AH8Wtx66j7Nfx+KAfoe4tH
        0rVnYc3BHIdn1C1B6HyEUvIG73LcmJiQ1p1XQsOMh95LUAasEzAcQpylshtg0zoflxUKEsVNOA4x
        tKRun1X03DT/H9Sr5TyYboYj4TZ5vpFdbm9OJG7zqOVwjkeala+Oz2v80flmfF6LtCGdzfq+n9oo
        to1ap85Xs+ErzNpR8yz6mYXOGOU3swOeEfKuoxD9j7h/c9+zteSfzQ6Gd74zu8VtgiVbDvV6PBxM
        MYhrMUG2BT1gOt/+3r77AwAA//8DALC6hzNABQAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94afe2b4f1403-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:13:28 GMT
      Function-Execution-Id:
      - ldou4cmk8dvo
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '16803'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 4c5fd5eab0fd112b592f227468c4ce4a;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86502'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.332s
      X-Request-Id:
      - 310cab176f000a0275ee5a50471c7dbc
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text; include any information that can be
      used to answer the question \"2010 Nobel Prize in Physics winner\". Do not directly
      answer the question itself:\n\n\nLITERAL TEXT: \"\"\"Skip to content This website
      uses cookies to improve the user experience. By using this website you consent
      to all cookies in accordance with our cookie policy.I understand Close the search
      form A button that allows you to close the search form if needed Close the search
      form A button that allows you to close the search form if needed Close Mobile
      Menu The Nobel Prize The Nobel Prize Logo Toggle Mobile Menu Nobel Prizes &
      Laureates All Nobel Prizes Physics Prize Chemistry Prize Medicine Prize Literature
      Prize Peace Prize Prize in Economic Sciences Quick facts Nomination Physics
      Prize Chemistry Prize Medicine Prize Literature Prize Peace Prize Prize in Economic
      Sciences Nomination Archive Alfred Nobel Alfred Nobel\u2019s life Alfred Nobel\u2019s
      will News & insights Press In-depth Events Public events Nobel Prize Concert
      Nobel Week Dialogue Nobel Prize Dialogue Nobel Prize Summit Nobel Prize Inspiration
      Initiative Nobel Prize award ceremonies Educational Close the search form A
      button that allows you to close the search form if needed Close the search form
      A button that allows you to close the search form if needed Header Search Submit
      a search term Allows users to submit a search term Physics The Nobel Prize in
      Physics 2010 Explore Summary Physics Prizes Chemistry Prizes Medicine Prizes
      Literature Prizes Peace Prizes Prizes in Economic Sciences Summary Prize announcement
      Press release Advanced information Popular information Illustrated information
      Speed read Award ceremony video Award ceremony speech Banquet video Laureates
      Andre Geim Konstantin Novoselov Enhanced Page Navigation The Nobel Prize in
      Physics 2010 The Nobel Prize in Physics 2010 - Prize announcement The 2010 Nobel
      Prize in Physics - Press release The Nobel Prize in Physics 2010 Andre Geim
      Konstantin Novoselov Share this Share on Facebook: The Nobel Prize in Physics
      2010 Share this content on Facebook Facebook Tweet: The Nobel Prize in Physics
      2010 Share this content on Twitter Twitter Share on LinkedIn: The Nobel Prize
      in Physics 2010 Share this content on LinkedIn LinkedIn Share via Email: The
      Nobel Prize in Physics 2010 Share this content via Email Email this page The
      Nobel Prize in Physics 2010 \u00a9 The Nobel Foundation. Photo: U. Montan Andre
      Geim Prize share: 1/2 \u00a9 The Nobel Foundation. Photo: U. Montan Konstantin
      Novoselov Prize share: 1/2 The Nobel Prize in Physics 2010 was awarded jointly
      to Andre Geim and Konstantin Novoselov \"for groundbreaking experiments regarding
      the two-dimensional material graphene\" To cite this section MLA style: The
      Nobel Prize in Physics 2010. NobelPrize.org. Nobel Prize Outreach AB 2023. Tue.
      30 May 2023. <https://www.nobelprize.org/prizes/physics/2010/summary/> Back
      to top Back To Top Takes users back to the top of the page Nobel Prizes and
      laureates Nobel Prizes 2022 Fourteen laureates were awarded a Nobel Prize in
      2022, for achievements that have conferred the greatest benefit to humankind.
      Their work and discoveries range from paleogenomics and click chemistry to documenting
      war crimes.See them all presented here. Explore prizes and laureates Look for
      popular awards and laureates in different fields, and discover the history of
      the Nobel Prize. Select the category or categories you would like to filter
      by Physics Chemistry Medicine Literature Peace Economic Sciences Select the
      category or categories you would like to filter by Physics Chemistry Medicine
      Literature Peace Economic Sciences Decrease the year by one - Choose a year
      you would like to search in Increase the year by one + Explore About the Nobel
      Prize organisation The Nobel Foundation Tasked with a mission to manage Alfred
      Nobel''s fortune and has\u00a0ultimate responsibility for fulfilling the intentions
      of Nobel''s will. The prize-awarding institutions For more than a century, these
      academic institutions have worked independently to select Nobel Prize laureates.
      Nobel Prize outreach activities Several outreach organisations and activities
      have been developed to inspire generations and disseminate knowledge about the
      Nobel Prize. Press Contact FAQ Privacy policy Technical support Terms of use
      For developers Media player Join us Facebook Twitter Icon Follow The Nobel Prize
      on Twitter Twitter Instagram Icon Follow The Nobel Prize on Instagram Instagram
      Youtube Icon Follow The Nobel Prize on Youtube Youtube LinkedIn IconConnect
      with The Nobel Prize on LinkedIn LinkedIn The Nobel Prize Copyright \u00a9 Nobel
      Prize Outreach AB 2023\"\"\"\n\n\nCONCISE SUMMARY: The text is best summarized
      as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4870'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0TOT2/bMAwF8Ps+BcGzHNhL3Ky67bIi2FBkh+4yDIUiszEzifQkJv0T5LsPHtb2
        +vj4wzsjD+gxjsFinlKz/vayOmzyn+Pddj2Mp7T5chqu+pvvm8PyR4cOdXegaP8/FlHzlMhYBR3G
        QsFoQN9dfepX61XbrR1mHSihx/1kzXLRN3YsO23aZTtjxxr2hP6MU9E82b3pb5KK/rprHb7bb/my
        d2hqIb03V/3FYRyVI1X0P8+Yqb6qRROhx1ArVwti80YVI5n3BxE9SmTZg40EH9uuhVvdUYJt4RcC
        FtiOz5VjhUcWoVIdfJahENwQZwgywFeVfy4L3OpJKyU9OXjQMotcgJ4mKpxJrIIK7EuYRhJyEMAe
        tRnmU2WVkCAHo8IhLfDi8IGF63hfKFQV9FhNJ3TIMtAT+vby6/LhLwAAAP//AwCxXhQNtwEAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94b9e2a45119b-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:13:39 GMT
      Function-Execution-Id:
      - ldoucqfmwj9c
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '2791'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 5b910ed49bf11234e094e665a36013a6;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '88317'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 1.121s
      X-Request-Id:
      - 9bff19c2948df6fb290febe90a17eeb8
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["Skip to content This website uses cookies to improve the user
      experience. By using this website you consent to all cookies in accordance with
      our cookie policy.I understand Close the search form A button that allows you
      to close the search form if needed Close the search form A button that allows
      you to close the search form if needed Close Mobile Menu The Nobel Prize The
      Nobel Prize Logo Toggle Mobile Menu Nobel Prizes & Laureates All Nobel Prizes
      Physics Prize Chemistry Prize Medicine Prize Literature Prize Peace Prize Prize
      in Economic Sciences Quick facts Nomination Physics Prize Chemistry Prize Medicine
      Prize Literature Prize Peace Prize Prize in Economic Sciences Nomination Archive
      Alfred Nobel Alfred Nobel\u2019s life Alfred Nobel\u2019s will News & insights
      Press In-depth Events Public events Nobel Prize Concert Nobel Week Dialogue
      Nobel Prize Dialogue Nobel Prize Summit Nobel Prize Inspiration Initiative Nobel
      Prize award ceremonies Educational Close the search form A button that allows
      you to close the search form if needed Close the search form A button that allows
      you to close the search form if needed Header Search Submit a search term Allows
      users to submit a search term Physics The Nobel Prize in Physics 2010 Explore
      Summary Physics Prizes Chemistry Prizes Medicine Prizes Literature Prizes Peace
      Prizes Prizes in Economic Sciences Summary Prize announcement Press release
      Advanced information Popular information Illustrated information Speed read
      Award ceremony video Award ceremony speech Banquet video Laureates Andre Geim
      Konstantin Novoselov Enhanced Page Navigation The Nobel Prize in Physics 2010
      The Nobel Prize in Physics 2010 - Prize announcement The 2010 Nobel Prize in
      Physics - Press release The Nobel Prize in Physics 2010 Andre Geim Konstantin
      Novoselov Share this Share on Facebook: The Nobel Prize in Physics 2010 Share
      this content on Facebook Facebook Tweet: The Nobel Prize in Physics 2010 Share
      this content on Twitter Twitter Share on LinkedIn: The Nobel Prize in Physics
      2010 Share this content on LinkedIn LinkedIn Share via Email: The Nobel Prize
      in Physics 2010 Share this content via Email Email this page The Nobel Prize
      in Physics 2010 \u00a9 The Nobel Foundation. Photo: U. Montan Andre Geim Prize
      share: 1/2 \u00a9 The Nobel Foundation. Photo: U. Montan Konstantin Novoselov
      Prize share: 1/2 The Nobel Prize in Physics 2010 was awarded jointly to Andre
      Geim and Konstantin Novoselov \"for groundbreaking experiments regarding the
      two-dimensional material graphene\" To cite this section MLA style: The Nobel
      Prize in Physics 2010. NobelPrize.org. Nobel Prize Outreach AB 2023. Tue. 30
      May 2023. <https://www.nobelprize.org/prizes/physics/2010/summary/> Back to
      top Back To Top Takes users back to the top of the page Nobel Prizes and laureates
      Nobel Prizes 2022 Fourteen laureates were awarded a Nobel Prize in 2022, for
      achievements that have conferred the greatest benefit to humankind. Their work
      and discoveries range from paleogenomics and click chemistry to documenting
      war crimes.See them all presented here. Explore prizes and laureates Look for
      popular awards and laureates in different fields, and discover the history of
      the Nobel Prize. Select the category or categories you would like to filter
      by Physics Chemistry Medicine Literature Peace Economic Sciences Select the
      category or categories you would like to filter by Physics Chemistry Medicine
      Literature Peace Economic Sciences Decrease the year by one - Choose a year
      you would like to search in Increase the year by one + Explore About the Nobel
      Prize organisation The Nobel Foundation Tasked with a mission to manage Alfred
      Nobel''s fortune and has\u00a0ultimate responsibility for fulfilling the intentions
      of Nobel''s will. The prize-awarding institutions For more than a century, these
      academic institutions have worked independently to select Nobel Prize laureates.
      Nobel Prize outreach activities Several outreach organisations and activities
      have been developed to inspire generations and disseminate knowledge about the
      Nobel Prize. Press Contact FAQ Privacy policy Technical support Terms of use
      For developers Media player Join us Facebook Twitter Icon Follow The Nobel Prize
      on Twitter Twitter Instagram Icon Follow The Nobel Prize on Instagram Instagram
      Youtube Icon Follow The Nobel Prize on Youtube Youtube LinkedIn IconConnect
      with The Nobel Prize on LinkedIn LinkedIn The Nobel Prize Copyright \u00a9 Nobel
      Prize Outreach AB 2023"], "model": "text-embedding-ada-002", "encoding_format":
      "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4560'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94bc2f89de23d-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:13:43 GMT
      Function-Execution-Id:
      - ldou6edrrjfb
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '176'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 384df9262218dd36d483722601437611
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 4f717577279beaebeda58ccce2e10097
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "announcing the 2010 Nobel Prize in Physics winners, Andre Geim
      and Konstantin Novoselov, for their experiments on graphene, a two-dimensional
      material.", "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '228'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94bca8995e268-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:13:44 GMT
      Function-Execution-Id:
      - ldou72tkymgg
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '28'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 81f3d87fa060df13ae30e75aaeff5685
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - cb4a72efeb7d8328b98a8e3f1215e991
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out who won the
      2010 Nobel Prize in Physics and write their names, affiliated university, and
      discovery to a file. I can start by searching for the information online.\",\n        \"reasoning\":
      \"I need to gather information before I can write it to a file. The internet
      is a good place to start.\",\n        \"plan\": \"- Use the browse_website command
      to search for information on the 2010 Nobel Prize in Physics\\n- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that the information I find is accurate and that I am not missing
      any important details.\",\n        \"speak\": \"I will search for information
      on the 2010 Nobel Prize in Physics and write it to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: announcing
      the 2010 Nobel Prize in Physics winners, Andre Geim and Konstantin Novoselov,
      for their experiments on graphene, a two-dimensional material.\n\nLinks: [''\\nSkip
      to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '5499'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6SST28aQQzF7/0Uls8LggQasrceqoi0jVSp6aVEq8muYV1m7O2MgRDEd6+WPyEl
        yqm30Xj88/Obt0GuMMeydlaGxneuvj4P7Od1s9Kb6c3w9k/vtrkfDX58n6+HnwUz1MffVNqho1tq
        aDwZa1sqIzmjCvP+x9FwcDXoXVxlGLQijznOGutcdocdW8RH7fQue33McJHcjDDfYBM1NFaYzkkS
        5v2LwXWGJ/ipMLrO0NScP10NLkfbDMtauaSE+a8NBkpHcFRPmKNLiZM5sVamipG0K2wmAgAwQat1
        MastTTCHw+WhQE/WXk5wDLVbEkx1IRVYTcAy1RhcKw/GIERVF+50dTiDKawiGwFbe3YwZU/dCWav
        8ZFcUmGZHWeUTmCRaDdg116YFm0nlBqCk1fccw3vDmm8kz2/A/f/yT5Dl5GNS07hqP+4enBzgrSI
        LcoZjMGFHZpl9gbuynIRnZFfw07ES4OoQeCU2iYna+DQaGw/ESoyxz6db5oacvOjlBV7/8464+M3
        vrJsz9lmx0gcPHmTCHGB9iP+8fBMiYuz8zDtC+3bE+Ki1+8Voo/kiybyMxUrFqGYutbGLjtvPqXx
        k1SR4IY47Dz7orJLNwvc6VITeV1mcC+8pJjY1qBT+OakrCkZxQymGltTOAI9NRQ5kFgCFZhF19Qk
        lIEDW2mnakuJVZyH4IwiO/9i1s6wg28T2eI2wykLp7rY5xpzTKYNZshS0RPmve3D9sNfAAAA//8D
        APG3rSNxBAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94bddcb3d2c40-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:01 GMT
      Function-Execution-Id:
      - ldou08e0m716
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '14325'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - a08e3c30268035df5fbe852c71190d43;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86020'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.652s
      X-Request-Id:
      - 0e28cb76406a8cde5951964012c2b184
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out who won the
      2010 Nobel Prize in Physics and write their names, affiliated university, and
      discovery to a file. I can start by searching for the information online.\",\n        \"reasoning\":
      \"I need to gather information before I can write it to a file. The internet
      is a good place to start.\",\n        \"plan\": \"- Use the browse_website command
      to search for information on the 2010 Nobel Prize in Physics\\n- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that the information I find is accurate and that I am not missing
      any important details.\",\n        \"speak\": \"I will search for information
      on the 2010 Nobel Prize in Physics and write it to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: announcing
      the 2010 Nobel Prize in Physics winners, Andre Geim and Konstantin Novoselov,
      for their experiments on graphene, a two-dimensional material.\n\nLinks: [''\\nSkip
      to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have found the information I need. Now I need to write
      it to a file.\",\n        \"reasoning\": \"I can use the write_to_file command
      to write the information to a file.\",\n        \"plan\": \"- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that I am writing the information accurately and that I am not
      missing any important details.\",\n        \"speak\": \"I will write the information
      I found to a file.\"\n    },\n    \"command\": {\n        \"name\": \"write_to_file\",\n        \"args\":
      {\n            \"filename\": \"2010_nobel_prize_winners.txt\",\n            \"text\":
      \"Andre Geim and Konstantin Novoselov, University of Manchester, for their experiments
      on graphene, a two-dimensional material.\"\n        }\n    }\n}"}, {"role":
      "system", "content": "Command write_to_file returned: File written to successfully."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6594'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6ySQWvbQBCF7/0Vw5xlYyd2EnTvIVAIhDZQ6mJW0kjaendG7I7sOMb/vaxkY+P0
        2JuY2Xnvm6c5oK0wx7I1WvrOTR6/fSy/NpX9/uLf+vc3z/pDX+aLeruT4idmKMUfKvU0MS3Fd47U
        CmOGZSCjVGE+f3haLh4Xs8VThl4qcphj0+nkfrqcaB8KmczuZ3PMsI+mIcwP2AXxna5VNsQR8/ni
        aZbhRfzSeLzLUEWNu5QelnfHDMtWbEkR818H9BTPwkEcYY4mRhvVsCZMYSVOKxxWDACwQm2lb1qN
        K8zhVDw16F1TcYXP0JotwYmJKtCWQE3cTOEZYiu9qyDQ1tIO/B5MmbAjqABx7AOBtkbhJNJRqCX4
        JCKDTkFRQephsrDOqqU4XWF2jRLIRGHLzcjzOnhZbq7tdtY5aMl14AlsRay23oPhPZg0DruWAsEz
        lIbB+i7IlsBwBd5sEoQqBaiotHFQszzA1b32gW5xOmd4JJnA66e9k+jFf/CuJZw9PbHeyJXBqi1t
        9Oe0mcZ4BrTrBI2HgtLerXCKbWe1Bb+P5OrB9vKMRUG2FJzIJg2kHHw6gw1FkJC+I1UgXSdBe/5n
        6rEjszkzDfH+7588uh2z8y2W4r3h6tMpsvE0ggQy1bq2jm5YTWhuL3hspLeX8bvZfLZmKcitu2A/
        aL2zzBTiVNOtX2aPJ7IVH/GYYW3ZxnY9niHmGFU6zNByRe+Yz46/j1/+AgAA//8DAGcaVHlMBAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94c611cc4634a-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:20 GMT
      Function-Execution-Id:
      - ldoufyhkjt80
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '12652'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - bc00246bd99aa29c71ea7cac23f2dcc2;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86017'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.654s
      X-Request-Id:
      - c29de628b3f6c8f00e965c283a79737b
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"Andre Geim
      and Konstantin Novoselov, University of Manchester, for their experiments on
      graphene, a two-dimensional material.\"\"\"\n\n\nCONCISE SUMMARY: The text is
      best summarized as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '366'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SOy24TQRBF93xFqdY91jh+hPSOFUhAVjgbhKJKd9nTYbpqqC4/guV/R0aQbO89
        9+iesWSMmAbyVKexu/3ye/Ww+HSzv1/S6dd8t1na5iF9K/bs6xcMqE/PnPzfYpa0TiN7UcGAyZic
        M8b5+v1qebvs16uAVTOPGHE3ebeYrTrf25N2/aKfY8B9ox1jPONkWid/dP3J0jCu5wHf1K/xzV1A
        V6fxNbnrLwHToCVxw/j9jJXbf6fpyBiRWivNSfz6UMVZru8/SDaGj1wqkGT4rPKXKQL3etDGox5g
        a1rBB4aNlANbK/4CuoWvJGng5mxwZGOgI1nmDFu1K10M+DSxlcriDVRgZzQNLByAwI/a5WvVigqN
        UMnZCo0zvATcFilteDSmpoIRm+uEAYtkPmHsLz8u7/4AAAD//wMATpfBVq8BAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94ccedc2a29f1-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:28 GMT
      Function-Execution-Id:
      - edh33d4cdqfo
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '2440'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - ca98a4f1886ba45b13f25ca474539fbb;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89437'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 374ms
      X-Request-Id:
      - d366453eb1b0c0c62bd7b8ba250ea83b
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["Andre Geim and Konstantin Novoselov, University of Manchester,
      for their experiments on graphene, a two-dimensional material."], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '204'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        P//x/wAAAP//AwDdgpZ+4yAAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94ceaf8561157-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:30 GMT
      Function-Execution-Id:
      - edh3o640by07
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '248'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 0c141b2d116fb7cbef45bb5ce5cac91a
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - d44b3093f6e390eca95b6e2367631fb7
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "Andre Geim and Konstantin Novoselov from the University of Manchester
      were awarded for their experiments on graphene, a two-dimensional material.",
      "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '222'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        IAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94cf8db922317-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:33 GMT
      Function-Execution-Id:
      - edh3o2jg8ehu
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '456'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - c52218405b4b3c2daea566af09cb5ffb
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 87d6bc01c3b5ee04ca0260a6751b0731
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out who won the
      2010 Nobel Prize in Physics and write their names, affiliated university, and
      discovery to a file. I can start by searching for the information online.\",\n        \"reasoning\":
      \"I need to gather information before I can write it to a file. The internet
      is a good place to start.\",\n        \"plan\": \"- Use the browse_website command
      to search for information on the 2010 Nobel Prize in Physics\\n- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that the information I find is accurate and that I am not missing
      any important details.\",\n        \"speak\": \"I will search for information
      on the 2010 Nobel Prize in Physics and write it to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: announcing
      the 2010 Nobel Prize in Physics winners, Andre Geim and Konstantin Novoselov,
      for their experiments on graphene, a two-dimensional material.\n\nLinks: [''\\nSkip
      to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have found the information I need. Now I need to write
      it to a file.\",\n        \"reasoning\": \"I can use the write_to_file command
      to write the information to a file.\",\n        \"plan\": \"- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that I am writing the information accurately and that I am not
      missing any important details.\",\n        \"speak\": \"I will write the information
      I found to a file.\"\n    },\n    \"command\": {\n        \"name\": \"write_to_file\",\n        \"args\":
      {\n            \"filename\": \"2010_nobel_prize_winners.txt\",\n            \"text\":
      \"Andre Geim and Konstantin Novoselov, University of Manchester, for their experiments
      on graphene, a two-dimensional material.\"\n        }\n    }\n}"}, {"role":
      "system", "content": "Command write_to_file returned: File written to successfully."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have completed the task. I should review my actions
      to ensure that I have performed to the best of my abilities.\",\n        \"reasoning\":
      \"Reviewing my actions will help me identify any areas where I can improve and
      make better decisions in the future.\",\n        \"plan\": \"- Review my actions
      and identify areas for improvement\",\n        \"criticism\": \"I need to make
      sure that I am being honest with myself and that I am not overlooking any mistakes
      or missed opportunities.\",\n        \"speak\": \"I will review my actions to
      ensure that I have performed to the best of my abilities.\"\n    },\n    \"command\":
      {\n        \"name\": \"read_file\",\n        \"args\": {\n            \"filename\":
      \"2010_nobel_prize_winners.txt\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command read_file returned: Andre Geim and Konstantin Novoselov,
      University of Manchester, for their experiments on graphene, a two-dimensional
      material."}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}], "temperature": 0, "max_tokens":
      0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7744'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA4RSTY/TQAy98yssn9OqpdvtkhvqAS1CcEFcKFq5EyeZ7cw4O+P0gyr/HWWTqmw5
        cLX9nt979hltgTmamtT4xk1WX34vrb5ff/r4Ybt+savv5fG59J/Xvvn2Y4YZyvaZjY6IqRHfOFYr
        ATM0kUm5wHx+/7C8W93NVg8ZeinYYY5Vo5PFdDnRNm5lMlvM5phhm6hizM/YRPGNPqnsOCTM56v5
        MsMr+bWxuM9QRcldSw/LeZehqcUaTpj/PKPndCGO4hhzpJRsUgray5SgHHoL500AANig1tJWtaYN
        5jAWxwYftS9u8BFq2jNE3ls+cAH+BGR6bQkoFPAI5CGR2lRaLuBgtQatGaRVI56nMOJHT1y8dpXS
        DlJrDKdUts6dphvM/t4fmZIEG6pRhIJNYH0jsTcDKhC5dGwUJNxKsgUHteUJqGeBUmKPjLJnz0Ez
        2LYK9pWQXJK3rGR2QQ6Oi4rhUHO4yG84lhJ975Cdu1XbOAqD0Al8FSjbqDXHUVS/KPJLayMXt0AT
        rVpjk79kHbhPSMDTjiG1kUFr0iHlIApbNuJtqIY8yXDQV8/XKXIHOiVIGu2+H1S5uL9dnhqm3Zsj
        //9IA77LLg9kxHsKxT//E8jzQH2zlGI1fFs3Um1Ch12GpQ021U/D3THHpNJghjYUfMR81v3q3v0B
        AAD//wMArIUGhLIDAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94d1d1966e12b-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:48 GMT
      Function-Execution-Id:
      - edh383euagce
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '9927'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - ff02bfdc093693b48ddfc096cecd6fa1;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86004'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.664s
      X-Request-Id:
      - 02773f1693aaa77bbe36491f9fd3dbcd
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"Andre Geim
      and Konstantin Novoselov, University of Manchester, for their experiments on
      graphene, a two-dimensional material.\"\"\"\n\n\nCONCISE SUMMARY: The text is
      best summarized as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '366'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SOwU7jQBBE73xFq8/jyAYCZG4cYMUuiwSIE1qhwdOxZ9fTbXoaJxDl31EQG65V
        r55qgymix7YP1uZxqE6v3+fTz/Oz27tOLl66F22uFzdTvFzP76+u0KE8/6XWvhazVvI4kCVhdNgq
        BaOIvjk5mx+fHteLxmGWSAN67Earjmbzyl71War6qG7Q4WsJHaHf4KiSR3sy+Udc0J80Dr/V+/hw
        4dDEwrBPFvXWYdtLaqmgf9xgpvLfqTIQegylpGKBbfdQ2Ih37885KsEPShkCR/gl/MkkhhuZpNAg
        EyxVMlhP8MBpIi3J3kCW8Dtw21MxUliREoRV0EgRlqI7OinQeiRNmdgKCEOnYeyJyUEAW0kVd1VJ
        wmGAHIw0hWGGW4fLxKn0T0qhCKPHYjKiw8SR1ujr7Z/twQcAAAD//wMAq+oeaK8BAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94d70cb1c10f4-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:54 GMT
      Function-Execution-Id:
      - edh3785v0vca
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '2475'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - c68cb813d1057241cbe711f8a2f7d43b;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89438'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 374ms
      X-Request-Id:
      - 96665b4ddd6e8f66b27afe3454c25d44
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["Andre Geim and Konstantin Novoselov, University of Manchester,
      for their experiments on graphene, a two-dimensional material."], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '204'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        P//x/wAAAP//AwDdgpZ+4yAAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94d875e7f61e0-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:55 GMT
      Function-Execution-Id:
      - edh3up6zgtvv
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '352'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - c700adf31be0c87a6f65daad3b3fb382
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 218f7b4182122a4abc46b4478e630a3d
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "Andre Geim and Konstantin Novoselov from the University of Manchester
      were awarded for their experiments on graphene, a two-dimensional material.",
      "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '222'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        IAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94d913c398140-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:57 GMT
      Function-Execution-Id:
      - edh3a5lsm8nk
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '247'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - f9b19c031cfa978744eb509a32eeee58
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 30d5d360293b74e0a8b00b9c38daf18a
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text; include any information that can be
      used to answer the question \"2010 Nobel Prize in Physics winner\". Do not directly
      answer the question itself:\n\n\nLITERAL TEXT: \"\"\"Skip to content This website
      uses cookies to improve the user experience. By using this website you consent
      to all cookies in accordance with our cookie policy.I understand Close the search
      form A button that allows you to close the search form if needed Close the search
      form A button that allows you to close the search form if needed Close Mobile
      Menu The Nobel Prize The Nobel Prize Logo Toggle Mobile Menu Nobel Prizes &
      Laureates All Nobel Prizes Physics Prize Chemistry Prize Medicine Prize Literature
      Prize Peace Prize Prize in Economic Sciences Quick facts Nomination Physics
      Prize Chemistry Prize Medicine Prize Literature Prize Peace Prize Prize in Economic
      Sciences Nomination Archive Alfred Nobel Alfred Nobel\u2019s life Alfred Nobel\u2019s
      will News & insights Press In-depth Events Public events Nobel Prize Concert
      Nobel Week Dialogue Nobel Prize Dialogue Nobel Prize Summit Nobel Prize Inspiration
      Initiative Nobel Prize award ceremonies Educational Close the search form A
      button that allows you to close the search form if needed Close the search form
      A button that allows you to close the search form if needed Header Search Submit
      a search term Allows users to submit a search term Physics The Nobel Prize in
      Physics 2010 Explore Summary Physics Prizes Chemistry Prizes Medicine Prizes
      Literature Prizes Peace Prizes Prizes in Economic Sciences Summary Prize announcement
      Press release Advanced information Popular information Illustrated information
      Speed read Award ceremony video Award ceremony speech Banquet video Laureates
      Andre Geim Konstantin Novoselov Enhanced Page Navigation The Nobel Prize in
      Physics 2010 The Nobel Prize in Physics 2010 - Prize announcement The 2010 Nobel
      Prize in Physics - Press release The Nobel Prize in Physics 2010 Andre Geim
      Konstantin Novoselov Share this Share on Facebook: The Nobel Prize in Physics
      2010 Share this content on Facebook Facebook Tweet: The Nobel Prize in Physics
      2010 Share this content on Twitter Twitter Share on LinkedIn: The Nobel Prize
      in Physics 2010 Share this content on LinkedIn LinkedIn Share via Email: The
      Nobel Prize in Physics 2010 Share this content via Email Email this page The
      Nobel Prize in Physics 2010 \u00a9 The Nobel Foundation. Photo: U. Montan Andre
      Geim Prize share: 1/2 \u00a9 The Nobel Foundation. Photo: U. Montan Konstantin
      Novoselov Prize share: 1/2 The Nobel Prize in Physics 2010 was awarded jointly
      to Andre Geim and Konstantin Novoselov \"for groundbreaking experiments regarding
      the two-dimensional material graphene\" To cite this section MLA style: The
      Nobel Prize in Physics 2010. NobelPrize.org. Nobel Prize Outreach AB 2023. Fri.
      2 Jun 2023. <https://www.nobelprize.org/prizes/physics/2010/summary/> Back to
      top Back To Top Takes users back to the top of the page Nobel Prizes and laureates
      Nobel Prizes 2022 Fourteen laureates were awarded a Nobel Prize in 2022, for
      achievements that have conferred the greatest benefit to humankind. Their work
      and discoveries range from paleogenomics and click chemistry to documenting
      war crimes.See them all presented here. Explore prizes and laureates Look for
      popular awards and laureates in different fields, and discover the history of
      the Nobel Prize. Select the category or categories you would like to filter
      by Physics Chemistry Medicine Literature Peace Economic Sciences Select the
      category or categories you would like to filter by Physics Chemistry Medicine
      Literature Peace Economic Sciences Decrease the year by one - Choose a year
      you would like to search in Increase the year by one + Explore About the Nobel
      Prize organisation The Nobel Foundation Tasked with a mission to manage Alfred
      Nobel''s fortune and has\u00a0ultimate responsibility for fulfilling the intentions
      of Nobel''s will. The prize-awarding institutions For more than a century, these
      academic institutions have worked independently to select Nobel Prize laureates.
      Nobel Prize outreach activities Several outreach organisations and activities
      have been developed to inspire generations and disseminate knowledge about the
      Nobel Prize. Press Contact FAQ Privacy policy Technical support Terms of use
      For developers Media player Join us Facebook Twitter Icon Follow The Nobel Prize
      on Twitter Twitter Instagram Icon Follow The Nobel Prize on Instagram Instagram
      Youtube Icon Follow The Nobel Prize on Youtube Youtube LinkedIn IconConnect
      with The Nobel Prize on LinkedIn LinkedIn The Nobel Prize Copyright \u00a9 Nobel
      Prize Outreach AB 2023\"\"\"\n\n\nCONCISE SUMMARY: The text is best summarized
      as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4869'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SOPW/bMBCG9/6Kw82UIdm1YmvLkiIoamTpVBQBRV5EJtSdQJ5spYb/e6Gibdb3
        63mvGD126IJVN06puvs2LuNO+v3Dobk/L9vv4XE5bfv5/Nj6LRqU/pWc/m1snIxTIo3CaNBlskoe
        u6Y97Nt2f3doDY7iKWGHw6TVbrOvdM69VPWubtDgXOxA2F1xyjJO+qzyRlywOza1wY/t//ruaFBF
        bfpIfj7eDLog0VHB7scVRyr/VrMkwg5tKbGoZV0/Civx+t8yy8wu8gAaCLZ1U8NJekrwlOMvgsjw
        FN5LdMXAJUQX4GIL2IvNnjy8SmRN76AC9+wzwReKI1j28FX4DywynOQshZKc4UXySokZhiwz+z6T
        fVvRtEyU40isBS5RAwzZToGYDFjQi1R+NUsUtglGq5SjTRu8GXyJHEt4zmSLMHZYVCY0GNnTgl19
        +3n79BsAAP//AwD27qmv3AEAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d0b95792d8ce13b-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 02 Jun 2023 00:29:49 GMT
      Function-Execution-Id:
      - b1h938xzmli0
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '3573'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - fb3a62e59265a94de28f1a675dd46a3e;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '88317'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 1.121s
      X-Request-Id:
      - e0e8f4a2c5adf9f23c81e47438cd0eaf
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["Skip to content This website uses cookies to improve the user
      experience. By using this website you consent to all cookies in accordance with
      our cookie policy.I understand Close the search form A button that allows you
      to close the search form if needed Close the search form A button that allows
      you to close the search form if needed Close Mobile Menu The Nobel Prize The
      Nobel Prize Logo Toggle Mobile Menu Nobel Prizes & Laureates All Nobel Prizes
      Physics Prize Chemistry Prize Medicine Prize Literature Prize Peace Prize Prize
      in Economic Sciences Quick facts Nomination Physics Prize Chemistry Prize Medicine
      Prize Literature Prize Peace Prize Prize in Economic Sciences Nomination Archive
      Alfred Nobel Alfred Nobel\u2019s life Alfred Nobel\u2019s will News & insights
      Press In-depth Events Public events Nobel Prize Concert Nobel Week Dialogue
      Nobel Prize Dialogue Nobel Prize Summit Nobel Prize Inspiration Initiative Nobel
      Prize award ceremonies Educational Close the search form A button that allows
      you to close the search form if needed Close the search form A button that allows
      you to close the search form if needed Header Search Submit a search term Allows
      users to submit a search term Physics The Nobel Prize in Physics 2010 Explore
      Summary Physics Prizes Chemistry Prizes Medicine Prizes Literature Prizes Peace
      Prizes Prizes in Economic Sciences Summary Prize announcement Press release
      Advanced information Popular information Illustrated information Speed read
      Award ceremony video Award ceremony speech Banquet video Laureates Andre Geim
      Konstantin Novoselov Enhanced Page Navigation The Nobel Prize in Physics 2010
      The Nobel Prize in Physics 2010 - Prize announcement The 2010 Nobel Prize in
      Physics - Press release The Nobel Prize in Physics 2010 Andre Geim Konstantin
      Novoselov Share this Share on Facebook: The Nobel Prize in Physics 2010 Share
      this content on Facebook Facebook Tweet: The Nobel Prize in Physics 2010 Share
      this content on Twitter Twitter Share on LinkedIn: The Nobel Prize in Physics
      2010 Share this content on LinkedIn LinkedIn Share via Email: The Nobel Prize
      in Physics 2010 Share this content via Email Email this page The Nobel Prize
      in Physics 2010 \u00a9 The Nobel Foundation. Photo: U. Montan Andre Geim Prize
      share: 1/2 \u00a9 The Nobel Foundation. Photo: U. Montan Konstantin Novoselov
      Prize share: 1/2 The Nobel Prize in Physics 2010 was awarded jointly to Andre
      Geim and Konstantin Novoselov \"for groundbreaking experiments regarding the
      two-dimensional material graphene\" To cite this section MLA style: The Nobel
      Prize in Physics 2010. NobelPrize.org. Nobel Prize Outreach AB 2023. Fri. 2
      Jun 2023. <https://www.nobelprize.org/prizes/physics/2010/summary/> Back to
      top Back To Top Takes users back to the top of the page Nobel Prizes and laureates
      Nobel Prizes 2022 Fourteen laureates were awarded a Nobel Prize in 2022, for
      achievements that have conferred the greatest benefit to humankind. Their work
      and discoveries range from paleogenomics and click chemistry to documenting
      war crimes.See them all presented here. Explore prizes and laureates Look for
      popular awards and laureates in different fields, and discover the history of
      the Nobel Prize. Select the category or categories you would like to filter
      by Physics Chemistry Medicine Literature Peace Economic Sciences Select the
      category or categories you would like to filter by Physics Chemistry Medicine
      Literature Peace Economic Sciences Decrease the year by one - Choose a year
      you would like to search in Increase the year by one + Explore About the Nobel
      Prize organisation The Nobel Foundation Tasked with a mission to manage Alfred
      Nobel''s fortune and has\u00a0ultimate responsibility for fulfilling the intentions
      of Nobel''s will. The prize-awarding institutions For more than a century, these
      academic institutions have worked independently to select Nobel Prize laureates.
      Nobel Prize outreach activities Several outreach organisations and activities
      have been developed to inspire generations and disseminate knowledge about the
      Nobel Prize. Press Contact FAQ Privacy policy Technical support Terms of use
      For developers Media player Join us Facebook Twitter Icon Follow The Nobel Prize
      on Twitter Twitter Instagram Icon Follow The Nobel Prize on Instagram Instagram
      Youtube Icon Follow The Nobel Prize on Youtube Youtube LinkedIn IconConnect
      with The Nobel Prize on LinkedIn LinkedIn The Nobel Prize Copyright \u00a9 Nobel
      Prize Outreach AB 2023"], "model": "text-embedding-ada-002", "encoding_format":
      "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4559'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        AAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d0b95b03f1be24c-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 02 Jun 2023 00:29:54 GMT
      Function-Execution-Id:
      - b1h9n4vokcga
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '34'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 58ffef0e73f2f03dfe25b3dd40f01c23
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 232bf135e65e683bafab3680266d31cf
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "announcing the 2010 Nobel Prize in Physics, which was awarded
      jointly to Andre Geim and Konstantin Novoselov for their groundbreaking experiments
      with graphene, a two-dimensional material.", "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '265'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SWyc6zPBKF930Vr74tLSVhcvHvmMfEJiED6RVkIIEQwmAD7ptv5f2lbvXGi/KR
        ZbuqzlP//sfPz58mL2+X4c9fP39ez374889v7JoN2Z+/fv71j5+fn59//67/p7zV+e16fb6LX/nv
        5vN9vU1//vpZ/jfyP9FfP39qfBVZAOElGdPeCGEzOhYLYm6UNY/lAhRXt1icymbHb4cH1o5ybrP1
        vGy/+sCH8R5HzJTHpBvO4rpCchf6WFispZKay75BaDYfzHu+vZwtxrUIghXYuK42CqfXbVYrrVMF
        TKeDmY/qKSm0eEzWLCzt2prlss1ACKSEblf1GLXXPnqCtPussJxni3yq6zaGOzQn5sRKljPp0aRw
        IuuYikFTWb0sbmU0S7ZAPN9nOb1EhqCVB1ulYq88kpkpSgiyMeRYsVPGh3x7TuGmVRNJGxHQ7Nfy
        DGHgDSxsAzni4nS/IBLqJdlIn6l8P/vmCVNOY/wAwYtmypsnmMN+IJvskqHJ6fsMqeG7YsRvDtYY
        LEZVM/SpJ97qOnPeHbcj7D+qSZfzvupYgLIYiiEKsRReo2T6bKBQVNh1zM/OCR+u76UMAnpmzL7c
        bT5tnBrgvA58vLokRUlbY9wh2t5GSoaNiUZy9VVgxbom92qpJyLkpACvvVMs93IfzfdnEEPs3hqm
        nxVszTd3WUCpnRJm2wefU6ocjvCq5ph4Fuu7SVbXFNLXAVjEdVpOqFuZSNE2DjEk1Fvt9ngU4epP
        RxJmnVWO/epx1Jp4pizwTnY0b3PdhurwGujqWG8SttQjEzbZLSSmm64s+riiJXwae2Cmazx4nygr
        HaRce7G9ffCRuLqsAL75Y5jlN4sfHmcZktQRMFJTp5wOn/IIt4UlEOM8fND8rS/kVoPCMEiom1eQ
        hlAtzIz4O33Kx3bRVei5rzw8rZHNpaK3e3iWOSfRfu6TyRv0NYxzUuJRe9x+37PXFifpSfQzOfDp
        lC2WKBa1nIUFC61lfyQ+mseUMU/0Imsul6cjdK4LxD+nTfL51iv6nkeCOAgSHk6pDtXeL5jzso4J
        x6V/BFMVA0IelyCXsDbFME8SEHv86Hz6pFkFSeoJWBrsOJ/yR7VD9LLYY8mf3+VvvUO9ynTi59ki
        +WA3nGXr0NskaW/nksefGGC+EIuq7uNd0kssjPC9LxWXTdTx0/v5XDhOfGW7w11Mxm2KbvDtZ+IG
        CylhiR7vIVe5h9+wCtDcGnKM9t2BsPDQNGhuTwtAz34ocVep52hsgpeM3o/Bx+r0IBFbhg9bK57Z
        hpDSG6Jpmb738MneW/qc+yGirvheIv3tOsTbrVddHaUfF6rDe2BRsxstbm7yFvaWLZK7TuZyQLW+
        1l569SLJfud27PkMb3CLlJaYXv/qqL+FBrJ7dmZulgXRiMx7ighdY+JnZtFNY9fE6L12CfEfU4va
        63ZXg0a1lDlsWqL2EgszkmhvMbeOnuUs7VCPIuNq45UqH635EhkAJVJduojbKnlXlMjInh8Lht8H
        vZPO6cKEsH4HdNQeQjke8+wGsr7DWAt0rRzNvsOwU6IDCT/3BZ/dqDJRy7aM6Jb1LEc5L0Ab1dAl
        G7nvy/duLzfIiYSeFk9oUG8/CwFMnNosfjRpTqUd7zVPrTvmF64Xjav9skDtO0zw+ISGDwF9VxDZ
        7otYRiBGI8zNDlaK2vzt/zy2A4DwWeTMq7qBz7Kv3MCKryYLb+mtm6P0YYOtZk+GhWgdTdUB1Qhv
        uw1VS9uNuvy8W2qTv5gZ+f5HrzwOM+TXpGNGOcXRcI78GdayrLP8XrR8NpLSRYR9cuYO8bLj8+Lt
        Q5yAjYWeYT69n/slIDXS8OoAB4tSC11UblcZs18k65Zuot0QPW4dYlu7DZ/u5fuCvv7CXFk3S1HB
        NEZHrXGpUqpmJ6mlN6vjQcgZ6cuwmzpr3qE0ag6EnDPV6slTo2AF3YoWKW7zMQkJoL1DT1iCaOrG
        bXku4LiaSmJ1cxtxbbmL4XSpGLkc4iIZUN766G3Odxaq1QcN8j2fIThoZyqmzmC1m8X9hr75ppVo
        LEo2fqIWquYYUbTJVsn01Subk/hhm31WokGbN61a6KLFbOV8LKeT7soqzkDDYpZ9rOFGN4XymVcd
        C+Lgk4/6OLYg3V4us8rzu5uG7DADTbqKBGPv8alymh6e+9ojG/NVojGT3QoI9rZs/R4+1rzanWTE
        dOfDnPrkorHN9jUqbusHwdZ0y0d1ti9Ij3cKiTbW02K7bLhAn00Z2ainOO+lcI7hJCOJudsTTXop
        Zi5yX+qGrqabH/Hd6piq3ct4/b6nWxnODoNMHIVY14ORiFmrH7VvPpjpUECM+aaL6CPS8fIeLa2u
        sta2gu0dZc5twThNhaaBZTRd6K9//82HKlsytv/ylHfGtYWFJNyJ6Zw+HfNU4YaCfn4RR8BXzp0q
        E8CTFiHBER/K3/kGtFZtWWCnhHPrZu6RMK9b5qXqMp/dovC1tazqLCJsyqcRcR+wHVOWf7SE87py
        WiCDpWKZSUUyb2x91lQjWZL1ewis9rrNKgjSWiWbrdnzsc/GFOKsSYije6tkMNoPRrsM93jWOE24
        9ChS5BJPZ1+/Kvm+u/joyxNGzllm8VjpRMhOpYgXOtl1X56Y6Lgb1yxE+Gnx88B98M76gzmV2aKR
        nw0BHrVGiXu5kW4W8u74y0+6m1IoO337ceHayAkj/tbgokEvJlok8xJfN70T9SS9t2pQ20eW3E9y
        MvdpMgOr1RXu6hfwQRR2PiTbM6PSBayOL8KVCInbTORaPcdyprwoVGF9WTJc7K/WmG5jDL2qnujq
        2t3zMWE3QX0fhZAZMpz466N9KiDWcU9BxmnHGd/IAGs1xw+n3KDJeeKjah/XEjO0xVyyOlFHrevY
        kvirLe4m5VWlcE9vPdWuyy0abx9BRTQ7cVoawdGaMzXHiigLmDjGfI56Ow1l8Lh6odp+kqw5gaBV
        XeLoLBS0Pp/kzySiZJszupw7CdHHpgH0YuWGONZo8Kk28hi9niFj+K4FJe8i1MNBqAu2pnP+Nw+V
        d6gg5iZ9m0yeltvIpcaH6QtRLXtknlKg0dPDymTlVnN3IqpUq75lzuA4X39kvvraGTMzpxQ6ZjZ2
        jV7W2qXoECzKcX8IRPjyl0SnSS8lZzmI8uPzIsxGdNfxfdxh8AaPEOI3q2hMXTWEtbi74/G9KLse
        5KuNkmC3Y7Y6eBb3iNrCWw8F5id7Ay2F5KPCq7vcmZ/SMRptbzTBqYhLh0C/dtPGoQLsvaAiRhPO
        fGJx/lTNaC6JIapFN+yGiwDlXB+JF3lWydlGVMHzbid83x38qGNaB2C0+EzstZ1YNDusMTr7bkaF
        e7JNWF1tGiiGIKQrRWrLyemrFPyjwhnRDqycTofIVGvShOSm5yKnvvEYUfJ6Z7jau8+kIP56VJde
        T7EYfljX/fJucacO2VwCas3hhmGEWdgQ9+vXU72tw9/5inj1cdvxmyqvgQ7ultj8EFvsaqsFJA1G
        bK0okE+n+8OFlAwWXV1azifDydagx7FCNatmCVf9owhxItjMow5Ck946KURUuDPz2+/jAxkZZCNU
        LM0HO5/58XWERogDdpcayHs/c23kaXjNzOcW5Z/6YmNQJePzze9csvg/AAAA//9MmlsPgki2hd/7
        V3T61XQEBGozb9xFEAoFb8nJCSCiKCKXKqCS+e8TtDOZVzWolV17rfXtbWoL+e42FTWwVKLJ6V7V
        V8+ofg8x6sP39gjo2eg0UO4MzfXkwrkPbsSorJU3LmsjgbXuH6jROjs22EbzBNTGOxzLBmHkKIYq
        vB4Oxfby2Bi1I9UhiJ7mYWdVNeWIhMhWqtfOwL+8s3LlUJ52mU1xs71543DXt6iP3wsCZEJGz4mb
        B6zTWqe2p6jeqrbWe9jHy4agjxKhz/uRCUhOujvenB8eYtIeRAjd+xHr4Lgt3XivAG7ZPcHbenh6
        9LSVnnD1khX+5tPpm1++52NNjppys3+HodE2WLc1jQ1atz7DXYuFQEz7Z9oaGzsAH9QYbx7V5E1f
        P7i+kQF/z3tE6cP9+R9N3N9aGhjEhcAWMTZkyYu4DuUuNNvwjM2bF3sTie0jnN/KFdvcMmd91Z1M
        MLJzRC117Mt+PfEqtA65kjExFW9UcZzBvdjd6Ncf98OxcyAiyMWmAZXH1rzWKLtz+SK7D38sB3mr
        5KCVhUvPmvhseyF42ZBn+puMVtmjcdsoC1jENKCb0UDGFL2tB+Ja8YI3l/KUjm0QHiG97lrq05B6
        tTqIDQwHSHG+3J5KVm1igp5wloIF74zpIL/JWRZOZxMfZPHoTTvUC/J834mQplzbHdXPA+rEzLEv
        LC/ptAsfOvrW43ov9Gzyn9UDrMvJo9a1XUbfvI2CD6owjo6sbUZVE6A/+TcChoPSvnh6exTi6RzA
        4c3KkbuGTzT7R4z3h9qj3moroMrXP3Rb6a+UvJ71HmY/Tzdjz9LuntIAcf2pIkOpxGmr68oT7ZbH
        EQdJeCyZUdf/6INwdd5s/vwWcnkZkiO/L1mn7fIc2S/R//VLNnyMBvVZfqc6TDoi3WMU0KIega7p
        ZRvR92YoZM+6T9Sa8zgT2kcN92pJAmSe5HbSRNmGxzLXsBrx6/YqHXYFCrt1gc34yrfseiszUPsh
        xsde7hBdJ2Enf8BLv89rJ9vrVEStY4udzTtgY6gpR9lzvIhq7eZt9Nz5fYQuVK9Yl82n0b3rZwjK
        q62JxFO9HMDfhVAZnURYt7m233wne8zxfv6OXU35ASH/CGigD3vGXnnIKYxmMQ2q1kknpxom5aJw
        mNov8dpOdeaf0em52lB9cbXL2Q8MsH8TBwf8tGlHC5Yh+vIRsvNTxgyR7eVN9qlJcd9ZBv/J8VnW
        +2M/5x29ZJLe6N/+QuT7RY/4cHXbykwDiVrxboyYtfRE5PnnA96qWeeN4kfiUNUUVlB1khYJ/pMU
        8KhrnoahwKKu1BIbhFtZfPuNN3jF9AD1+jnR7XHnMXYpryY87lBhbRmVXl9E4hkNfqdRhwtLrz+Z
        ogP6Pc2wKV2Ecgza3QCKfwm+frJsly7Poe/9i7YyLknnqCLUp0yhxkFp0o5sTRGUercJ+GvceQN9
        Xxrk79yE2gYK0Y8PlJdNjc0XlsvhXpxztNjmXMC11QsN/C2pIJceBvXGg8uGu5cdEW+6jAbu9PD6
        PMqecH8glYiLhdayfm/GwLXypa87cetNu2POodzyU/yJbiGaztLqDCZaUYzd6IzGYsEFQPuXGaxS
        PKSsX0Xxt14J5SsrYpF6jpHSiA2NzeXdG0pvcL78iHD6Tk9536oWEOw+PtWLatX2y2sfox0KDbIk
        ol32CrQEtG2nBNXJ1NLpuDAF2KcfiQgavpcf3cMqzP44eGT+wRg1LO7RetyjQDmkNKWKvLbRwcYu
        9iTiR5NGYhWiTbjH8We3Qd0qtdyfvk9tLHj98vo6opusCvgy5yGStZQgzVZJINfruzE4UrFXpkPB
        UdM9LdmoPsOn0ryWS+Idsmc53A9T8sunOju+InY5r1TYlDlPfVUujGk3rgdZ9JsOr6OiMvqln2RI
        vsY6zbb+qxx42StgnTY6NQb+5X24M41RcrQ/FIdqZ4zXN8jgp+hEA25tsdVTfAFIj5OHsbeAsntN
        1QNdaznClri1Zz+duGB9MoemB7ZCo7VDOQohuGKze49tx3JhAinfZ0TZ6R2q95wTwOyvsc1/TsaQ
        Xcdc/vLbS+LTkkrXZIHe9srH3/61Wg5bDhXpW8WmvtOj4T6UR3l387mg6C87xNYHmiHv1VDsxQ5n
        dLUxmijbHnbBl3dM4EKDVvuWJ/zLEKLBoXqARCdtfuc7rNxpD5dg+NCt4wnpcCWFCyFsr1gbykM6
        6oXhwI8Pzn6XONmegN1VGXW8/b4c9NUmRNmH67FrCgZaffv3T794q0nbx/rykPvDsKdZP+J2dKVP
        DpxRq3O9asYouSiDy35xoPrlbpVt/3Yy+PLR2W8aNMxlGQXJQpn9WxZ18rtKQGwdh+ripYiG114d
        JGhXJjXMe//tN4L09QNqGYE3FuQTQy1cKoxdZfQG0+8EdEtN/+sHUnl4KiqUKdsEHDsM3nhyO5CZ
        WSUYP64xm2yBCig/xOcgC6SYTePrzIEPehxA3pB07ON6AS9fMXCg23LZ7l/GQ9acGuObKrmMvaTN
        ADPPwJv+WHiTKSshnKmg0oCaDaLPOjVlfniKwXi+XKKxiMQEZaWT05NhcensjydIwtUbbyd37z29
        Y5z9kydfvIemq3CvoFbWPBH36i4azLWowufimPjEZe90OvT5fP9eCVWnRJn1TyyQPBwSsph5a99K
        sQt2GXY48p9vxK50ESPdsmMchEJdDqOT7uWl/FTx1w/QoOYdaBfZnvz00sCHBlh5N7AVo0375clw
        OB7XQS92XUtAzSt0d+uKZodQjcZNnhFQ+odHxKBOol89zL9n5tNbYxRpVUMuFQbVH081pd76NsF4
        UDWamie5nJLGiSFXqpEsb6OVEn5FZPnLSyeYdDadL7tG2YXnDXbrPI5GwRn2yswryeiFKpr13YQl
        aD424r1dDltPOAPDhxNerxyhbY5nhZO/+uXlwtTOfq5GwtEfsD3PQ/o5P6EHPZiB8r6bbJWWgwgl
        Em167PDGGNNx5QBvOgzHueu04yaPO0Aw5tRZLO7tlz8BqyeLbhl/YHx6f4aoXtIjWWzyXTm9vZyg
        u2NYwVJ/knZl5O4Rijy4441r6YxHQmpCIZcfIgowRaSU1Ce6siGgZ/MZz3x77aLv/TpkKip7wRH3
        qLsc/WCR71+InC+XBll1xFFLFgVvfHqHAipSMRr0Q5KyL8/epZ5N8VKN0sGzN0+Y5zPU/UxPNl3T
        oVYk1x5JMxRlSZ/iawHoKvDYOZsrxIQjeSCv1ALqv0rwuui2tUEXt//oZ589VBPN+ocDyVVL4ZqK
        NTiHvAqGUGBpXwmKC8J5tcNWn53ZEMtnAQ7SKaf2ohsRaR5HHS6jvCCSaz3YpHNdA0Hpn7DaX0ZG
        xfc1QJ4kJNRXwzfqkU1UcN29RoTLMDBmlisX3Q4rj6rd2U45mIq9Au5exsFLNcv5fQeZvWrgdDw0
        qFMHsYagzi/kOeft6VhGsnLYSheqn1d+NLxOSgXhgw3BwKeax3/rV1Z6MZhmXjO4oSfA3J8D6Eda
        9giw+MvDdifdU1IVe07JLv2ALWnltpMUVHtYGcIGq19/xN/2FUwfcgsUPubb+qjeH0p5IikRTuY9
        5SS74yA53QXsPKZj+uVL8LluJ/rVC2FsrVqe9TlQZl7588vP46Th9WoKUKvX2wqxxt/T9dK1EP9Y
        hqoy+zV8mf3omJ0aFQFFE3ZSY2uMH58rQMjQMiivOqSdLZkZaPiYUy0hfMQM45IA1alLlJvziPpi
        kxzhec1CbLpqV8589gFdqF+pGt4Kb8hNKstCJi2x9xA1xp1Plv59Pt364icaSSI94XMTot+8ib0k
        bQDr/n4F9/3SM6azeXggZ4jvVLP9yugfyUYFZWkefnrcNa5GkHMp4x+PpW0WPGXP7mwaZe3G4GYe
        i/BTzrFnnpKWKjI2UTC8hOA1zyuHZLpM6FLEHPYOm1vL2lHvwOdjK+Bmns3WhVUAqc56MPME1PCj
        bKIYZVt6dRdVOskfpsr+iftg/3Y7tGNPd/L3/2BdSlpGpM9pCzceHBrnnMoodVwbLURRwlpzI2xs
        DTmE/sKr1Lvya4+d9LT49RtMRLttn9ERkFJHm3letouGKK5UWbJ1g3xk+8DGASEXpiGh1A3kxmBp
        OcjKmHYhTfBOSb/+U57zPDZzrkDt86wGyihq5+/9bIX0UKhwbqrF7Jcsb0w79wjXKpxwgl58NNLW
        zOFbH4HH/HZwnp0D/IEowYpYiH31AzlcioNlailosCM+Q/xN7wNZARW111ubA7lVfNDP50Xm/geL
        XF1885E3DL2d/X6P+0h6ND6aSASB9VtqublaMu0kdRBhuBNhs1yl8/wogej+6IJx5ll0nj/KTZGb
        dEszlvaSXBTK7A8CYbM8RauZzyms4xie84QxjYk8SZwwxNhy+YgNtZQA+EnmkhW9dNHAm58a3djx
        Pet90jKLSDq0tgnU2UaLdILBa+DU2N6X77VDWd1N+OYvy+UZ6nND65BzNtcUb8AqV+llL4DOv9c0
        yN6695s/zvM8qoZClA7gX/bw13cr4N9//Pnn/303DKr6mr/mxYA+H/u//7sq8HdyTf7mOOFvKvw2
        EUiXFPlf//pnCeGvT1tXn/7/+/qZv7u//vXnSvmtG/zV133y+t/X/5i/7d9//AcAAP//AwCwYlRF
        4yAAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d0b95b528986293-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 02 Jun 2023 00:29:55 GMT
      Function-Execution-Id:
      - b1h9nbne46ve
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '30'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - e50453f7dc255b9e9596e48c88462103
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - f7801415fa6d22e78a4d7d09ad0eb12a
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out who won the
      2010 Nobel Prize in Physics and write their names, affiliated university, and
      discovery to a file. I can start by searching for the information online.\",\n        \"reasoning\":
      \"I need to gather information before I can write it to a file. The internet
      is a good place to start.\",\n        \"plan\": \"- Use the browse_website command
      to search for information on the 2010 Nobel Prize in Physics\\n- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that the information I find is accurate and that I am not missing
      any important details.\",\n        \"speak\": \"I will search for information
      on the 2010 Nobel Prize in Physics and write it to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: announcing
      the 2010 Nobel Prize in Physics, which was awarded jointly to Andre Geim and
      Konstantin Novoselov for their groundbreaking experiments with graphene, a two-dimensional
      material.\n\nLinks: [''\\nSkip to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '5536'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA4xTTU8bQQy991dYvrSVNlECBcreegHRCkQrOKCmioZdJ2syM97OOFkCyn+vZrMJ
        EFDb28gfz+/5jR+RS8yxqIwWrra9o3N3/3BzMjtxpz9CE2/cHh99LYcn19+XF78xQ7m9o0K7jn4h
        rrakLB4zLAIZpRLz4eHng8PDg6Pj4wydlGQxx2mtvf3+QU/n4VZ6g/3BEDOcRzMlzB+xDuJqHavM
        yEfMh3sHnzJ8At8m9vaPM1RRY59qPx3vrzIsKuGCIuY/H9FR3AAHsYQ5mhg5qvGaaIpX8knC48gD
        AIxQK5lPK40jzKELdgm61xQc4RlUZkEwkbkvQSsC9hMJziR6cAaeqOzDhTTdG1SgCawErOltYMKW
        YB7ZT9v2NjlWGbfxQpwzvuyPMHs+PpCJ4tlPX3B4ezqYjtibyNCwtWCslQYcJUYxQT0ntzu8tsav
        5/bgOtJfsLdad5ltsXegi8DKBUe30bVZmTMzgjgPCcroKzyO7SAlD4WEQIXaZae7q255cWzVlcC+
        DXa1YKVocXaVxprMbEOlXdT8//XuDYYDuJBbsnAZ+CERhstqGbmI0LD3FN5H8MbRh/gxAzOZsOV0
        JjD3vKAQWZdZq6HkWMiCwvKFJWueq2zzVTsOr35qmrCW8ILzjlITpruffJ1ItU8QSdPYJ03jOmka
        r4XEvqZzyHabn67k6l8LMRFMY0JJJdwJ++SfCnzxZSA4JXbtJr6Jb4+VPVzIQiJZWcBEQto3B5iG
        dIS3gcwsXRPd1xTYkde0cK1gGkxdkacMDGgjvTIlI4s3FpxRCmxsH64qWkJDgZ570vYnV6+35oBM
        4Nz4oqKoFLaOtK505oz8ClcZTthzrMbro8Uco0qNGbIv6R7zwerX6t0fAAAA//8DAFhZRDBuBQAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d0b95cc2867233a-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 02 Jun 2023 00:30:19 GMT
      Function-Execution-Id:
      - b1h9lhxfsu1w
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '20043'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - e97c49ec57c1cc60a32033b325ca7045;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86017'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.655s
      X-Request-Id:
      - bcb625360d90cb3a427590d01acd0626
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out who won the
      2010 Nobel Prize in Physics and write their names, affiliated university, and
      discovery to a file. I can start by searching for the information online.\",\n        \"reasoning\":
      \"I need to gather information before I can write it to a file. The internet
      is a good place to start.\",\n        \"plan\": \"- Use the browse_website command
      to search for information on the 2010 Nobel Prize in Physics\\n- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that the information I find is accurate and that I am not missing
      any important details.\",\n        \"speak\": \"I will search for information
      on the 2010 Nobel Prize in Physics and write it to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: announcing
      the 2010 Nobel Prize in Physics, which was awarded jointly to Andre Geim and
      Konstantin Novoselov for their groundbreaking experiments with graphene, a two-dimensional
      material.\n\nLinks: [''\\nSkip to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have found the information I need. Now I need to write
      it to a file using the write_to_file command.\",\n        \"reasoning\": \"I
      have the information I need and the write_to_file command will allow me to save
      it to a file.\",\n        \"plan\": \"- Use the write_to_file command to write
      the information to a file\",\n        \"criticism\": \"I need to make sure that
      the information is written correctly and that the file is saved in the correct
      location.\",\n        \"speak\": \"I will use the write_to_file command to write
      the 2010 Nobel Prize in Physics winner''s name(s), affiliated university, and
      discovery to a file.\"\n    },\n    \"command\": {\n        \"name\": \"write_to_file\",\n        \"args\":
      {\n            \"filename\": \"2010_nobel_prize_winners.txt\",\n            \"text\":
      \"The 2010 Nobel Prize in Physics was awarded jointly to Andre Geim and Konstantin
      Novoselov for their groundbreaking experiments with graphene, a two-dimensional
      material. They were affiliated with the University of Manchester.\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6884'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7yTTW8TQQyG7/wKyxdAmkRJQ9Joz6hSBZRChYRgUTSZdXaHzMcy9iZNo/3vaJsv
        FHooF67+et/HsrdoC8zQVFqMr13v8oPf3H17f/X1lx29u7l6+3n+if3HaXkpb5o7VBjnP8nIvqNv
        oq8diY0BFZpEWqjAbDiZjieT8fRiqtDHghxmWNbSG/XHPWnSPPYGo8EQFTasS8Jsi3WKvpaZxCUF
        xmw4Ho0VnoafEtOhQomi3Sl0OZy0Ck0VrSHG7PsWPfFhcIqOMEPNbFl0kM5mDEKhQ9jmAQAgR6li
        U1bCOWawD+4TdC9dMMdrqPSKYO+JCvAbEM3LPlwDV7FxBZiKzBKk0gJSESysI1hrhnWyIhTAxJTI
        iNtAwzaUj0WJdDF7rDTRex2Kfo7qTweJNMdgQ3mwsdZBQCJ4vSTgJtGzFHUoTnU2LGLyutssWAZt
        TJO00Ll07XTYqfbgC9PTfjsrzwY/EzDJijWW/YEtEBX/h41r0svjSq1z0PwD4cVgOICbOCcHt8k+
        dKpwW23YGoa1DYHSS4agPb3i1wr0YmGd7V4DmmBXlNjKRj3aLiybuKK0gTUleoJN4pG+n+OOoFWH
        u907/OtsO+kd3JHmjF+n8vzad4mu9tTegc5CBzqrO9DZjo770v3FqbfdO8tDi63ChQ2Wq9nudjFD
        llijQhsKusds0P5oX/wGAAD//wMAic728ngEAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d0b96801b932d70-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 02 Jun 2023 00:30:43 GMT
      Function-Execution-Id:
      - b1h96zvs8pk2
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '16010'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 630bf10efb3dc1db932d6e7bcc77e837;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85999'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.666s
      X-Request-Id:
      - b739993591ffc9371b2c2c9a1bd13a3b
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"The 2010 Nobel
      Prize in Physics was awarded jointly to Andre Geim and Konstantin Novoselov
      for their groundbreaking experiments with graphene, a two-dimensional material.
      They were affiliated with the University of Manchester.\"\"\"\n\n\nCONCISE SUMMARY:
      The text is best summarized as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '467'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0RQyW7bMBC99ysGc6YMKfFW3QqkKdIgRooip6AIaHJkjk1xBHJixTX874W6pNe3
        452RPbboglXXD7FaPfSneHeI/utBN+HbbTe/i9v9/c3T7Wf/HQ3Kdk9O/zpmTvohkrIkNOgyWSWP
        bbNcL5bLxXq+MtiLp4gt7gatrmeLSl/zVqr6um7Q4GuxO8L2jEOWftAXlQOlgu1qbfB/9Ds8bwyq
        qI3vSNN8vBh0QdhRwfb5jD2Vf6FZImGLthQuapNOEyUppWn+p+QzwRfiHmzycC/pt4YTbOQohaIc
        YaRMsBdOGk9gR5s9edBAcFU3NWxkSxEeM/8k4ASP4VTYFegkTxrOQG8DZe4paYGRNcAu2yFQIgMW
        dJTKT2RhSTZCb5Uy22hgDBwJbNdx5OnPP96p9inxkXJhPYF08GCTC1SU8gwvBjtOXMJLJlskYYtF
        ZUCDnDy9YVtfflw+/AIAAP//AwBCcdEu7AEAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d0b96fb48e402b0-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 02 Jun 2023 00:30:51 GMT
      Function-Execution-Id:
      - b1h9cv26rhy6
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '3739'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 531e44f948fa88b426c5d77d37bec450;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89412'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 392ms
      X-Request-Id:
      - 163e35a505093bdc0f5703bcbd70fadb
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["The 2010 Nobel Prize in Physics was awarded jointly to Andre
      Geim and Konstantin Novoselov for their groundbreaking experiments with graphene,
      a two-dimensional material. They were affiliated with the University of Manchester."],
      "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '305'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d0b971938b11145-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 02 Jun 2023 00:30:52 GMT
      Function-Execution-Id:
      - b1h9axhldv5a
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '24'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 94889b75a28c62197fc39a062e2b2907
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 9bd6cc33f522f3e39674da81632e3432
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "Andre Geim and Konstantin Novoselov were jointly awarded the
      2010 Nobel Prize in Physics for their experiments with graphene, a two-dimensional
      material, while affiliated with the University of Manchester.", "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '282'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        AwD9u8D24yAAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d0b971f8c552937-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 02 Jun 2023 00:30:53 GMT
      Function-Execution-Id:
      - b1h99rx6whzf
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '20'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 014fc66331efca13592ffb345539ab86
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 4975c83591c55b482b76d01d768adb39
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out who won the
      2010 Nobel Prize in Physics and write their names, affiliated university, and
      discovery to a file. I can start by searching for the information online.\",\n        \"reasoning\":
      \"I need to gather information before I can write it to a file. The internet
      is a good place to start.\",\n        \"plan\": \"- Use the browse_website command
      to search for information on the 2010 Nobel Prize in Physics\\n- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that the information I find is accurate and that I am not missing
      any important details.\",\n        \"speak\": \"I will search for information
      on the 2010 Nobel Prize in Physics and write it to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: announcing
      the 2010 Nobel Prize in Physics, which was awarded jointly to Andre Geim and
      Konstantin Novoselov for their groundbreaking experiments with graphene, a two-dimensional
      material.\n\nLinks: [''\\nSkip to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have found the information I need. Now I need to write
      it to a file using the write_to_file command.\",\n        \"reasoning\": \"I
      have the information I need and the write_to_file command will allow me to save
      it to a file.\",\n        \"plan\": \"- Use the write_to_file command to write
      the information to a file\",\n        \"criticism\": \"I need to make sure that
      the information is written correctly and that the file is saved in the correct
      location.\",\n        \"speak\": \"I will use the write_to_file command to write
      the 2010 Nobel Prize in Physics winner''s name(s), affiliated university, and
      discovery to a file.\"\n    },\n    \"command\": {\n        \"name\": \"write_to_file\",\n        \"args\":
      {\n            \"filename\": \"2010_nobel_prize_winners.txt\",\n            \"text\":
      \"The 2010 Nobel Prize in Physics was awarded jointly to Andre Geim and Konstantin
      Novoselov for their groundbreaking experiments with graphene, a two-dimensional
      material. They were affiliated with the University of Manchester.\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have completed my
      task. I should check that the file was written correctly using the read_file
      command.\",\n        \"reasoning\": \"I want to make sure that the file was
      written correctly and that the information is accurate.\",\n        \"plan\":
      \"- Use the read_file command to check that the file was written correctly\",\n        \"criticism\":
      \"I need to make sure that the file was written correctly and that the information
      is accurate.\",\n        \"speak\": \"I will use the read_file command to check
      that the 2010 Nobel Prize in Physics winner''s name(s), affiliated university,
      and discovery were written correctly to the file.\"\n    },\n    \"command\":
      {\n        \"name\": \"read_file\",\n        \"args\": {\n            \"filename\":
      \"2010_nobel_prize_winners.txt\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command read_file returned: The 2010 Nobel Prize in Physics was
      awarded jointly to Andre Geim and Konstantin Novoselov for their groundbreaking
      experiments with graphene, a two-dimensional material. They were affiliated
      with the University of Manchester."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '8179'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA5SSwWrbQBCG732KYc6ysZPacXQrlBa3pKSlpZCqmLU0ljbe3RE7IzeO8bsHWXKd
        OPTQ68zu/38fzA5tgSnmldHc125wdeO3j58vft5/aNynu9lm45Z35p2812/fv15ggry8p1z7H8Oc
        fe1ILQdMMI9klApMx9PZZDqdzKbjBD0X5DDFstbB5XAy0CYueTC6HI0xwUZMSZjusI7sa10orykI
        puOr62mCp/DTYvI2QWU17jS6noz2CeYV25wE01879CTH4MiOMEUjYkVN0BaTg1JoFXZZAADIUCtu
        ykolwxT6Yb+gB22HGd5sQY2swQr0XDSEOUjFjSuAQgFaWQEhEcsBTCigoPYV+K2QW0EjNpSgFfXz
        hSkpaBvmTSiGGSbPiyMZ4WBD2bXPoTIb+ttcgO9xzKGYIrVggSEQFbDiCJ5AGVpXGxqC2IQ27bym
        diZ0DQP4IfRPvDbrhc5ZTh6t2tyKP+IeOJTBmzWBNLGNNgqvPIxzwKujjvQ+RnspE6m1ohg5CnAE
        K9KQwJJWHAnmL6HO7aQmsz4S/bHOQfM/jsMMu7R9cjyU/umrOwnGU1f0PPkMx8Ty/MK6xZq23eeP
        pIPbais2ly+8JHcb7SMdKQ4kPVAW9rhPcGWDlWrRHQumKMo1JmhDQQ+Yjva/92+eAAAA//8DAI0W
        QwfgAwAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d0b9750d90386fe-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 02 Jun 2023 00:31:14 GMT
      Function-Execution-Id:
      - b1h9vvn8hwrd
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '12695'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 63340a414b7d46d52d916157f4a1b26d;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85975'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.682s
      X-Request-Id:
      - 0654758cb5d14eda629ce259b64ec8a1
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"The 2010 Nobel
      Prize in Physics was awarded jointly to Andre Geim and Konstantin Novoselov
      for their groundbreaking experiments with graphene, a two-dimensional material.
      They were affiliated with the University of Manchester.\"\"\"\n\n\nCONCISE SUMMARY:
      The text is best summarized as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '467'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0RQS2sbMRC+91cMc9aaXSe2k72VQF0oCabQUylBlmatSSXNIo29cYz/e9k+0uv3
        5rsge+zRBasujbHZPI7hM7lViLdf03KZP8XtdkxvfvfwcDyiQdm/kNO/joWTNEZSlowGXSGr5LHv
        1ner9Wa9vF8ZTOIpYo+HUZubxarRY9lL0960HRo8Vnsg7C84FkmjPqv8pFyx39wZ/B/9Dt92BlXU
        xnek6+6vBl0QdlSx/37BRPVfaJFI2KOtlavarPNEyUp5nv8x+0KwJU5gs4cvkn9rOMOTnKRSlBNM
        VAhehLPGM9jJFk8eNBAs266FJ9lThF3hNwLOsAvnyq7CIGXWcAF6HalwoqwVJtYAh2LHQJkMWNBJ
        Gj+TlSXbCMkqFbbRwBQ4Ethh4Mjzn3+8c+23zCcqlfUMMsCjzS5QVSoLvBocOHMNz4VslYw9VpUR
        DXL29Ip9e/1x/fALAAD//wMA9k5MnuwBAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d0c961119051197-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 02 Jun 2023 03:25:00 GMT
      Function-Execution-Id:
      - 3akcatgs7qrf
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '4313'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - b65b099c00f6c3a43a68d725b7a9a2de;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89412'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 392ms
      X-Request-Id:
      - 6e2e4ddc4aae81cd6efdaaad8e5b8f05
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["The 2010 Nobel Prize in Physics was awarded jointly to Andre
      Geim and Konstantin Novoselov for their groundbreaking experiments with graphene,
      a two-dimensional material. They were affiliated with the University of Manchester."],
      "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '305'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d0c9630fd6ee104-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 02 Jun 2023 03:25:01 GMT
      Function-Execution-Id:
      - 3akcdc5ahxqa
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '18'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - bf75b5d908176e1dfc7d3b18bea56836
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 79eda06fe42b4d2da587a13d9c745b25
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "Andre Geim and Konstantin Novoselov were jointly awarded the
      2010 Nobel Prize in Physics for their experiments with graphene, a two-dimensional
      material, while affiliated with the University of Manchester.", "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '282'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        AwD9u8D24yAAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d0c9634ef4f22c4-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 02 Jun 2023 03:25:01 GMT
      Function-Execution-Id:
      - 3akcn1e2ugqj
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '23'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - bfad5b221845e5e0ac752a1d67279dab
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - f4c6a138b32885b6a6494f0594ea7515
    status:
      code: 200
      message: OK
version: 1
