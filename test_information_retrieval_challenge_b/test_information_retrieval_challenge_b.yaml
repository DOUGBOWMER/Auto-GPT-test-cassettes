interactions:
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3304'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA5xTS2/bMAy+71cQPDuvPpbG9wHrMAwdumED5iGQZdpma0muRNdNi/z3QXaaNimw
        AbsZNPW9SD4hF5iirpVo0zaT5efHs0/z/vr+46LOV4vG/OQPj6W+u/56c/EDE3T5DWnZvZhqZ9qG
        hJ3FBLUnJVRgunh/cX62PF2tFgkaV1CDKVatTE6n5xPpfO4m89P5AhPsgqoI0ydsvTOtrMXdkg2Y
        Ls9OEnzB3tdPTs8TFCeq2ZdWy+U2QV071hQw/fWEhsIzrHcNYYoqBA6irESRzgrZaOApswAAGUrt
        uqqWkGEKu+LuBz1ILGZ4CZaoAHFQsi3AdQJ97aB3FqQmOJkv5vDF5dTAledHArZwVW8C6wDKFtB7
        Foqd7MEqQyEBVZbccMwLOsv35APLJhm6Cw7a3ZPfRD4FJTc0hUvQykIQ5QXyDQRSXtdsKyidHzSw
        LZ03KuYFzjZsaZph8tqOJxWcZVsde6qU1OQPEHIqnacd6yif5bWebwOlkLckwAEUVM4V0DZKU+wb
        lB4raBtlR/IJfA9DIpB71wda95SHyKKdMTGECDF4HAwemvtX5llmX/AH8Wtx66j7Nfx+KAfoe4tH
        0rVnYc3BHIdn1C1B6HyEUvIG73LcmJiQ1p1XQsOMh95LUAasEzAcQpylshtg0zoflxUKEsVNOA4x
        tKRun1X03DT/H9Sr5TyYboYj4TZ5vpFdbm9OJG7zqOVwjkeala+Oz2v80flmfF6LtCGdzfq+n9oo
        to1ap85Xs+ErzNpR8yz6mYXOGOU3swOeEfKuoxD9j7h/c9+zteSfzQ6Gd74zu8VtgiVbDvV6PBxM
        MYhrMUG2BT1gOt/+3r77AwAA//8DALC6hzNABQAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94afe2b4f1403-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:13:28 GMT
      Function-Execution-Id:
      - ldou4cmk8dvo
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '16803'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 4c5fd5eab0fd112b592f227468c4ce4a;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86502'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.332s
      X-Request-Id:
      - 310cab176f000a0275ee5a50471c7dbc
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text; include any information that can be
      used to answer the question \"2010 Nobel Prize in Physics winner\". Do not directly
      answer the question itself:\n\n\nLITERAL TEXT: \"\"\"Skip to content This website
      uses cookies to improve the user experience. By using this website you consent
      to all cookies in accordance with our cookie policy.I understand Close the search
      form A button that allows you to close the search form if needed Close the search
      form A button that allows you to close the search form if needed Close Mobile
      Menu The Nobel Prize The Nobel Prize Logo Toggle Mobile Menu Nobel Prizes &
      Laureates All Nobel Prizes Physics Prize Chemistry Prize Medicine Prize Literature
      Prize Peace Prize Prize in Economic Sciences Quick facts Nomination Physics
      Prize Chemistry Prize Medicine Prize Literature Prize Peace Prize Prize in Economic
      Sciences Nomination Archive Alfred Nobel Alfred Nobel\u2019s life Alfred Nobel\u2019s
      will News & insights Press In-depth Events Public events Nobel Prize Concert
      Nobel Week Dialogue Nobel Prize Dialogue Nobel Prize Summit Nobel Prize Inspiration
      Initiative Nobel Prize award ceremonies Educational Close the search form A
      button that allows you to close the search form if needed Close the search form
      A button that allows you to close the search form if needed Header Search Submit
      a search term Allows users to submit a search term Physics The Nobel Prize in
      Physics 2010 Explore Summary Physics Prizes Chemistry Prizes Medicine Prizes
      Literature Prizes Peace Prizes Prizes in Economic Sciences Summary Prize announcement
      Press release Advanced information Popular information Illustrated information
      Speed read Award ceremony video Award ceremony speech Banquet video Laureates
      Andre Geim Konstantin Novoselov Enhanced Page Navigation The Nobel Prize in
      Physics 2010 The Nobel Prize in Physics 2010 - Prize announcement The 2010 Nobel
      Prize in Physics - Press release The Nobel Prize in Physics 2010 Andre Geim
      Konstantin Novoselov Share this Share on Facebook: The Nobel Prize in Physics
      2010 Share this content on Facebook Facebook Tweet: The Nobel Prize in Physics
      2010 Share this content on Twitter Twitter Share on LinkedIn: The Nobel Prize
      in Physics 2010 Share this content on LinkedIn LinkedIn Share via Email: The
      Nobel Prize in Physics 2010 Share this content via Email Email this page The
      Nobel Prize in Physics 2010 \u00a9 The Nobel Foundation. Photo: U. Montan Andre
      Geim Prize share: 1/2 \u00a9 The Nobel Foundation. Photo: U. Montan Konstantin
      Novoselov Prize share: 1/2 The Nobel Prize in Physics 2010 was awarded jointly
      to Andre Geim and Konstantin Novoselov \"for groundbreaking experiments regarding
      the two-dimensional material graphene\" To cite this section MLA style: The
      Nobel Prize in Physics 2010. NobelPrize.org. Nobel Prize Outreach AB 2023. Tue.
      30 May 2023. <https://www.nobelprize.org/prizes/physics/2010/summary/> Back
      to top Back To Top Takes users back to the top of the page Nobel Prizes and
      laureates Nobel Prizes 2022 Fourteen laureates were awarded a Nobel Prize in
      2022, for achievements that have conferred the greatest benefit to humankind.
      Their work and discoveries range from paleogenomics and click chemistry to documenting
      war crimes.See them all presented here. Explore prizes and laureates Look for
      popular awards and laureates in different fields, and discover the history of
      the Nobel Prize. Select the category or categories you would like to filter
      by Physics Chemistry Medicine Literature Peace Economic Sciences Select the
      category or categories you would like to filter by Physics Chemistry Medicine
      Literature Peace Economic Sciences Decrease the year by one - Choose a year
      you would like to search in Increase the year by one + Explore About the Nobel
      Prize organisation The Nobel Foundation Tasked with a mission to manage Alfred
      Nobel''s fortune and has\u00a0ultimate responsibility for fulfilling the intentions
      of Nobel''s will. The prize-awarding institutions For more than a century, these
      academic institutions have worked independently to select Nobel Prize laureates.
      Nobel Prize outreach activities Several outreach organisations and activities
      have been developed to inspire generations and disseminate knowledge about the
      Nobel Prize. Press Contact FAQ Privacy policy Technical support Terms of use
      For developers Media player Join us Facebook Twitter Icon Follow The Nobel Prize
      on Twitter Twitter Instagram Icon Follow The Nobel Prize on Instagram Instagram
      Youtube Icon Follow The Nobel Prize on Youtube Youtube LinkedIn IconConnect
      with The Nobel Prize on LinkedIn LinkedIn The Nobel Prize Copyright \u00a9 Nobel
      Prize Outreach AB 2023\"\"\"\n\n\nCONCISE SUMMARY: The text is best summarized
      as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4870'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0TOT2/bMAwF8Ps+BcGzHNhL3Ky67bIi2FBkh+4yDIUiszEzifQkJv0T5LsPHtb2
        +vj4wzsjD+gxjsFinlKz/vayOmzyn+Pddj2Mp7T5chqu+pvvm8PyR4cOdXegaP8/FlHzlMhYBR3G
        QsFoQN9dfepX61XbrR1mHSihx/1kzXLRN3YsO23aZTtjxxr2hP6MU9E82b3pb5KK/rprHb7bb/my
        d2hqIb03V/3FYRyVI1X0P8+Yqb6qRROhx1ArVwti80YVI5n3BxE9SmTZg40EH9uuhVvdUYJt4RcC
        FtiOz5VjhUcWoVIdfJahENwQZwgywFeVfy4L3OpJKyU9OXjQMotcgJ4mKpxJrIIK7EuYRhJyEMAe
        tRnmU2WVkCAHo8IhLfDi8IGF63hfKFQV9FhNJ3TIMtAT+vby6/LhLwAAAP//AwCxXhQNtwEAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94b9e2a45119b-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:13:39 GMT
      Function-Execution-Id:
      - ldoucqfmwj9c
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '2791'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 5b910ed49bf11234e094e665a36013a6;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '88317'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 1.121s
      X-Request-Id:
      - 9bff19c2948df6fb290febe90a17eeb8
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["Skip to content This website uses cookies to improve the user
      experience. By using this website you consent to all cookies in accordance with
      our cookie policy.I understand Close the search form A button that allows you
      to close the search form if needed Close the search form A button that allows
      you to close the search form if needed Close Mobile Menu The Nobel Prize The
      Nobel Prize Logo Toggle Mobile Menu Nobel Prizes & Laureates All Nobel Prizes
      Physics Prize Chemistry Prize Medicine Prize Literature Prize Peace Prize Prize
      in Economic Sciences Quick facts Nomination Physics Prize Chemistry Prize Medicine
      Prize Literature Prize Peace Prize Prize in Economic Sciences Nomination Archive
      Alfred Nobel Alfred Nobel\u2019s life Alfred Nobel\u2019s will News & insights
      Press In-depth Events Public events Nobel Prize Concert Nobel Week Dialogue
      Nobel Prize Dialogue Nobel Prize Summit Nobel Prize Inspiration Initiative Nobel
      Prize award ceremonies Educational Close the search form A button that allows
      you to close the search form if needed Close the search form A button that allows
      you to close the search form if needed Header Search Submit a search term Allows
      users to submit a search term Physics The Nobel Prize in Physics 2010 Explore
      Summary Physics Prizes Chemistry Prizes Medicine Prizes Literature Prizes Peace
      Prizes Prizes in Economic Sciences Summary Prize announcement Press release
      Advanced information Popular information Illustrated information Speed read
      Award ceremony video Award ceremony speech Banquet video Laureates Andre Geim
      Konstantin Novoselov Enhanced Page Navigation The Nobel Prize in Physics 2010
      The Nobel Prize in Physics 2010 - Prize announcement The 2010 Nobel Prize in
      Physics - Press release The Nobel Prize in Physics 2010 Andre Geim Konstantin
      Novoselov Share this Share on Facebook: The Nobel Prize in Physics 2010 Share
      this content on Facebook Facebook Tweet: The Nobel Prize in Physics 2010 Share
      this content on Twitter Twitter Share on LinkedIn: The Nobel Prize in Physics
      2010 Share this content on LinkedIn LinkedIn Share via Email: The Nobel Prize
      in Physics 2010 Share this content via Email Email this page The Nobel Prize
      in Physics 2010 \u00a9 The Nobel Foundation. Photo: U. Montan Andre Geim Prize
      share: 1/2 \u00a9 The Nobel Foundation. Photo: U. Montan Konstantin Novoselov
      Prize share: 1/2 The Nobel Prize in Physics 2010 was awarded jointly to Andre
      Geim and Konstantin Novoselov \"for groundbreaking experiments regarding the
      two-dimensional material graphene\" To cite this section MLA style: The Nobel
      Prize in Physics 2010. NobelPrize.org. Nobel Prize Outreach AB 2023. Tue. 30
      May 2023. <https://www.nobelprize.org/prizes/physics/2010/summary/> Back to
      top Back To Top Takes users back to the top of the page Nobel Prizes and laureates
      Nobel Prizes 2022 Fourteen laureates were awarded a Nobel Prize in 2022, for
      achievements that have conferred the greatest benefit to humankind. Their work
      and discoveries range from paleogenomics and click chemistry to documenting
      war crimes.See them all presented here. Explore prizes and laureates Look for
      popular awards and laureates in different fields, and discover the history of
      the Nobel Prize. Select the category or categories you would like to filter
      by Physics Chemistry Medicine Literature Peace Economic Sciences Select the
      category or categories you would like to filter by Physics Chemistry Medicine
      Literature Peace Economic Sciences Decrease the year by one - Choose a year
      you would like to search in Increase the year by one + Explore About the Nobel
      Prize organisation The Nobel Foundation Tasked with a mission to manage Alfred
      Nobel''s fortune and has\u00a0ultimate responsibility for fulfilling the intentions
      of Nobel''s will. The prize-awarding institutions For more than a century, these
      academic institutions have worked independently to select Nobel Prize laureates.
      Nobel Prize outreach activities Several outreach organisations and activities
      have been developed to inspire generations and disseminate knowledge about the
      Nobel Prize. Press Contact FAQ Privacy policy Technical support Terms of use
      For developers Media player Join us Facebook Twitter Icon Follow The Nobel Prize
      on Twitter Twitter Instagram Icon Follow The Nobel Prize on Instagram Instagram
      Youtube Icon Follow The Nobel Prize on Youtube Youtube LinkedIn IconConnect
      with The Nobel Prize on LinkedIn LinkedIn The Nobel Prize Copyright \u00a9 Nobel
      Prize Outreach AB 2023"], "model": "text-embedding-ada-002", "encoding_format":
      "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4560'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94bc2f89de23d-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:13:43 GMT
      Function-Execution-Id:
      - ldou6edrrjfb
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '176'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 384df9262218dd36d483722601437611
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 4f717577279beaebeda58ccce2e10097
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "announcing the 2010 Nobel Prize in Physics winners, Andre Geim
      and Konstantin Novoselov, for their experiments on graphene, a two-dimensional
      material.", "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '228'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94bca8995e268-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:13:44 GMT
      Function-Execution-Id:
      - ldou72tkymgg
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '28'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 81f3d87fa060df13ae30e75aaeff5685
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - cb4a72efeb7d8328b98a8e3f1215e991
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out who won the
      2010 Nobel Prize in Physics and write their names, affiliated university, and
      discovery to a file. I can start by searching for the information online.\",\n        \"reasoning\":
      \"I need to gather information before I can write it to a file. The internet
      is a good place to start.\",\n        \"plan\": \"- Use the browse_website command
      to search for information on the 2010 Nobel Prize in Physics\\n- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that the information I find is accurate and that I am not missing
      any important details.\",\n        \"speak\": \"I will search for information
      on the 2010 Nobel Prize in Physics and write it to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: announcing
      the 2010 Nobel Prize in Physics winners, Andre Geim and Konstantin Novoselov,
      for their experiments on graphene, a two-dimensional material.\n\nLinks: [''\\nSkip
      to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '5499'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6SST28aQQzF7/0Uls8LggQasrceqoi0jVSp6aVEq8muYV1m7O2MgRDEd6+WPyEl
        yqm30Xj88/Obt0GuMMeydlaGxneuvj4P7Od1s9Kb6c3w9k/vtrkfDX58n6+HnwUz1MffVNqho1tq
        aDwZa1sqIzmjCvP+x9FwcDXoXVxlGLQijznOGutcdocdW8RH7fQue33McJHcjDDfYBM1NFaYzkkS
        5v2LwXWGJ/ipMLrO0NScP10NLkfbDMtauaSE+a8NBkpHcFRPmKNLiZM5sVamipG0K2wmAgAwQat1
        MastTTCHw+WhQE/WXk5wDLVbEkx1IRVYTcAy1RhcKw/GIERVF+50dTiDKawiGwFbe3YwZU/dCWav
        8ZFcUmGZHWeUTmCRaDdg116YFm0nlBqCk1fccw3vDmm8kz2/A/f/yT5Dl5GNS07hqP+4enBzgrSI
        LcoZjMGFHZpl9gbuynIRnZFfw07ES4OoQeCU2iYna+DQaGw/ESoyxz6db5oacvOjlBV7/8464+M3
        vrJsz9lmx0gcPHmTCHGB9iP+8fBMiYuz8zDtC+3bE+Ki1+8Voo/kiybyMxUrFqGYutbGLjtvPqXx
        k1SR4IY47Dz7orJLNwvc6VITeV1mcC+8pJjY1qBT+OakrCkZxQymGltTOAI9NRQ5kFgCFZhF19Qk
        lIEDW2mnakuJVZyH4IwiO/9i1s6wg28T2eI2wykLp7rY5xpzTKYNZshS0RPmve3D9sNfAAAA//8D
        APG3rSNxBAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94bddcb3d2c40-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:01 GMT
      Function-Execution-Id:
      - ldou08e0m716
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '14325'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - a08e3c30268035df5fbe852c71190d43;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86020'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.652s
      X-Request-Id:
      - 0e28cb76406a8cde5951964012c2b184
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out who won the
      2010 Nobel Prize in Physics and write their names, affiliated university, and
      discovery to a file. I can start by searching for the information online.\",\n        \"reasoning\":
      \"I need to gather information before I can write it to a file. The internet
      is a good place to start.\",\n        \"plan\": \"- Use the browse_website command
      to search for information on the 2010 Nobel Prize in Physics\\n- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that the information I find is accurate and that I am not missing
      any important details.\",\n        \"speak\": \"I will search for information
      on the 2010 Nobel Prize in Physics and write it to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: announcing
      the 2010 Nobel Prize in Physics winners, Andre Geim and Konstantin Novoselov,
      for their experiments on graphene, a two-dimensional material.\n\nLinks: [''\\nSkip
      to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have found the information I need. Now I need to write
      it to a file.\",\n        \"reasoning\": \"I can use the write_to_file command
      to write the information to a file.\",\n        \"plan\": \"- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that I am writing the information accurately and that I am not
      missing any important details.\",\n        \"speak\": \"I will write the information
      I found to a file.\"\n    },\n    \"command\": {\n        \"name\": \"write_to_file\",\n        \"args\":
      {\n            \"filename\": \"2010_nobel_prize_winners.txt\",\n            \"text\":
      \"Andre Geim and Konstantin Novoselov, University of Manchester, for their experiments
      on graphene, a two-dimensional material.\"\n        }\n    }\n}"}, {"role":
      "system", "content": "Command write_to_file returned: File written to successfully."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6594'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6ySQWvbQBCF7/0Vw5xlYyd2EnTvIVAIhDZQ6mJW0kjaendG7I7sOMb/vaxkY+P0
        2JuY2Xnvm6c5oK0wx7I1WvrOTR6/fSy/NpX9/uLf+vc3z/pDX+aLeruT4idmKMUfKvU0MS3Fd47U
        CmOGZSCjVGE+f3haLh4Xs8VThl4qcphj0+nkfrqcaB8KmczuZ3PMsI+mIcwP2AXxna5VNsQR8/ni
        aZbhRfzSeLzLUEWNu5QelnfHDMtWbEkR818H9BTPwkEcYY4mRhvVsCZMYSVOKxxWDACwQm2lb1qN
        K8zhVDw16F1TcYXP0JotwYmJKtCWQE3cTOEZYiu9qyDQ1tIO/B5MmbAjqABx7AOBtkbhJNJRqCX4
        JCKDTkFRQephsrDOqqU4XWF2jRLIRGHLzcjzOnhZbq7tdtY5aMl14AlsRay23oPhPZg0DruWAsEz
        lIbB+i7IlsBwBd5sEoQqBaiotHFQszzA1b32gW5xOmd4JJnA66e9k+jFf/CuJZw9PbHeyJXBqi1t
        9Oe0mcZ4BrTrBI2HgtLerXCKbWe1Bb+P5OrB9vKMRUG2FJzIJg2kHHw6gw1FkJC+I1UgXSdBe/5n
        6rEjszkzDfH+7588uh2z8y2W4r3h6tMpsvE0ggQy1bq2jm5YTWhuL3hspLeX8bvZfLZmKcitu2A/
        aL2zzBTiVNOtX2aPJ7IVH/GYYW3ZxnY9niHmGFU6zNByRe+Yz46/j1/+AgAA//8DAGcaVHlMBAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94c611cc4634a-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:20 GMT
      Function-Execution-Id:
      - ldoufyhkjt80
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '12652'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - bc00246bd99aa29c71ea7cac23f2dcc2;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86017'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.654s
      X-Request-Id:
      - c29de628b3f6c8f00e965c283a79737b
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"Andre Geim
      and Konstantin Novoselov, University of Manchester, for their experiments on
      graphene, a two-dimensional material.\"\"\"\n\n\nCONCISE SUMMARY: The text is
      best summarized as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '366'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SOy24TQRBF93xFqdY91jh+hPSOFUhAVjgbhKJKd9nTYbpqqC4/guV/R0aQbO89
        9+iesWSMmAbyVKexu/3ye/Ww+HSzv1/S6dd8t1na5iF9K/bs6xcMqE/PnPzfYpa0TiN7UcGAyZic
        M8b5+v1qebvs16uAVTOPGHE3ebeYrTrf25N2/aKfY8B9ox1jPONkWid/dP3J0jCu5wHf1K/xzV1A
        V6fxNbnrLwHToCVxw/j9jJXbf6fpyBiRWivNSfz6UMVZru8/SDaGj1wqkGT4rPKXKQL3etDGox5g
        a1rBB4aNlANbK/4CuoWvJGng5mxwZGOgI1nmDFu1K10M+DSxlcriDVRgZzQNLByAwI/a5WvVigqN
        UMnZCo0zvATcFilteDSmpoIRm+uEAYtkPmHsLz8u7/4AAAD//wMATpfBVq8BAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94ccedc2a29f1-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:28 GMT
      Function-Execution-Id:
      - edh33d4cdqfo
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '2440'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - ca98a4f1886ba45b13f25ca474539fbb;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89437'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 374ms
      X-Request-Id:
      - d366453eb1b0c0c62bd7b8ba250ea83b
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["Andre Geim and Konstantin Novoselov, University of Manchester,
      for their experiments on graphene, a two-dimensional material."], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '204'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        P//x/wAAAP//AwDdgpZ+4yAAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94ceaf8561157-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:30 GMT
      Function-Execution-Id:
      - edh3o640by07
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '248'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 0c141b2d116fb7cbef45bb5ce5cac91a
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - d44b3093f6e390eca95b6e2367631fb7
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "Andre Geim and Konstantin Novoselov from the University of Manchester
      were awarded for their experiments on graphene, a two-dimensional material.",
      "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '222'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        IAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94cf8db922317-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:33 GMT
      Function-Execution-Id:
      - edh3o2jg8ehu
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '456'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - c52218405b4b3c2daea566af09cb5ffb
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 87d6bc01c3b5ee04ca0260a6751b0731
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out who won the
      2010 Nobel Prize in Physics and write their names, affiliated university, and
      discovery to a file. I can start by searching for the information online.\",\n        \"reasoning\":
      \"I need to gather information before I can write it to a file. The internet
      is a good place to start.\",\n        \"plan\": \"- Use the browse_website command
      to search for information on the 2010 Nobel Prize in Physics\\n- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that the information I find is accurate and that I am not missing
      any important details.\",\n        \"speak\": \"I will search for information
      on the 2010 Nobel Prize in Physics and write it to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: announcing
      the 2010 Nobel Prize in Physics winners, Andre Geim and Konstantin Novoselov,
      for their experiments on graphene, a two-dimensional material.\n\nLinks: [''\\nSkip
      to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have found the information I need. Now I need to write
      it to a file.\",\n        \"reasoning\": \"I can use the write_to_file command
      to write the information to a file.\",\n        \"plan\": \"- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that I am writing the information accurately and that I am not
      missing any important details.\",\n        \"speak\": \"I will write the information
      I found to a file.\"\n    },\n    \"command\": {\n        \"name\": \"write_to_file\",\n        \"args\":
      {\n            \"filename\": \"2010_nobel_prize_winners.txt\",\n            \"text\":
      \"Andre Geim and Konstantin Novoselov, University of Manchester, for their experiments
      on graphene, a two-dimensional material.\"\n        }\n    }\n}"}, {"role":
      "system", "content": "Command write_to_file returned: File written to successfully."},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have completed the task. I should review my actions
      to ensure that I have performed to the best of my abilities.\",\n        \"reasoning\":
      \"Reviewing my actions will help me identify any areas where I can improve and
      make better decisions in the future.\",\n        \"plan\": \"- Review my actions
      and identify areas for improvement\",\n        \"criticism\": \"I need to make
      sure that I am being honest with myself and that I am not overlooking any mistakes
      or missed opportunities.\",\n        \"speak\": \"I will review my actions to
      ensure that I have performed to the best of my abilities.\"\n    },\n    \"command\":
      {\n        \"name\": \"read_file\",\n        \"args\": {\n            \"filename\":
      \"2010_nobel_prize_winners.txt\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command read_file returned: Andre Geim and Konstantin Novoselov,
      University of Manchester, for their experiments on graphene, a two-dimensional
      material."}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}], "temperature": 0, "max_tokens":
      0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7744'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA4RSTY/TQAy98yssn9OqpdvtkhvqAS1CcEFcKFq5EyeZ7cw4O+P0gyr/HWWTqmw5
        cLX9nt979hltgTmamtT4xk1WX34vrb5ff/r4Ybt+savv5fG59J/Xvvn2Y4YZyvaZjY6IqRHfOFYr
        ATM0kUm5wHx+/7C8W93NVg8ZeinYYY5Vo5PFdDnRNm5lMlvM5phhm6hizM/YRPGNPqnsOCTM56v5
        MsMr+bWxuM9QRcldSw/LeZehqcUaTpj/PKPndCGO4hhzpJRsUgray5SgHHoL500AANig1tJWtaYN
        5jAWxwYftS9u8BFq2jNE3ls+cAH+BGR6bQkoFPAI5CGR2lRaLuBgtQatGaRVI56nMOJHT1y8dpXS
        DlJrDKdUts6dphvM/t4fmZIEG6pRhIJNYH0jsTcDKhC5dGwUJNxKsgUHteUJqGeBUmKPjLJnz0Ez
        2LYK9pWQXJK3rGR2QQ6Oi4rhUHO4yG84lhJ975Cdu1XbOAqD0Al8FSjbqDXHUVS/KPJLayMXt0AT
        rVpjk79kHbhPSMDTjiG1kUFr0iHlIApbNuJtqIY8yXDQV8/XKXIHOiVIGu2+H1S5uL9dnhqm3Zsj
        //9IA77LLg9kxHsKxT//E8jzQH2zlGI1fFs3Um1Ch12GpQ021U/D3THHpNJghjYUfMR81v3q3v0B
        AAD//wMArIUGhLIDAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94d1d1966e12b-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:48 GMT
      Function-Execution-Id:
      - edh383euagce
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '9927'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - ff02bfdc093693b48ddfc096cecd6fa1;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86004'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.664s
      X-Request-Id:
      - 02773f1693aaa77bbe36491f9fd3dbcd
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"Andre Geim
      and Konstantin Novoselov, University of Manchester, for their experiments on
      graphene, a two-dimensional material.\"\"\"\n\n\nCONCISE SUMMARY: The text is
      best summarized as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '366'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SOwU7jQBBE73xFq8/jyAYCZG4cYMUuiwSIE1qhwdOxZ9fTbXoaJxDl31EQG65V
        r55qgymix7YP1uZxqE6v3+fTz/Oz27tOLl66F22uFzdTvFzP76+u0KE8/6XWvhazVvI4kCVhdNgq
        BaOIvjk5mx+fHteLxmGWSAN67Earjmbzyl71War6qG7Q4WsJHaHf4KiSR3sy+Udc0J80Dr/V+/hw
        4dDEwrBPFvXWYdtLaqmgf9xgpvLfqTIQegylpGKBbfdQ2Ih37885KsEPShkCR/gl/MkkhhuZpNAg
        EyxVMlhP8MBpIi3J3kCW8Dtw21MxUliREoRV0EgRlqI7OinQeiRNmdgKCEOnYeyJyUEAW0kVd1VJ
        wmGAHIw0hWGGW4fLxKn0T0qhCKPHYjKiw8SR1ujr7Z/twQcAAAD//wMAq+oeaK8BAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94d70cb1c10f4-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:54 GMT
      Function-Execution-Id:
      - edh3785v0vca
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '2475'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - c68cb813d1057241cbe711f8a2f7d43b;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89438'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 374ms
      X-Request-Id:
      - 96665b4ddd6e8f66b27afe3454c25d44
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["Andre Geim and Konstantin Novoselov, University of Manchester,
      for their experiments on graphene, a two-dimensional material."], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '204'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        P//x/wAAAP//AwDdgpZ+4yAAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94d875e7f61e0-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:55 GMT
      Function-Execution-Id:
      - edh3up6zgtvv
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '352'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - c700adf31be0c87a6f65daad3b3fb382
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 218f7b4182122a4abc46b4478e630a3d
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "Andre Geim and Konstantin Novoselov from the University of Manchester
      were awarded for their experiments on graphene, a two-dimensional material.",
      "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '222'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SaWQ+6zLrl7/enePPe0jsMKlXsOxkEBKxCcYBOpwOiAoLIUAVVJ+e7n+B/9+nu
        GxORRKhhrfV7nvqPf/z1199tVj3u49//+uvvuhzGv//Hci1Px/Tvf/31P//x119//fUfv8//785H
        kz3yvPy8frf/fiw/+WP++19/Sf995f/e9K+//rZ0IyGs05VoAr6bApHlX3q4zVU2Kubowudqmmgu
        O0U/n/mYwlUc7umZ3Uc+58o3BIZjdfRwbXeck806gI13VMmrqA98FutLC5tTM9FgUlE0hMIzhZbP
        OZLm5+iPCnm81O6oZdQc87rqQt16aZcLCuj2bl05Aznx4HNzuiJOp2PPcz4g+HYAQqU97XqJ6Zs1
        FPnap0i195y5oT9By7wqSADys+LmLrfVJhvuWH/nDRg66+VpdniWqe/2TcSK6FvCxucvAvpJNSk5
        pSFsHtsNfuak8qekZjZ8yveIJtu2zWZROr6BLslHvN+GBDTdenwApKYBmd/yNpuVO/aAR7sMrWIx
        7plzvzMQMuVCsdgl0azYwxVeTH2FvdoSTOaosgvch5KQlTbhjIuzG0KvEDZo/rxq0Bb6cFIvWGzo
        Xp9r/hVLL4CW5+2oNT9Hc+hYPECOdwZhu1CsBnbOSxC0+/b3vpyKs3uC7vX+wmmjC5wr/SGApR1e
        yGOtw54B1t4hqGyBWrNdVhPLP2dgud2TIvXU9LS+3BncDF6GMUyHntd20ECRqz5FN3yuJvCVDdjm
        4RHrprvpqbhXGsidO8T7t9zyMgmPqZaPO0QDHjdmRUZwh0iWrnR3HMaqzwu3gQiSLzbsqa4Gvm63
        MCgEi5DLJTK5GKsvSOajQfPj082kTh5cYMcDoY4wTiZz7+4L2vfXjA9h+amYY2ED5BWm2GuEZz8V
        oJZU6yC41B9eYzYrF6mE7mPfYb34yBlvLu4LigrM6H7bupGSXN8GlLfdGmMNVNU3552lsvWRI8i1
        MRrPyvCGyblZIU05TubEDOQCEXwu1N+3jqkkLU8hd4WSwMPpYrKQvBSYJN6IDyc56hl/uct+YhPG
        UOSgz8UXhDnp1wgMjgH61f6YQm9MDOxo71OvuKE5wfb+emCjq4OK10U9Qa2vbKQ2gtiTeP1UVK/d
        JVivRl4VBIcQ3q4GwnYcf/lQfB8PtRDoCQc8+EbMOVhvGFmpR3ch+FYDYOob3q6TTg0bltkEGGtE
        eT+96S078moWT6oBu6Qu8P6z/nAeGOkbDr2yI7MuQp8U1CObgh/39LD6ZBknn1ZaWcgMiDQ7UT8T
        O0qB/LQPZJUdo57n3SnW3KPaYZyXdia5ZbKFmqIGCOzvXsa+t8MagGajY3MvB9lUXFUFRsFk0ifU
        DVMW4ynV5PR1w0nxyTkX+/0alod1hiN/enBKgkiFb/MWk08O2oznj30M0VptqE+E2mwT4W7BYHwe
        kXC1Vz6JS3kLsjreYH/Y3MA356UN7SjbIVG4iD69jG4HIueREvk4HCp+hqMFExrssd5MJ87rOIPQ
        OkQJGuWh5QM7ehYYiJiQjaGa2co8Hw3tOdMz0lbMMZUv/ajQzVYHjHNSmVN4HRHMyxxi9+kIEfue
        EQEie37R+uHl1dAJxaDdHk8f7/V5B1iobiTgFZ5BNjXbL+t7lNSkmrY0G4/HiLhl5GqrSH/TIHCb
        fkoOsQ2bHBloY4BzVisxH+A0lSnWzfXQz+Q0pMB7CzuKNkAwJ+bfIDQsIyVkrQ3/1quBuCURNXju
        ZyVxIGxjklH3HkKfsG8iQEufAiSsBS37rmb9rmlCeaLuC/vmKCZWp7rng0MPEpQ5cVTNg0nXRjSP
        9DCa8/dRBXlnCNSa1B2QzVSbQC7HFg6C4mhyk21i2FjggCrX+VTEDdZX2JWdR+3rM/GlQo4QjLa9
        j+SzV1eTG20l+ITXhm5f0p5Lhf4OIfi0ErWBafhKHL0V0LVTR+0sa8HgzNpd1eZ3hX2SEtCTt6ZC
        fnjFVDcgBENRmRKQH+cU+/2U+jPBMYSbFzlh+5yoYK7N50slvH7i/LhmnBTW8Qreh2BF7XNw8Mcm
        cBUoCk1BTl1QmmTRA8ANyaC70xdFU3FzbDABWFGvm2fORfwa4CacrxTDT5rNSuurEAwwp753QBEB
        TT+ARX+JfL2/qrHOxhBY1uZFvSaJM56jGYG8fEKiyUMLlv3aQNDYHnYe6705dKB7wVV8WdafFwD2
        lZsQrq5TRffvI6sYyBMViOtiR33XCX2eF3cFXDDmaGNcR58HLwZBDsMbdu+WGI2kU13Y1STF2zw5
        +r15TCQobk5rapLGNDmJ4059stREWughf0qSwgI22mUUXfbXTD6LnQe6KtcRpIIQMcdyDNjVQ0p9
        gpg/5tg/A1HMYtJW9pgNMTivgeUcNGoxvDWnbt2fYWncTzjAMY94kLZnCIaI0G1J+oyBobNhuStL
        vH2ZNZgKOQtAyPsA726Hd8UJcQgMWvuNg+nyMZn6FV3gXuaZenWY8vmihFeQVQrGO7k496xrdElD
        2uNORM2fer7aJ/Gf5z1Zp5FPxQ3boJh5ReApLSoWCocT5AawsV4jj8+i1qdg9chHfLhKRjX99C8b
        kEs+j/Xen8+bnqm386vFNpBsk5t+9gDR3rSoT1LEh44mL2AF95LaqaJXXMRQgJocN3hfvh8VrW3r
        rVqeAKnvq6U5Jcy3IJkKTPVt2GQMvI42DL6Nh3F+/fZDoYeG1h43AfrpZ3+Gow2zbwCp55ytSAqv
        sQDa/HKh/riTerrMJ8yrA6X2Rn1Xs2h/DYjEaUNmHa1N+vN3I4gj6jkF80knn4zfdxw+rkc+dcdD
        Cuz89CbMrhPOwvBMoKhue+p9vPviHy8FhGr1JKzb1hEN3BDCcE44NXbtxh/NKThDC00iNSkkGekq
        owMchT59ilZhUvLoQ+25LiuMAP5knFyOd2jt+giJolX4i9+X0NJZQDZGuQfEWckC6N7wg8295f7W
        iwUtM1OJkImfigF9TTaTdM3p7iT3/sSOjyvYvIYTUdLO4rx5nK6wkFYcB+iDI+ZEzwAsekgdoeDR
        p1Felga6bvvnefl5OlvwiJlFjV3WRyxMTiHsyMajziPSOV3FxRsiZkSILXlo6lIPglV82lPnMQwZ
        P3eXQU3KU0rxI/IyTvZnAi0Ha0iMhclkoQQe0HvDHV72rzkHx1cL889cL/nk47NunaCf/mIny6ds
        VtRPCX96qxueA3qrecUw6PGa7rf3vuLN9CUwK94K0eTNtZfPn3sKSn14UmMnFv2iVwS61+KNd+er
        kc31CDvoDV+MdxGSq8kpx1ANxvy46MNs1vU+VyEPWI33r53MRyUGBOTDLUP00Vd8cKU2hoCGKt5F
        Rsy5WEw2bK4xp1gYnJ7F4LaFkeHNpKtDlQ+hcItBXucuPRwHxVz01FKbo+P90afezEsFJN/1C3vt
        ae9PwL3cYYk6hNTWHiLCQHHWVtEQIfXjwaivx7IE9lntcYDfockcDV4VbrYbvG/Ax2cA7QdoOFKO
        3Yc6VX0dGBCuws6kjhbLYM43kIAlP6KP9mYVc6XyBcl3FJf8w6s5eE0KdG9BRE2fHoDkroD0y7sU
        a9TmLP46HdS4tafp92NmU/G9PqDXWzXNlvmkwWS64Mlik3pfvvUZOwZILbfCQNb3e8yn0No3MFQf
        GQ2mfZfNeebawI2ZRvW6eWdjzjsbvs3wTITriYO5/ggnuOQt0r0j1efi6uPBRW8pFoqMTwBaMWyO
        Ow/f8TSAfHUqLNUwSgkbX6ntvyv8XYMnPDfY+PEjQ4aqLXn7j75OSdQRkA3HgGiRcPTnn7/bRn8i
        gvows1G5Ox4sNsmXaCvd9Ff1Z/B+ekJ3UnwzCfCN8seL5PO0dmBUyPX182eM1GjVd+5+44HfevLs
        95zRXGwhvFhFjrdFUEUz2afNj+eoo71ZP/34AXzxAxuNcDPnXJFf8JJsMTbst8tHghe9u4wYTdUT
        Zzy/mAooVICxfbmCfmJN3IGnpgTUsAOcTYVMH/Cpbvd4Xx+MSHFmsYFZN5TY34djz+tT3oBQ9hg2
        vqZVTZ0FY2jfy5laUzlEXNyXZ+jRNsMH2WU9z11Vgj//+fkv46+tq63OlYexuGM+z49TqiXhJJFN
        Nd5NFlo+gcH7VlN0VTpzSJwjgfZRyVDv1Q5gqv9g0L1/ttTNk6Saupd+hUG//qAHsEBPVP/KwG+9
        /PLHECfyFb7RkOOnsJEjLhZrC+Z93dJt1Q8+U93nG1ge3mNz7Hg25ievBG4aVmRTiLdorM1nCX7r
        A2cWyabiZbWgPXUideKGmHO+aR/wlkhH6sTpMWKAFv/m7ePnvPd5c9KvYHhHJhHWbx1wovkdQHP4
        Qhvz2VVzMOoScJ9NgFi7csDU0aRURXVH6e6WFNmQALcDht+96LbY2tUfPlvyBfW699sfwohsVff5
        DbHFDzMnXQhCmBSvDz0oyvL8HyGEIvdibI7HFoxiu23UNy7OWNfR2p8cx7I2oiqXdF9OIOvC7foE
        n8LXpMYufPZ90AUMiCp7UDt9tOYv7wJxsly830o7XwLrtQAvNlNwMKkkomL/cNWEPK6//OHPIokQ
        bM7SHiev3QVMxdcIVNl6AKJ28xEQd1UMEAFsYhOXL3PheQTEyXYpWgt5RnO0QbBNihNG6a4xqVLw
        VCXSZfErpaj+8KebsT2igrPN5CBld5h9ISWfbHcFU8hQCol0QtT0vaZaxr+FoD7fqANF/988FgqX
        kmSeVmTcfJVbmCTim6K1fq/YwlPwFl97bHxxkU1h8o4hGIScbN6yy+fLcX4DbZIm+qsPMHaYJthe
        Oh/rW+VRcdLBE7xd5R3dm/bWlIoUncBQbxW6jL/5y2M/fyDKxXuAudnvWxhQE6BZN7KIEzW4w9sp
        8GnaE1b1eeYhyHfqicjyq+pZcedXuHmintBH5EVMTQmEtp1fiHxcdxkBVRxCQCoHeV0tm4OrsQBk
        fZXgXcQhZ53QS3BS7xpSv58qm81x50KRH+7Up1DhHTusJ8itfKKHy0rnPMj5BN1Tm1NrutKeFYnk
        geFzieguEtqeLfoFC3V/x4cV+5hTElYlHArYYPfZSz3Ps8dD5Xu9+fGEyc1zYgBNHTA17O2pJzE7
        BD+/JiJkjU9/ehKqxRMj1VEBKdrJgpY7VrgB96Efulf+hqWjiPggjxuwvB+CoAE6Yp3W+CwGzy2Y
        1IdG3lyQ+eDO3wB2vePQJV/2DAzKGQ719KXG15J7HkymB5vn60n3xUfjo9I/z4Cszg+6N7wwmhjT
        1B9fYH9wIzCBr2ZA96gRauwwqmYxAO2PL7FzP1TVlFhpCUBjeRhr0423iWyc4MUpvziYvCz6k59W
        YWviXB5c/jW/8wBsL4rRr343nke6VYk43PCxGqN+Aus13GyeQY8+wrmuuJl3Clx4j1roDkzW3aet
        ZtvPC9Fkl1UDy+lVNYJ0mZ+GmjPZ5ltARJ7R3Sq7mmzhT/U3vtti9nr2ra5rEGEpoqdu/v74ZQtB
        126X/QD7XuyvHmwcMaf+sFlxHnzXJRRX5pNaKBQibm6sLcw1w8NWMO6ytniuU7g6HWfs3PWG09xn
        W7AZW53GlbLNZPKQY7C5XAL8y3+/PApDWfuS+rjJMsYEyMDqWAgY/epn5sYy/vCydVQMsNTHtuDi
        fTXsvjIHSIkXr4H3bUT8478haecTcMPMQvLJ+viLX5xh0igh9v3SrXhw7BjwymGgxs48ci6WwRlM
        8v6MKp8euBSu1i+w1F+p57x0UzYbtVST7OkRIT2WgFu3GEEk6jYOgouUTYUnWCB4X2p6WKVjPzB0
        80DOvZ7ujq+Qz6tTYQPDUXJ8UDq1n+vLqQW3iMloKuKXOcSJdlWRgDD1h8Fb1thWgZvEx9QnrM3G
        8+MqQfexyelOutn+FFIngJvBzYgsD9usr7nswUVf6eH4dCMe7BIG2sxYk/WDcM5XQfz++Rld8qvP
        z11OALfHPbYv5Trjq0sXg9Xz8CLC9TH1/Ddfv/nzvcT3VbURIVyl3w4H0a3MWKxf7iAKZAdJR6Xk
        s+k2KbSftU5WSYU4v+TTXbMO6EIgEl0wuaQz4KZ47BAnqZ2xcDudAFFTgnWdoWgmp9iFhSTzpR6R
        gsndbu7w509O8n5y2iitDRvkLHyg44i5wXSG8u3u0NTatT3pIvUBQ2ju8L5OQ3MK7/37V29A4jPs
        zdFUPAJC7UOJuNTfuFnJdyjKDxnruuD7U9dEAlx4i+qfwehHZc6HP7wuJiAE/UpzrzAUt0d8jmDh
        T4WnWDC5wwkf5DONGLsZb+DmZ473VSFGxJGUCYZs31B/PM7Z4g8MPpWjhy3Wev3v+4/PkbLWJf9r
        KlcBNGfrSo9v+bXUkxIVikJfEyEzbD4S1btCUS42WG/8vhoK7yvBhZ+QAD5bQMKDftLyj8no3lDN
        aPWnftCNFtJOYZCNYuu+gaZtB7rkf3Mq6LbRSJcz7BPdikj81BTYFesbUTaq1S/rZ4LL+6BV4l+y
        Pmg2558/InWHb+a3lnAIQvmgYM867jIF+Et+euw7xKxnVv3yM1j0EXG/ms35/L4E0NrHJ3raYVLR
        H58t/Rf844OhoO77x9dElt4RmJhor6H2sjWKtXf2qzeuYXRoVJKUE4gGN9x36sWpR2y0fe/LAfo+
        YPJVX3hfC3a0aoyNC+UdLIiy3prmvIwvDOeMU6ONjpVMVqYHL4H1pPdFj8dATBDQ4fNGpEOU9yxp
        QQplm8cUa7dDNjeKGsBNlrbUXm8rfwqlzRnklVhSe7N/9fM5u7V/6rPBVJic55kX/PI4+Zr2y1x4
        z4DTfDniw8o4+ywekLK5ZSmgblk0fq8UIP3lSWwOL4v/8dOfnv76A7Pppkve91LCx93gk7DuT9CN
        0vBPHv/tJ60JqogaTqn2VKzNEnoFtomy1M/n+i3aMHvtQux7BxLRfKMoQA4Uie4br/IZo8MbLvxF
        7Q24VLOiZuFmdfukdK+zK1CckqaQowvGzj3ZRj9+h0NtKDjgyc2fg7cVgrzSSqLJZxxN4HxCWvsw
        LIqA6VUDg5jAQjsMWG8g7Wdzl0K45F0kxDc9kpiBPBhODSRtdfJM3vDXWtPktKEovhUZFVtj0CxH
        nLDe3NqMr04Vgpe7csL2NYJRkW+kAYRrQSa//TDnSnHSooCZFKnRrV/lUNjCgGALB8hofS4mNoNZ
        s37Sw0qUOA8q5gLrAF1sDmfXn5J+esC3pQiIuwMBY82BAbrmcaC+GwVADvwy1JD6DPEuSk/RFF7r
        APLd+oTjhdcHZthLXn/qCPhkl01h+YUwMtQ3NVq74rNpRAyKK/2Jbtn3YDLwGq/wT3/vs5kiTia1
        A21SnaiupxLgeYBCkHRdhLel2pqcFAqBurQ6Us++VdUfnrcz3SdgzJH5x+/cB8iREEO3mlfbZFAX
        3qdO+qJ9T3BmgVyBhMbFe5d14X0cwNs+v6np36RsKBxlDRa9oRYPtlz53nZrNaO3O2Ltk2RjvbLv
        MKmMAxoW/+Pnwl+reXMUkbLWKsBiirbATS8fpC79wbHWLAmI64eONnUT8Kmw+jsYPiGm13Uy9jPZ
        uhMQlaD9M78zmaYSzvvOxgH7lCbpInaHQSvdaH7pa3Os9/kaiNpexAdp2pjTTw8XvSWbWmiyqXDK
        FvL9cEEVEQ89zbtmydekw57t25ybm2D7f+oz/M5nZd+X0LCvK4oTKplcVFMbTkxZUZ/wTca+r9sA
        c23r4dPXfPef/KGnWk6Tngg3LPUsvCd3oM8moghkb5+T7mVoFv4oGKmPKuLEvF4hkbc6PvO59SdX
        UwN4cW8vvOw/cwrrwvuj7xgKJWBAmB8b2Q0FpC39BRKHYwfBh67RtzCUnrhb3mgLr2FH2Axgzj+J
        pWnDaYNN37/17KuvzrCJrhV1cs+KZmVbQyhqvojI0i+aG9t4aMklI0t/d92P56lBquGtRxocFD8i
        hTW+Id/2I3ofTkG1qm2r0bqL3mP7cumqnx7BoEBHtFn0mJpUDWBktjdqHVacc/HqvKF7i24YqfYX
        0BqqBJCpwuj4Pnq+stR7YA5eb/zrT1CzkVp42dKUep2G+oWfz796E0WgPXKpYyGB3Vv4UEfMTXNY
        eAwUmvYksjwes1+/H/79OxXwn//466//9Tth0LT5o14OBoyPefznfx8V+Geap/+UJOWfVPlzEoEM
        6evx97/+fQjh72/fNt/xf4/t+/EZ/v7XX4r257jB32M7pvX/e/0fy7/95z/+CwAA//8DADq1Q4Dj
        IAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf94d913c398140-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 19:14:57 GMT
      Function-Execution-Id:
      - edh3a5lsm8nk
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '247'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - f9b19c031cfa978744eb509a32eeee58
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 30d5d360293b74e0a8b00b9c38daf18a
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text; include any information that can be
      used to answer the question \"2010 Nobel Prize in Physics winner\". Do not directly
      answer the question itself:\n\n\nLITERAL TEXT: \"\"\"Skip to content This website
      uses cookies to improve the user experience. By using this website you consent
      to all cookies in accordance with our cookie policy.I understand Close the search
      form A button that allows you to close the search form if needed Close the search
      form A button that allows you to close the search form if needed Close Mobile
      Menu The Nobel Prize The Nobel Prize Logo Toggle Mobile Menu Nobel Prizes &
      Laureates All Nobel Prizes Physics Prize Chemistry Prize Medicine Prize Literature
      Prize Peace Prize Prize in Economic Sciences Quick facts Nomination Physics
      Prize Chemistry Prize Medicine Prize Literature Prize Peace Prize Prize in Economic
      Sciences Nomination Archive Alfred Nobel Alfred Nobel\u2019s life Alfred Nobel\u2019s
      will News & insights Press In-depth Events Public events Nobel Prize Concert
      Nobel Week Dialogue Nobel Prize Dialogue Nobel Prize Summit Nobel Prize Inspiration
      Initiative Nobel Prize award ceremonies Educational Close the search form A
      button that allows you to close the search form if needed Close the search form
      A button that allows you to close the search form if needed Header Search Submit
      a search term Allows users to submit a search term Physics The Nobel Prize in
      Physics 2010 Explore Summary Physics Prizes Chemistry Prizes Medicine Prizes
      Literature Prizes Peace Prizes Prizes in Economic Sciences Summary Prize announcement
      Press release Advanced information Popular information Illustrated information
      Speed read Award ceremony video Award ceremony speech Banquet video Laureates
      Andre Geim Konstantin Novoselov Enhanced Page Navigation The Nobel Prize in
      Physics 2010 The Nobel Prize in Physics 2010 - Prize announcement The 2010 Nobel
      Prize in Physics - Press release The Nobel Prize in Physics 2010 Andre Geim
      Konstantin Novoselov Share this Share on Facebook: The Nobel Prize in Physics
      2010 Share this content on Facebook Facebook Tweet: The Nobel Prize in Physics
      2010 Share this content on Twitter Twitter Share on LinkedIn: The Nobel Prize
      in Physics 2010 Share this content on LinkedIn LinkedIn Share via Email: The
      Nobel Prize in Physics 2010 Share this content via Email Email this page The
      Nobel Prize in Physics 2010 \u00a9 The Nobel Foundation. Photo: U. Montan Andre
      Geim Prize share: 1/2 \u00a9 The Nobel Foundation. Photo: U. Montan Konstantin
      Novoselov Prize share: 1/2 The Nobel Prize in Physics 2010 was awarded jointly
      to Andre Geim and Konstantin Novoselov \"for groundbreaking experiments regarding
      the two-dimensional material graphene\" To cite this section MLA style: The
      Nobel Prize in Physics 2010. NobelPrize.org. Nobel Prize Outreach AB 2023. Wed.
      31 May 2023. <https://www.nobelprize.org/prizes/physics/2010/summary/> Back
      to top Back To Top Takes users back to the top of the page Nobel Prizes and
      laureates Nobel Prizes 2022 Fourteen laureates were awarded a Nobel Prize in
      2022, for achievements that have conferred the greatest benefit to humankind.
      Their work and discoveries range from paleogenomics and click chemistry to documenting
      war crimes.See them all presented here. Explore prizes and laureates Look for
      popular awards and laureates in different fields, and discover the history of
      the Nobel Prize. Select the category or categories you would like to filter
      by Physics Chemistry Medicine Literature Peace Economic Sciences Select the
      category or categories you would like to filter by Physics Chemistry Medicine
      Literature Peace Economic Sciences Decrease the year by one - Choose a year
      you would like to search in Increase the year by one + Explore About the Nobel
      Prize organisation The Nobel Foundation Tasked with a mission to manage Alfred
      Nobel''s fortune and has\u00a0ultimate responsibility for fulfilling the intentions
      of Nobel''s will. The prize-awarding institutions For more than a century, these
      academic institutions have worked independently to select Nobel Prize laureates.
      Nobel Prize outreach activities Several outreach organisations and activities
      have been developed to inspire generations and disseminate knowledge about the
      Nobel Prize. Press Contact FAQ Privacy policy Technical support Terms of use
      For developers Media player Join us Facebook Twitter Icon Follow The Nobel Prize
      on Twitter Twitter Instagram Icon Follow The Nobel Prize on Instagram Instagram
      Youtube Icon Follow The Nobel Prize on Youtube Youtube LinkedIn IconConnect
      with The Nobel Prize on LinkedIn LinkedIn The Nobel Prize Copyright \u00a9 Nobel
      Prize Outreach AB 2023\"\"\"\n\n\nCONCISE SUMMARY: The text is best summarized
      as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4870'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SO3WrbQBCF7/sUw1yvjBTXra27QFMXSkMIhBZKCevdiTTOakbdHUdOjd+9KKTN
        7fn7zgk5Youh9xaGMVUfv33K1u3jbffluP0+/jh2d/lz/H11odurS3Souz0Fe20sgg5jImMVdBgy
        eaOIbfNhvVot6/W6cThopIQtdqNVy8WqskPeaVUv6wYdHorvCNsTjlmH0e5NH0kKtpumdvi2/V9f
        bhyamk9vyfebs8PQKwcq2P484UDl32rWRNiiL4WLebH5o4qRzP+9iB4ksHRgPcFF3dRwrTtKcJP5
        DwEL3PTPhUNxMPUceph8AT/5HCnCXlksPYMpXErMBFviAbxE+KryAmOBa33SQkmf4EHzTOEMXdaD
        xF0m/zij6ThS5oHECkxsPXTZjz0JOfBgk1ZxNgur+ASDN8rs0wLPDh9YuPT3mXxRwRaL6YgOWSId
        sa3Pv87v/gIAAP//AwDngEKG3AEAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cfeb7e97df91137-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 11:01:24 GMT
      Function-Execution-Id:
      - fw38dmrxh7k6
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '3252'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - fdb29448ac071835e38aa953b93a3207;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '88318'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 1.121s
      X-Request-Id:
      - 1c92148422fd8a18fa815bf2de7a7a7f
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["Skip to content This website uses cookies to improve the user
      experience. By using this website you consent to all cookies in accordance with
      our cookie policy.I understand Close the search form A button that allows you
      to close the search form if needed Close the search form A button that allows
      you to close the search form if needed Close Mobile Menu The Nobel Prize The
      Nobel Prize Logo Toggle Mobile Menu Nobel Prizes & Laureates All Nobel Prizes
      Physics Prize Chemistry Prize Medicine Prize Literature Prize Peace Prize Prize
      in Economic Sciences Quick facts Nomination Physics Prize Chemistry Prize Medicine
      Prize Literature Prize Peace Prize Prize in Economic Sciences Nomination Archive
      Alfred Nobel Alfred Nobel\u2019s life Alfred Nobel\u2019s will News & insights
      Press In-depth Events Public events Nobel Prize Concert Nobel Week Dialogue
      Nobel Prize Dialogue Nobel Prize Summit Nobel Prize Inspiration Initiative Nobel
      Prize award ceremonies Educational Close the search form A button that allows
      you to close the search form if needed Close the search form A button that allows
      you to close the search form if needed Header Search Submit a search term Allows
      users to submit a search term Physics The Nobel Prize in Physics 2010 Explore
      Summary Physics Prizes Chemistry Prizes Medicine Prizes Literature Prizes Peace
      Prizes Prizes in Economic Sciences Summary Prize announcement Press release
      Advanced information Popular information Illustrated information Speed read
      Award ceremony video Award ceremony speech Banquet video Laureates Andre Geim
      Konstantin Novoselov Enhanced Page Navigation The Nobel Prize in Physics 2010
      The Nobel Prize in Physics 2010 - Prize announcement The 2010 Nobel Prize in
      Physics - Press release The Nobel Prize in Physics 2010 Andre Geim Konstantin
      Novoselov Share this Share on Facebook: The Nobel Prize in Physics 2010 Share
      this content on Facebook Facebook Tweet: The Nobel Prize in Physics 2010 Share
      this content on Twitter Twitter Share on LinkedIn: The Nobel Prize in Physics
      2010 Share this content on LinkedIn LinkedIn Share via Email: The Nobel Prize
      in Physics 2010 Share this content via Email Email this page The Nobel Prize
      in Physics 2010 \u00a9 The Nobel Foundation. Photo: U. Montan Andre Geim Prize
      share: 1/2 \u00a9 The Nobel Foundation. Photo: U. Montan Konstantin Novoselov
      Prize share: 1/2 The Nobel Prize in Physics 2010 was awarded jointly to Andre
      Geim and Konstantin Novoselov \"for groundbreaking experiments regarding the
      two-dimensional material graphene\" To cite this section MLA style: The Nobel
      Prize in Physics 2010. NobelPrize.org. Nobel Prize Outreach AB 2023. Wed. 31
      May 2023. <https://www.nobelprize.org/prizes/physics/2010/summary/> Back to
      top Back To Top Takes users back to the top of the page Nobel Prizes and laureates
      Nobel Prizes 2022 Fourteen laureates were awarded a Nobel Prize in 2022, for
      achievements that have conferred the greatest benefit to humankind. Their work
      and discoveries range from paleogenomics and click chemistry to documenting
      war crimes.See them all presented here. Explore prizes and laureates Look for
      popular awards and laureates in different fields, and discover the history of
      the Nobel Prize. Select the category or categories you would like to filter
      by Physics Chemistry Medicine Literature Peace Economic Sciences Select the
      category or categories you would like to filter by Physics Chemistry Medicine
      Literature Peace Economic Sciences Decrease the year by one - Choose a year
      you would like to search in Increase the year by one + Explore About the Nobel
      Prize organisation The Nobel Foundation Tasked with a mission to manage Alfred
      Nobel''s fortune and has\u00a0ultimate responsibility for fulfilling the intentions
      of Nobel''s will. The prize-awarding institutions For more than a century, these
      academic institutions have worked independently to select Nobel Prize laureates.
      Nobel Prize outreach activities Several outreach organisations and activities
      have been developed to inspire generations and disseminate knowledge about the
      Nobel Prize. Press Contact FAQ Privacy policy Technical support Terms of use
      For developers Media player Join us Facebook Twitter Icon Follow The Nobel Prize
      on Twitter Twitter Instagram Icon Follow The Nobel Prize on Instagram Instagram
      Youtube Icon Follow The Nobel Prize on Youtube Youtube LinkedIn IconConnect
      with The Nobel Prize on LinkedIn LinkedIn The Nobel Prize Copyright \u00a9 Nobel
      Prize Outreach AB 2023"], "model": "text-embedding-ada-002", "encoding_format":
      "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4560'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        GeLX/zrxj+/1/vsf/w8AAP//AwBBCtOG5SAAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cfeb81daf711090-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 11:01:30 GMT
      Function-Execution-Id:
      - 74cg5kp0zb6u
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '61'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - af74db250fe13de7de593dcb23f9b56a
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 06806a3857265515c94d08ce870f5457
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "announcing the 2010 Nobel Prize in Physics, which was awarded
      jointly to Andre Geim and Konstantin Novoselov for their groundbreaking experiments
      with graphene, a two-dimensional material.", "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '265'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        36//4/tv//mP/wcAAP//AwCCZEm94yAAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cfeb82b7eb32bc4-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 11:01:32 GMT
      Function-Execution-Id:
      - 74cgcvhda44o
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '95'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 4300a207e4db64a8607d557c9293e2fe
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 65ead07718347e443294919ddd2d5825
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out who won the
      2010 Nobel Prize in Physics and write their names, affiliated university, and
      discovery to a file. I can start by searching for the information online.\",\n        \"reasoning\":
      \"I need to gather information before I can write it to a file. The internet
      is a good place to start.\",\n        \"plan\": \"- Use the browse_website command
      to search for information on the 2010 Nobel Prize in Physics\\n- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that the information I find is accurate and that I am not missing
      any important details.\",\n        \"speak\": \"I will search for information
      on the 2010 Nobel Prize in Physics and write it to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: announcing
      the 2010 Nobel Prize in Physics, which was awarded jointly to Andre Geim and
      Konstantin Novoselov for their groundbreaking experiments with graphene, a two-dimensional
      material.\n\nLinks: [''\\nSkip to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '5536'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7yUTW/jRgyG7/0VBC9tAdmwEzjJ6tZigUW2TZrDbnuoC2Ms0RYTDakOaTtu4P9e
        jGwnWW8XufU2Gn495DvUE3KNJVZN8Cp27eDy5r1drReX73/72cdh8vHmjw/3v85v//54d3nxOxao
        83uq/BAxrDR2LTmrYIFVouBUYzm+uJpMzkdX7y4KjFpTiyUuOx+cDycDX6W5DkbnozEWuLKwJCyf
        sEsaO5+5PpAYluOzyXmBL8mfDWeTdwW6emhffCfjs12BVaNckWH55xNGsmPipC1hicGMzYN4xlRx
        ktzC01QAAKboja6WjdsUSzhcHgz06PlyitfQhDXBQldSgzcELAtNMWQ8uAYhqodwq5vDGVxhk9gJ
        2PM5wIJbgpWxLPvw3jhznfX3lcYYpB5OsXhdPlEwFZblFwz/Xb0AU7iGKgisjL5dI9NYTvMa7LRw
        1wbZ1xzA57ey7fvsXViE0vcGEiL9YD8WEBYLbjk/C1gJrykZ+7aAHFmzVbqmtAVd9NFno/EIbnVO
        Ldwl/ic3CXfN1riyb5NWiZ0rtngc0XH6MTwQ2CplsuBfDY0N9h8ZrdKUqPJ224P1/tcQIog6RLZe
        tCBb4Nhpys8IavLArZ3SWEfh4Uiy4bZ9W4v/e3p73F1xfPsHlK+efobYd/IF+knDIS1Pt2ZvyL4v
        KTLcTDLcrMtws32vNvS8X8Vp8MvafXqjs00wCJuQaqrhXlmyhq7wk9SJ4ANx7If1i0q//Sxwq2s1
        anWd5c+D4wTLlLd6nig8ZKXpsaPEkcQNNuwNLFPoGhIqIIBvdFBno7FKaCEGp8ShHcKnhrawoUSv
        Zevjszyfn/XLgt0EqRoyp/SsSK/KQZyp7HBX4IKFrZnt/wJYorl2WCBLTY9YjnZ/7b77FwAA//8D
        ALAe+1W/BQAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cfeb846d876223d-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 11:01:55 GMT
      Function-Execution-Id:
      - 74cgmdgo3rrp
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '19254'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - a17e6472d0a609db5880de9b4c97b269;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86016'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.656s
      X-Request-Id:
      - 902917d7caa64f12db69e4c896fad2db
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out who won the
      2010 Nobel Prize in Physics and write their names, affiliated university, and
      discovery to a file. I can start by searching for the information online.\",\n        \"reasoning\":
      \"I need to gather information before I can write it to a file. The internet
      is a good place to start.\",\n        \"plan\": \"- Use the browse_website command
      to search for information on the 2010 Nobel Prize in Physics\\n- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that the information I find is accurate and that I am not missing
      any important details.\",\n        \"speak\": \"I will search for information
      on the 2010 Nobel Prize in Physics and write it to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: announcing
      the 2010 Nobel Prize in Physics, which was awarded jointly to Andre Geim and
      Konstantin Novoselov for their groundbreaking experiments with graphene, a two-dimensional
      material.\n\nLinks: [''\\nSkip to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have found the information I need. Now I need to write
      it to a file using the write_to_file command.\",\n        \"reasoning\": \"I
      have the information I need, so I can use the write_to_file command to save
      it to a file.\",\n        \"plan\": \"- Use the write_to_file command to write
      the winner''s name(s), affiliated university, and discovery of the 2010 Nobel
      Prize in Physics to a file.\",\n        \"criticism\": \"I need to make sure
      that the information is formatted correctly and that I am not missing any important
      details.\",\n        \"speak\": \"I will use the write_to_file command to write
      the winner''s name(s), affiliated university, and discovery of the 2010 Nobel
      Prize in Physics to a file.\"\n    },\n    \"command\": {\n        \"name\":
      \"write_to_file\",\n        \"args\": {\n            \"filename\": \"2010_nobel_prize_winners.txt\",\n            \"text\":
      \"The 2010 Nobel Prize in Physics was awarded jointly to Andre Geim and Konstantin
      Novoselov for their groundbreaking experiments with graphene, a two-dimensional
      material. They were affiliated with the University of Manchester.\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6965'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6yTQW/bMAyF7/sVBM9OkDZNu/m4dYcO6A7FdhjmolBkOlYtkYLENA2C/PfBidMG
        6bBhwK6k38PHp+cNuhpLtK1RG6IfXd1eZ2vNj+9f6PP0Mbrr2+5ucUfT1cXzt49YoMwfyeqgGFsJ
        0ZM6YSzQJjJKNZZnl+9ns+nkw/llgUFq8ljiIupoOp6NdJnmMppMJ2dY4DKbBWG5wZgkRH1Q6Ygz
        lmez2UWBr+avi6vzAlXU+OPR5bZA24qzlLH8ucFA+WCcxBOWaHJ2WQ1rjymsxP0Jm4oBACrUVpaL
        VnOFJQzDYUHP2g8rvIHWPBEMTFRDWIOa3I3hBnIrS19DoidHq35hbE+dQQWI8zIRaGsUBo9IqZEU
        qO732hLMKStIs1POnXfqKI8rLI5JEpks7Hgx4Ci4DC5ESf1ZvVOixpNVED5BcDWxumYNpjeBRlIv
        TPJEgVjBcP0W1IQDpuPFv3BGb3iPOIK73wXyZ5qq4hF8Es6upgStrOAGrGEwMfo1rI5S9GQS7zNs
        lrpDN7nLJzg2OXXW5XB4Raa9JpiO4ORiK7wriV8PSP3tu3hePmHRXroLpSXIJhCEvlodZUgUd3+A
        X5+mkiOZ7u9FWjnvgWX136u0Z9kWh8JbCcFw/abvbALtMb8K04uu4i1uC2wcu9w+7KuIJWaViAU6
        rukZy8n2fvvuFwAAAP//AwB+MJmATwQAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cfeb900ff3b293d-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 11:02:18 GMT
      Function-Execution-Id:
      - etk96ox0krz2
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '12122'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - e90eeb34e6a4c0a76b0e1bf354ba361b;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85999'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.667s
      X-Request-Id:
      - 4a00a636b9198536e0f5a193b3dfe79a
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out who won the
      2010 Nobel Prize in Physics and write their names, affiliated university, and
      discovery to a file. I can start by searching for the information online.\",\n        \"reasoning\":
      \"I need to gather information before I can write it to a file. The internet
      is a good place to start.\",\n        \"plan\": \"- Use the browse_website command
      to search for information on the 2010 Nobel Prize in Physics\\n- Use the write_to_file
      command to write the information to a file\",\n        \"criticism\": \"I need
      to make sure that the information I find is accurate and that I am not missing
      any important details.\",\n        \"speak\": \"I will search for information
      on the 2010 Nobel Prize in Physics and write it to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command browse_website returned: Answer gathered from website: announcing
      the 2010 Nobel Prize in Physics, which was awarded jointly to Andre Geim and
      Konstantin Novoselov for their groundbreaking experiments with graphene, a two-dimensional
      material.\n\nLinks: [''\\nSkip to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have found the information I need. Now I need to write
      it to a file using the write_to_file command.\",\n        \"reasoning\": \"I
      have the information I need, so I can use the write_to_file command to save
      it to a file.\",\n        \"plan\": \"- Use the write_to_file command to write
      the winner''s name(s), affiliated university, and discovery of the 2010 Nobel
      Prize in Physics to a file.\",\n        \"criticism\": \"I need to make sure
      that the information is formatted correctly and that I am not missing any important
      details.\",\n        \"speak\": \"I will use the write_to_file command to write
      the winner''s name(s), affiliated university, and discovery of the 2010 Nobel
      Prize in Physics to a file.\"\n    },\n    \"command\": {\n        \"name\":
      \"write_to_file\",\n        \"args\": {\n            \"filename\": \"2010_nobel_prize_winners.txt\",\n            \"text\":
      \"The 2010 Nobel Prize in Physics was awarded jointly to Andre Geim and Konstantin
      Novoselov for their groundbreaking experiments with graphene, a two-dimensional
      material. They were affiliated with the University of Manchester.\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have completed my
      task. I should review my actions to ensure that I have performed to the best
      of my abilities.\",\n        \"reasoning\": \"It is important to reflect on
      my actions to identify areas for improvement and to ensure that I am performing
      to the best of my abilities.\",\n        \"plan\": \"- Review my actions to
      identify areas for improvement\\n- Consider how I can apply what I have learned
      to future tasks\",\n        \"criticism\": \"I need to make sure that I am constantly
      improving and that I am not making the same mistakes repeatedly.\",\n        \"speak\":
      \"I have completed my task. I will now review my actions to ensure that I have
      performed to the best of my abilities.\"\n    },\n    \"command\": {\n        \"name\":
      \"None\"\n    }\n}"}, {"role": "system", "content": "Command None returned:
      Unknown command ''none''. Please refer to the ''COMMANDS'' list for available
      commands and only respond in the specified JSON format."}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '8117'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6ySTW8TMRCG7/yK0Zw3UUKafuy5lx56QBShwqLIsae7JvbY2LOkaZT/jtzdKFUA
        ceE6H+8z7+jdozVYo+6UaB/d5Or+Nu/Mg3r48CPQ0/pLpMePj8bff1aLhy1WGNbfScu4MdXBR0di
        A2OFOpESMljPL6+Xy8Xs5uK6Qh8MOayxjTJZTJcT6dM6TGaL2Rwr7LNqCes9xhR8lJWEDXHGen51
        fVXhSfzUuLyoUIIodyrdLOeHCnUXrKaM9dc9espH4RQcYY0qZ5tFsZQzAwtxsbBvGACgQelC33aS
        G6xhLI4NepZSbPAOchd6Z8CQIyFQvIMn6yiDdErgDkb3YPpkuQXpbAZReTP0VSLgAC5wSwmYyJCZ
        Nli9hSVSObDldiDeFlCR6plJF0vpiNxa56AjF0ECbIgi+B1sQ9rkqDRBSK1i+0IGFBuIiX4SC2jX
        i1A6p0aneABO4FMmkI5Gj6sCAx28LzIS/mL9T9bOGDpZsdpmf/xlmSqKXm0Icp/o+EXlIbDbDahi
        /h+gV4enXQ4CSmtriEW5tzrWx5BKAgbF8y/kSGpzvO71vf3/+sW0wYF0qI55G3V+ixsrT8MRb6hn
        l6rUnud0aJTZk8D72Xy24rAmt4rJvtBqa5kp5amURJ92D+NtDR/wUOGTZZu71RBFrDFLiFihZUPP
        WM8O3w7vfgEAAP//AwAmdX2DMgQAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cfeb98a9e6a2252-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 11:02:41 GMT
      Function-Execution-Id:
      - 74cgu7uqaork
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '12804'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 30226d6a9d59e29c701aeeca4be35764;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85981'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.679s
      X-Request-Id:
      - fc2ae5084df3aa4be8d19dab687d9085
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"The 2010 Nobel
      Prize in Physics was awarded jointly to Andre Geim and Konstantin Novoselov
      for their groundbreaking experiments with graphene, a two-dimensional material.
      They were affiliated with the University of Manchester.\"\"\"\n\n\nCONCISE SUMMARY:
      The text is best summarized as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '467'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0RQTWvbQBC991cMc14Zqa5iR7dCSAghjqH0VEpYa0fWJKsZsTu24hr/96I2Ta/v
        m3dGDthg23trhzEWq8cbuy0tlnf3T8vt/qHW9dNmdfNafTtQQIe6e6HW3h2LVocxkrEKOmwTeaOA
        TXW1rutleX1VOxw0UMQG96MVy0Vd2CHttCiXZYUOD9nvCZszjkmH0Z5NX0kyNqu1w//RH/CXyqGp
        +fiBVNX1xWHbK7eUsflxxoHyv9CkkbBBnzNn82LzRBUjmed/lZAI7ogH8BLgQeWPhgU2etRMUY8w
        USJ4URaLJ/CTT4ECWE/wuaxK2OiOImwT/yJggW1/ytxm6DTNGk5AbyMlHkgsw8TWwz75sSchBx5s
        0iLMZGYVH2HwRol9dDD1HAl813Hk+c+/3rn2u/CRUmY7gXbw6KXtKRulBV4cdiyc++dEPqtgg9l0
        RIcsgd6wKS8/L59+AwAA//8DANpjfyzsAQAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cfeb9f4dd85232d-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 11:02:48 GMT
      Function-Execution-Id:
      - 74cgjqc79yom
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '3302'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 5c9e3b87670a816cb568b6539bcdc67c;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89412'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 392ms
      X-Request-Id:
      - e2135ed49abef70e66cd56327422da88
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["The 2010 Nobel Prize in Physics was awarded jointly to Andre
      Geim and Konstantin Novoselov for their groundbreaking experiments with graphene,
      a two-dimensional material. They were affiliated with the University of Manchester."],
      "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '305'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        /wMAD/iOAuMgAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cfeba141c0501ca-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 11:02:50 GMT
      Function-Execution-Id:
      - 74cggdlel5tx
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '160'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - d453c0a235773d3312061167aa13cd9d
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 336b4719cac3983416e5dca00ce51ec9
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "Andre Geim and Konstantin Novoselov were jointly awarded the
      2010 Nobel Prize in Physics for their experiments with graphene, a two-dimensional
      material, while affiliated with the University of Manchester.", "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '282'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        AAD//wMAY6BckeMgAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cfeba1ecd578753-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 11:02:52 GMT
      Function-Execution-Id:
      - 74cgthxuiwxm
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '179'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - f6270c837a44aa1b43c6476a284ced8a
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - b75e34ba383f16027f00789d2ad4d51f
    status:
      code: 200
      message: OK
version: 1
