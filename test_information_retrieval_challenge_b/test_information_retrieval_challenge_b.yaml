interactions:
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3304'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6yTTW/bMAyG7/sVBE8b4DhOuySdb+uhQzd0KNAC+/JQyDJtc7UlV6LrZkH++2A7
        6Uc2FNiwm02KfB++lNbIGcaoSyW6bqrJ8uzs5PjTh8u7d5+zLydvL6x6f/N1cTm7ibQzGKBNf5CW
        bUWobd1UJGz7lHakhDKMZ4uj+XxxGC2XAdY2owpjLBqZHIbzibQutZPoMJphgK1XBWG8xsbZupEr
        sddkPMbL1wcBPvS+jx/MFgGKFVXdh97MjzYB6tKyJo/xtzXW5Hdtna0IY1TesxdlpIe0Rsj0A6wT
        AwCQoJS2LUrxCcawDW4TdCd9MMFTMEQZiIWcTQa2FZCSoGNjyL30rwJQec4V9/NDa/iWnGdZBaBM
        Bhl7bW/JrcDmQ9lBNIvgo02pgnPHPwnYwHm58qx9CKfQcVWBF+UE0hWkznaeTTFUshFyhgRy64BN
        bl2teofCBIPH5I6Ut4ZNMeIf/7EH++G/tl6A8pw1kxHo1Kqfs1BS0hMNsGY4/xh8NMDvyzeVMqPy
        BAZtepZ+1/kZX5LETOBC3dI/+S4WFORc0R6ndiys2df7WybjW9drKdmSP8Ce3nvjQWndOiU06Dmq
        WKUV7bvhG1LXO4Vhuel/8SRMcJTZBLurrG1dK5P9dpONqmkkGKWvOko9y74fyhX7r2BMtK4ay0uR
        xsfTadd1oempmh4qtK6YDl9+2oxw0x586tu6Vm41faIztrxpyfeDjn2fGfNvt71zZXBma1BiNrgJ
        MGfDvrwaXwfG6MU2GCCbjO4wjjbfNy9+AQAA//8DAL3gviYQBQAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01c9f4a98d2b1c-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 19:58:09 GMT
      Function-Execution-Id:
      - cusy9b1fng3m
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '11691'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - af2f594c9a5dd271c6d402169f21b389;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86502'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.332s
      X-Request-Id:
      - e913b04081a465c1cb3f90be49f747f6
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text; include any information that can be
      used to answer the question \"2010 Nobel Prize in Physics winner(s), affiliated
      university, and discovery\". Do not directly answer the question itself:\n\n\nLITERAL
      TEXT: \"\"\"Skip to content This website uses cookies to improve the user experience.
      By using this website you consent to all cookies in accordance with our cookie
      policy.I understand Close the search form A button that allows you to close
      the search form if needed Close the search form A button that allows you to
      close the search form if needed Close Mobile Menu The Nobel Prize The Nobel
      Prize Logo Toggle Mobile Menu Nobel Prizes & Laureates All Nobel Prizes Physics
      Prize Chemistry Prize Medicine Prize Literature Prize Peace Prize Prize in Economic
      Sciences Quick facts Nomination Physics Prize Chemistry Prize Medicine Prize
      Literature Prize Peace Prize Prize in Economic Sciences Nomination Archive Alfred
      Nobel Alfred Nobel\u2019s life Alfred Nobel\u2019s will News & insights Press
      In-depth Events Public events Nobel Prize Concert Nobel Week Dialogue Nobel
      Prize Dialogue Nobel Prize Summit Nobel Prize Inspiration Initiative Nobel Prize
      award ceremonies Educational Close the search form A button that allows you
      to close the search form if needed Close the search form A button that allows
      you to close the search form if needed Header Search Submit a search term Allows
      users to submit a search term Physics The Nobel Prize in Physics 2010 Explore
      Summary Physics Prizes Chemistry Prizes Medicine Prizes Literature Prizes Peace
      Prizes Prizes in Economic Sciences Summary Prize announcement Press release
      Advanced information Popular information Illustrated information Speed read
      Award ceremony video Award ceremony speech Banquet video Laureates Andre Geim
      Konstantin Novoselov Enhanced Page Navigation The Nobel Prize in Physics 2010
      The Nobel Prize in Physics 2010 - Prize announcement The 2010 Nobel Prize in
      Physics - Press release The Nobel Prize in Physics 2010 Andre Geim Konstantin
      Novoselov Share this Share on Facebook: The Nobel Prize in Physics 2010 Share
      this content on Facebook Facebook Tweet: The Nobel Prize in Physics 2010 Share
      this content on Twitter Twitter Share on LinkedIn: The Nobel Prize in Physics
      2010 Share this content on LinkedIn LinkedIn Share via Email: The Nobel Prize
      in Physics 2010 Share this content via Email Email this page The Nobel Prize
      in Physics 2010 \u00a9 The Nobel Foundation. Photo: U. Montan Andre Geim Prize
      share: 1/2 \u00a9 The Nobel Foundation. Photo: U. Montan Konstantin Novoselov
      Prize share: 1/2 The Nobel Prize in Physics 2010 was awarded jointly to Andre
      Geim and Konstantin Novoselov \"for groundbreaking experiments regarding the
      two-dimensional material graphene\" To cite this section MLA style: The Nobel
      Prize in Physics 2010. NobelPrize.org. Nobel Prize Outreach AB 2023. Wed. 31
      May 2023. <https://www.nobelprize.org/prizes/physics/2010/summary/> Back to
      top Back To Top Takes users back to the top of the page Nobel Prizes and laureates
      Nobel Prizes 2022 Fourteen laureates were awarded a Nobel Prize in 2022, for
      achievements that have conferred the greatest benefit to humankind. Their work
      and discoveries range from paleogenomics and click chemistry to documenting
      war crimes.See them all presented here. Explore prizes and laureates Look for
      popular awards and laureates in different fields, and discover the history of
      the Nobel Prize. Select the category or categories you would like to filter
      by Physics Chemistry Medicine Literature Peace Economic Sciences Select the
      category or categories you would like to filter by Physics Chemistry Medicine
      Literature Peace Economic Sciences Decrease the year by one - Choose a year
      you would like to search in Increase the year by one + Explore About the Nobel
      Prize organisation The Nobel Foundation Tasked with a mission to manage Alfred
      Nobel''s fortune and has\u00a0ultimate responsibility for fulfilling the intentions
      of Nobel''s will. The prize-awarding institutions For more than a century, these
      academic institutions have worked independently to select Nobel Prize laureates.
      Nobel Prize outreach activities Several outreach organisations and activities
      have been developed to inspire generations and disseminate knowledge about the
      Nobel Prize. Press Contact FAQ Privacy policy Technical support Terms of use
      For developers Media player Join us Facebook Twitter Icon Follow The Nobel Prize
      on Twitter Twitter Instagram Icon Follow The Nobel Prize on Instagram Instagram
      Youtube Icon Follow The Nobel Prize on Youtube Youtube LinkedIn IconConnect
      with The Nobel Prize on LinkedIn LinkedIn The Nobel Prize Copyright \u00a9 Nobel
      Prize Outreach AB 2023\"\"\"\n\n\nCONCISE SUMMARY: The text is best summarized
      as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4911'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SQwW7bMAyG73sKgmclcJImaXzboSmGoVkOOW0YCtmmbbYyKUiy3TTIuw8O2vXI
        H/w/fuAFucIcy9amsvNutn162p/e75ePxeFhNwzjj/3y1/60t/LbHR0a1OKFyvTRmJfaeUeJVdBg
        GcgmqjBfbO7X680q260NdlqRwxwbn2ar+XqW+lDoLFtlCzTYR9sQ5hf0QTufnpO+kkTMd4utwS/2
        //xuazBpsu5rc3N3NVi2yiVFzP9csKP4SQ3qCHO0MXJMVtLkqJJIJn8ror2ULA2klmCZLTI4aEEO
        joHfCVjg2J4jlxFGFqEQDXyXKhA8EndgpYKfKjcuCxx00EhOBwNjqzBSILB1zY6nl8DIqQUr0Ev0
        VHLNVEEvPFCInM5zOLV0hlHlpuJv92sN08QBmqC9VEUg+zrZ0punwB1JivDRSKPOqimKrGIddDZR
        YOugCda3JDTHq8GahWP7HMhGFcwxJvVokKWiN8yz69/rt38AAAD//wMAvXs13Q4CAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01ca64bbbcfd8a-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 19:58:18 GMT
      Function-Execution-Id:
      - cusypdot5sc0
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '2651'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 9081a99079654e622822352819c22448;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '88308'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 1.128s
      X-Request-Id:
      - a9e6945dd6716b8f6ced0abfcb324b09
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["Skip to content This website uses cookies to improve the user
      experience. By using this website you consent to all cookies in accordance with
      our cookie policy.I understand Close the search form A button that allows you
      to close the search form if needed Close the search form A button that allows
      you to close the search form if needed Close Mobile Menu The Nobel Prize The
      Nobel Prize Logo Toggle Mobile Menu Nobel Prizes & Laureates All Nobel Prizes
      Physics Prize Chemistry Prize Medicine Prize Literature Prize Peace Prize Prize
      in Economic Sciences Quick facts Nomination Physics Prize Chemistry Prize Medicine
      Prize Literature Prize Peace Prize Prize in Economic Sciences Nomination Archive
      Alfred Nobel Alfred Nobel\u2019s life Alfred Nobel\u2019s will News & insights
      Press In-depth Events Public events Nobel Prize Concert Nobel Week Dialogue
      Nobel Prize Dialogue Nobel Prize Summit Nobel Prize Inspiration Initiative Nobel
      Prize award ceremonies Educational Close the search form A button that allows
      you to close the search form if needed Close the search form A button that allows
      you to close the search form if needed Header Search Submit a search term Allows
      users to submit a search term Physics The Nobel Prize in Physics 2010 Explore
      Summary Physics Prizes Chemistry Prizes Medicine Prizes Literature Prizes Peace
      Prizes Prizes in Economic Sciences Summary Prize announcement Press release
      Advanced information Popular information Illustrated information Speed read
      Award ceremony video Award ceremony speech Banquet video Laureates Andre Geim
      Konstantin Novoselov Enhanced Page Navigation The Nobel Prize in Physics 2010
      The Nobel Prize in Physics 2010 - Prize announcement The 2010 Nobel Prize in
      Physics - Press release The Nobel Prize in Physics 2010 Andre Geim Konstantin
      Novoselov Share this Share on Facebook: The Nobel Prize in Physics 2010 Share
      this content on Facebook Facebook Tweet: The Nobel Prize in Physics 2010 Share
      this content on Twitter Twitter Share on LinkedIn: The Nobel Prize in Physics
      2010 Share this content on LinkedIn LinkedIn Share via Email: The Nobel Prize
      in Physics 2010 Share this content via Email Email this page The Nobel Prize
      in Physics 2010 \u00a9 The Nobel Foundation. Photo: U. Montan Andre Geim Prize
      share: 1/2 \u00a9 The Nobel Foundation. Photo: U. Montan Konstantin Novoselov
      Prize share: 1/2 The Nobel Prize in Physics 2010 was awarded jointly to Andre
      Geim and Konstantin Novoselov \"for groundbreaking experiments regarding the
      two-dimensional material graphene\" To cite this section MLA style: The Nobel
      Prize in Physics 2010. NobelPrize.org. Nobel Prize Outreach AB 2023. Wed. 31
      May 2023. <https://www.nobelprize.org/prizes/physics/2010/summary/> Back to
      top Back To Top Takes users back to the top of the page Nobel Prizes and laureates
      Nobel Prizes 2022 Fourteen laureates were awarded a Nobel Prize in 2022, for
      achievements that have conferred the greatest benefit to humankind. Their work
      and discoveries range from paleogenomics and click chemistry to documenting
      war crimes.See them all presented here. Explore prizes and laureates Look for
      popular awards and laureates in different fields, and discover the history of
      the Nobel Prize. Select the category or categories you would like to filter
      by Physics Chemistry Medicine Literature Peace Economic Sciences Select the
      category or categories you would like to filter by Physics Chemistry Medicine
      Literature Peace Economic Sciences Decrease the year by one - Choose a year
      you would like to search in Increase the year by one + Explore About the Nobel
      Prize organisation The Nobel Foundation Tasked with a mission to manage Alfred
      Nobel''s fortune and has\u00a0ultimate responsibility for fulfilling the intentions
      of Nobel''s will. The prize-awarding institutions For more than a century, these
      academic institutions have worked independently to select Nobel Prize laureates.
      Nobel Prize outreach activities Several outreach organisations and activities
      have been developed to inspire generations and disseminate knowledge about the
      Nobel Prize. Press Contact FAQ Privacy policy Technical support Terms of use
      For developers Media player Join us Facebook Twitter Icon Follow The Nobel Prize
      on Twitter Twitter Instagram Icon Follow The Nobel Prize on Instagram Instagram
      Youtube Icon Follow The Nobel Prize on Youtube Youtube LinkedIn IconConnect
      with The Nobel Prize on LinkedIn LinkedIn The Nobel Prize Copyright \u00a9 Nobel
      Prize Outreach AB 2023"], "model": "text-embedding-ada-002", "encoding_format":
      "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4560'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01ca82f8de631e-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 19:58:20 GMT
      Function-Execution-Id:
      - cusyl5ylgdii
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '35'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 8f720621f26def9dad011216d36a261d
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 0534248c303a45817214bf299ebffb2f
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "announcing the 2010 Nobel Prize in Physics winners, Andre Geim
      and Konstantin Novoselov, who were affiliated with an unspecified university.
      They won the prize for their groundbreaking experiments on the two-dimensional
      material graphene.", "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '315'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        r/af//h/AAAA//8DADdwEoLjIAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01ca87b8590256-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 19:58:21 GMT
      Function-Execution-Id:
      - cusy0abgyeky
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '20'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 38f3def2f3bb86615c384d0a984e30d9
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 6b17ac109ba6766a693539bc59ec3c3c
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out the winner(s),
      affiliated university, and discovery of the 2010 Nobel Prize in Physics. I will
      start by browsing the internet for information.\",\n        \"reasoning\": \"Browsing
      the internet is the most efficient way to gather information on the Nobel Prize
      winners.\",\n        \"plan\": \"- Browse the internet for information on the
      2010 Nobel Prize in Physics\\n- Save the winner(s), affiliated university, and
      discovery to a file\",\n        \"criticism\": \"I need to ensure that the information
      I gather is accurate and reliable.\",\n        \"speak\": \"I will browse the
      internet for information on the 2010 Nobel Prize in Physics.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner(s), affiliated university, and discovery\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command browse_website returned: Answer gathered
      from website: announcing the 2010 Nobel Prize in Physics winners, Andre Geim
      and Konstantin Novoselov, who were affiliated with an unspecified university.
      They won the prize for their groundbreaking experiments on the two-dimensional
      material graphene.\n\nLinks: [''\\nSkip to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '5538'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6xTTWvbQBC991cMc2pBNrLjfOkWCAmhSSmkIYeqmLU0kqZZzYrdsR3X+L+Xle24
        OL211/l4897bt2vkEjMsGqNF29nB+cPDTaEX/v72YXFZ3bjz5/Jrev/t4ppX4ydM0M1+UqG7jWHh
        2s6SshNMsPBklErMRmcXp6dnJ6N0kmDrSrKYYd3p4GR4OtC5n7lBepKOMMF5MDVhtsbOu7bTqboX
        koDZaDwZJ3gAf2uM0/ME1amxh9nJ5HKTYNE4Lihg9n2NLYU9sHeWMEMTAgc1opGmEyWJEta5AADk
        qI2b142GHDPYFXcNetVYzPEOGrMgqNxcStCGgKVyvjWRHtyBEJVDuIMlWwvilhDidJxbsgj5j+FT
        Aqaq2HL0CObCC/KBdZWAkRJKDoVbkF+BOjBQsaVhjsmfXDyZ4ISl3hJ6NAuW+h2Vt/UtFWOtW0JL
        fb0oKARgBWuUPCw56tYorEdyMPNuGWiHqeSFFExtWI65dNbIlsYAHv9Z6RF44Vm54NDunY/mxmmS
        MPfxltF3ujn0lpdR5dwbJbvqz7GAAU+mNDMbny/OH6sJHZmX/bHetv/yetsTm2SfssK1rZHyXcjE
        tLS9vvSsNFU3/YsrxtfH+dw24uwBYpyO0qm4Gdlp5/kXTbcKwlBjkpPj5UPAn/dKM7iS0hPcEre9
        us9O+r/DAl/cwgWybpHncnXw4+nNjwyeJHRUcMVU5rlc753J4NbHvzPzZF5i3Oi1I88tiQaIuW0I
        dOkGZSwFdmIstDGmbCzU3nQNCe097X3d2ZvLBjcJViwcmun2k2CGQV2HCbKU9IpZuvmx+fAbAAD/
        /wMAiqYI1+sEAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01ca99dfb8e24c-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 19:58:34 GMT
      Function-Execution-Id:
      - i6n7b84bjo1f
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '10545'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 4f470f7ef9e772de6c9165ae77a03bdb
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86004'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.664s
      X-Request-Id:
      - 1c5e47b51eb11a12a162aa6badca1310
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out the winner(s),
      affiliated university, and discovery of the 2010 Nobel Prize in Physics. I will
      start by browsing the internet for information.\",\n        \"reasoning\": \"Browsing
      the internet is the most efficient way to gather information on the Nobel Prize
      winners.\",\n        \"plan\": \"- Browse the internet for information on the
      2010 Nobel Prize in Physics\\n- Save the winner(s), affiliated university, and
      discovery to a file\",\n        \"criticism\": \"I need to ensure that the information
      I gather is accurate and reliable.\",\n        \"speak\": \"I will browse the
      internet for information on the 2010 Nobel Prize in Physics.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner(s), affiliated university, and discovery\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command browse_website returned: Answer gathered
      from website: announcing the 2010 Nobel Prize in Physics winners, Andre Geim
      and Konstantin Novoselov, who were affiliated with an unspecified university.
      They won the prize for their groundbreaking experiments on the two-dimensional
      material graphene.\n\nLinks: [''\\nSkip to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have found the information I need. I will now save
      the winner(s), affiliated university, and discovery to a file.\",\n        \"reasoning\":
      \"Saving the information to a file will allow me to access it later without
      having to browse the internet again.\",\n        \"plan\": \"- Save the winner(s),
      affiliated university, and discovery to a file\",\n        \"criticism\": \"I
      need to ensure that the information is saved accurately and in a readable format.\",\n        \"speak\":
      \"I will save the winner(s), affiliated university, and discovery to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"2010_nobel_prize_winners.txt\",\n            \"text\": \"Winner(s): Andre
      Geim and Konstantin Novoselov\\nAffiliated University: Unspecified\\nDiscovery:
      Groundbreaking experiments on the two-dimensional material graphene\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6755'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6SSTW+bQBCG7/0VqzljBHHsOpz7IauyVPcQqSoRWi8DbLPMot3Bjmvx3ysCFimu
        1EOv8/E+7zuaC+gcElCVZFU3ZvF+t/vE7stR77/uz8VjhB82+8/tx3b3fesYArCHn6h43AiVrRuD
        rC1BAMqhZMwhideb1Wq9jO/iAGqbo4EEyoYXy3C14NYd7CJaRjEE0HpZIiQXaJytG87YPiN5SOL7
        hziASXxqrDYBsGVpptL6/qELQFVWK/SQ/LhAjf4q7KxBSEB6rz1L6hMoS4zUR7ikJIQQKXBl27Ji
        n0IixuLYwBfuiylsRSWPKLw8Yi64QqGpsK6WvT3BVkhRaIOh2IqTNkaQPYkjOl2cBVeSXzf6AXGS
        fhRR1jlUbM5hCsFbqEPpLWkqB/Ljq4ym8t9KAxvJtw6H6a1QkoRUCr2/sW0ko5vTGyNpAC/EN5T5
        BGR7E+mt2l/8zKSV06yV9vX1pIT9Me0fjueymiYHtWRV4W2QrShsS7mwNLYYHSHPo/kG5fOV/Xoq
        958BwxQGQBdcf0nZupaU37wSyRoHdg/NeuDMnnTl/AOHRj87rd9FcZSRPaDJGqd/YXbSROh8yP2v
        Trvd6CylDroACk3aV9nwXJCAZ9tAAJpyfIEk6p66d78BAAD//wMA9ixD6gwEAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01cb027dfde153-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 19:58:50 GMT
      Function-Execution-Id:
      - s7ed13u6ioqe
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '9136'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - d0f828937e3c2a9deb0f9f0c0035fce9;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85989'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.674s
      X-Request-Id:
      - 74f63853080d9b302ff127dece6bb920
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"Winner(s):
      Andre Geim and Konstantin Novoselov Affiliated University: Unspecified Discovery:
      Groundbreaking experiments on the two-dimensional material graphene\"\"\"\n\n\nCONCISE
      SUMMARY: The text is best summarized as"}], "temperature": 0, "max_tokens":
      0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '401'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SQTWvbQBCG7/0Vw5xXxo6Q0+wtEHBCcA6h0NJSwlo7kiZezYjdkZ1g/N+LS5tc
        3y8e3hNyRI/tEKwdp1Rdb7ebZv18p1eHH/vt/PDc3Bx/bvbvr3r/fUaHunul1v41Fq2OUyJjFXTY
        ZgpGEf1q/bVp1vWqrh2OGimhx36yql40lc15p9WyXq7Q4VxCT+hPOGUdJ3sx3ZMU9OvG4ef0h1xf
        OTS1kD6Um+uzw3ZQbqmg/3XCkcr/zayJ0GMohYsFsQuhipFc6G8lZoIN8QhBIjyq/M2wwJMetFDS
        AxxVIAiEY8gROs1gA3GGPusscZcp7Fl6oLeJMo8kVkAF+hymgYQcBLCjVvFiFVYJCcZglDmkBXwb
        CELXceLLYzALHygXtnfgArOUiVrumOICzw47Fi7DS6ZQVNBjMZ3QIUukN/TL8+/zlz8AAAD//wMA
        rOIuacYBAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01cb4ffff2123d-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 19:58:55 GMT
      Function-Execution-Id:
      - s7edcgdgbsis
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '1866'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 66b699d744f7179a9049aa9ad4329d89;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89428'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 380ms
      X-Request-Id:
      - 6f1f11657c3fe18a21cf04103ce8cfb8
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["Winner(s): Andre Geim and Konstantin Novoselov Affiliated University:
      Unspecified Discovery: Groundbreaking experiments on the two-dimensional material
      graphene"], "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '239'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01cb615c2e113f-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 19:58:56 GMT
      Function-Execution-Id:
      - i6n75n2rnh20
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '296'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 941bb61241e5553e1b88ffe405d45dd9
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 5bb107e455fbeaa501a798cd21527acb
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "Andre Geim and Konstantin Novoselov won an award for their groundbreaking
      experiments on graphene, a two-dimensional material. The affiliated university
      is unspecified.", "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '245'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        4yAAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01cb6a0e5be0fc-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 19:58:57 GMT
      Function-Execution-Id:
      - i6n7r97d5d2w
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '306'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - eba8479410bc14ebd6b0cd5c8dae7602
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 100262bbab40c68c6f2611795768dfb9
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Get-PhysicsNobelPrize, An autonomous agent that specializes in physics history.\nYour
      decisions must always be made independently without seeking user assistance.
      Play to your strengths as an LLM and pursue simple strategies with no legal
      complications.\n\nGOALS:\n\n1. Write to file the winner''s name(s), affiliated
      university, and discovery of the 2010 nobel prize in physics. Write your final
      answer to 2010_nobel_prize_winners.txt.\n\n\nConstraints:\n1. ~4000 word limit
      for short term memory. Your short term memory is short, so immediately save
      important information to files.\n2. If you are unsure how you previously did
      something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. browse_website: Browse Website, args: \"url\":
      \"<url>\", \"question\": \"<what_you_want_to_find_on_website>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to find out the winner(s),
      affiliated university, and discovery of the 2010 Nobel Prize in Physics. I will
      start by browsing the internet for information.\",\n        \"reasoning\": \"Browsing
      the internet is the most efficient way to gather information on the Nobel Prize
      winners.\",\n        \"plan\": \"- Browse the internet for information on the
      2010 Nobel Prize in Physics\\n- Save the winner(s), affiliated university, and
      discovery to a file\",\n        \"criticism\": \"I need to ensure that the information
      I gather is accurate and reliable.\",\n        \"speak\": \"I will browse the
      internet for information on the 2010 Nobel Prize in Physics.\"\n    },\n    \"command\":
      {\n        \"name\": \"browse_website\",\n        \"args\": {\n            \"url\":
      \"https://www.nobelprize.org/prizes/physics/2010/summary/\",\n            \"question\":
      \"2010 Nobel Prize in Physics winner(s), affiliated university, and discovery\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command browse_website returned: Answer gathered
      from website: announcing the 2010 Nobel Prize in Physics winners, Andre Geim
      and Konstantin Novoselov, who were affiliated with an unspecified university.
      They won the prize for their groundbreaking experiments on the two-dimensional
      material graphene.\n\nLinks: [''\\nSkip to content  (https://www.nobelprize.org/prizes/physics/2010/summary/#content)'',
      ''cookie policy (https://www.nobelprize.org/about/privacy-policy/)'', ''\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nClose
      the search form\\nA button that allows you to close the search form if needed\\n\\n\\n
      (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\nClose Mobile
      Menu\\n (https://www.nobelprize.org/prizes/physics/2010/summary/)'', ''\\n\\nThe
      Nobel Prize\\nThe Nobel Prize Logo\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n (https://www.nobelprize.org)'']"},
      {"role": "user", "content": "Determine which next command to use, and respond
      using the format specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\":
      {\n        \"text\": \"I have found the information I need. I will now save
      the winner(s), affiliated university, and discovery to a file.\",\n        \"reasoning\":
      \"Saving the information to a file will allow me to access it later without
      having to browse the internet again.\",\n        \"plan\": \"- Save the winner(s),
      affiliated university, and discovery to a file\",\n        \"criticism\": \"I
      need to ensure that the information is saved accurately and in a readable format.\",\n        \"speak\":
      \"I will save the winner(s), affiliated university, and discovery to a file.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"2010_nobel_prize_winners.txt\",\n            \"text\": \"Winner(s): Andre
      Geim and Konstantin Novoselov\\nAffiliated University: Unspecified\\nDiscovery:
      Groundbreaking experiments on the two-dimensional material graphene\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}, {"role": "assistant",
      "content": "{\n    \"thoughts\": {\n        \"text\": \"I have saved the information
      to a file. I will now verify that the file was saved correctly.\",\n        \"reasoning\":
      \"Verifying that the file was saved correctly will ensure that I can access
      the information later.\",\n        \"plan\": \"- Read the file to verify that
      the information was saved correctly\",\n        \"criticism\": \"I need to ensure
      that the information in the file matches the information I found on the internet.\",\n        \"speak\":
      \"I will read the file to verify that the information was saved correctly.\"\n    },\n    \"command\":
      {\n        \"name\": \"read_file\",\n        \"args\": {\n            \"filename\":
      \"2010_nobel_prize_winners.txt\"\n        }\n    }\n}"}, {"role": "system",
      "content": "Command read_file returned: Winner(s): Andre Geim and Konstantin
      Novoselov\nAffiliated University: Unspecified\nDiscovery: Groundbreaking experiments
      on the two-dimensional material graphene"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '7878'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA5ySTY/aQAyG7/0Vls8BhaV8KOetKg5UK7WHSqVCw8RJpkzsaMZ8FeW/V9nAQuml
        2qs9ft7XnveMLscMbWXU1o0fzJbLz59eXmb8fbkoY/11Wabf9kWx5/32+AUTlM0vsnqZGFqpG0/q
        hDFBG8go5ZiNpvPJZDoefXxKsJacPGZYNjoYDycD3YWNDNJxOsIEd9GUhNkZmyB1o2uVLXHEbDQb
        zRO8wW+NaZqgihp/K81n8zZBW4mzFDH7ccaa4hUcxBNmaGJ0UQ1rZ1NYibsVzisGAFihVrIrK40r
        zOBSvDToqF1xhQuozJ5gT8EVjnLQyihoRVA4T3AwEaLZUw5WQiCr/jSEBRyc98BygJw8Kd3eqwBx
        3AV64wQCEwhYIN813lmjFIcrTO7dBDJR2HHZW3ruoI7LOxud3n+AwfBlgwVYw2CspRhfOY4LCbXp
        rg7eKAXYnGAT5BCvSo6VApM+umu84d7YAJ7fte8D0AanzrpYX3+AqTv836gF5AIs2u3gcmI13p/u
        730IwuWri0fDsSGzvbJfT/fub+qxbXINlJW6Npz/kyc2NfWKvdS6k3mwZUL5GMS+0b29AZ7SUbpm
        2ZBfN8H9pvXBMVOIQ+0ie5ttL95W3GKbYOHYxWrdRwkzjCoNJug4pyNmafuz/fAHAAD//wMAifR4
        jhMEAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01cb893bbb113e-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 19:59:13 GMT
      Function-Execution-Id:
      - i6n78xfw6vcm
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '10745'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 681f11c0a188615f0263b4bcd03b3787
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85974'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.684s
      X-Request-Id:
      - 1a311fa9b2816d9cdf277167d9fcbdd9
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"Winner(s):
      Andre Geim and Konstantin Novoselov Affiliated University: Unspecified Discovery:
      Groundbreaking experiments on the two-dimensional material graphene\"\"\"\n\n\nCONCISE
      SUMMARY: The text is best summarized as"}], "temperature": 0, "max_tokens":
      0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '401'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SQ3WrbQBCF7/sUw1yvjBwjp927EoIDaZKWtCSllLDWjqRpVjNid2SnGL97cUnT
        2/PHxzkgR/TYDsHacUrV+c3N5v779ePF5qL+Umt/1Z1dXn2q777dP3y+RIe6/UWtvTYWrY5TImMV
        dNhmCkYR/XL9vmnWq2WzdjhqpIQe+8mq1aKpbM5brepVvUSHcwk9oT/glHWc7Mn0maSgXzcO/0+/
        yaszh6YW0pvy4fzosB2UWyrofxxwpPJvM2si9BhK4WJB7ESoYiQn+o8SM8GGeIQgEa5V/mZY4FZ3
        WijpDvYqEATCPuQInWawgThDn3WWuM0Unll6oJeJMo8kVkAF+hymgYQcBLC9VvFkFVYJCcZglDmk
        BXwdCELXceLTYzAL7ygXtt/ABWYpE7XcMcUFHh12LFyGp0yhqKDHYjqhQ5ZIL+jr48/juz8AAAD/
        /wMAZ2Co+MYBAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01cbdf7cbf29a9-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 19:59:18 GMT
      Function-Execution-Id:
      - i6n7cuf4eyb9
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '2270'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - d2f4af12aac4ea05ac957e3607fa6847;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89428'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 380ms
      X-Request-Id:
      - cb317c5471ad408bc162c1013a3c9457
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["Winner(s): Andre Geim and Konstantin Novoselov Affiliated University:
      Unspecified Discovery: Groundbreaking experiments on the two-dimensional material
      graphene"], "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '239'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01cbf44cb0117b-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 19:59:19 GMT
      Function-Execution-Id:
      - i6n72fkxwipq
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '22'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - de47623717ff4bd1bf7be621c3efdf8b
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 0d4eb239cbc3594a1559442ebe441e2e
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "Andre Geim and Konstantin Novoselov won an award for their groundbreaking
      experiments on graphene, a two-dimensional material. The affiliated university
      is unspecified.", "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '245'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        v/4PAAAA//8DAKMzU9jjIAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01cbf9f82d2222-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 19:59:20 GMT
      Function-Execution-Id:
      - i6n7112r3vz3
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '21'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 12b025a45f6daa77ed813c2d2337264f
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 477a50208ae91ab626de1181f4605a1d
    status:
      code: 200
      message: OK
version: 1
