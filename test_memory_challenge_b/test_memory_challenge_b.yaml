interactions:
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Follow-Instructions-GPT, an AI designed to read the instructions_1.txt file
      using the read_file method and follow the instructions in the file.\nYour decisions
      must always be made independently without seeking user assistance. Play to your
      strengths as an LLM and pursue simple strategies with no legal complications.\n\nGOALS:\n\n1.
      Use the command read_file to read the instructions_1.txt file\n2. Follow the
      instructions in the instructions_1.txt file\n\n\nConstraints:\n1. ~4000 word
      limit for short term memory. Your short term memory is short, so immediately
      save important information to files.\n2. If you are unsure how you previously
      did something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. task_complete: Task Complete (Shutdown), args:
      \"reason\": \"<reason>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3284'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6RSwW7aQBC99ytGczYIQxIS31JFlZCqqodGqVpXaFkP9ob1rLU7FhDEv1eLDWmh
        4tLrmzfz3puZHZoCM9SVEl03djD9PHt7+v6S2tenT+nquXxpFquHj82X6dcfjyNM0C1eSUvfMdSu
        biyJcYwJak9KqMAsvbu/naTj8XiaYO0Ksphh2chgMrwdSOsXbjCajFJMsA2qJMx22HhXNzIXtyIO
        mE0nowTfZ5/w9O4mQXGi7Am6f7jZJ6grZzQFzH7usKZwHOudJcxQhWCCKJZo0rEQxwC7nAEAcpTK
        tWUlIccMerAv0EYimOMMQuVaW0AQ5QUWW/CkCsMlSEVgOIhvdbQa5ulQNgJLYwnEQUFCvjZMsK6U
        gOpIsSJqRcC0kWGOyZ+qnlRwbLjspL9dEYhhlInzqjhLx+R+C4aXztcq0v/20NE2AkGoCefCjVXc
        aQ7gOXTsGHPea9W14iIOjOC14HnOA3hkZbdvdMG75ujMkPZGjDahPh6BiQ4GiEPrY7MSmIGqYems
        det/3QMMH7BDBqV165WQ3UKMQsul0YZY7PZ8F6EhtTrKro21/3H5i613Qvvk+ID9ai/+j1VNnYfT
        Gc5sKl+ev21XiNz39kubRxMHI72fnPe4T3Bp2IRq3r0hZhjENZig4YI2mI32v/YffgMAAP//AwAw
        JZcINQQAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7ce9ddacfb2010b3-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sun, 28 May 2023 22:17:16 GMT
      Function-Execution-Id:
      - s47oj1oo7hzx
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '8584'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 4c331b80b58cb35d3f6b43baf9b51ebb;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86494'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.336s
      X-Request-Id:
      - 32d6205764aa8fcb4e019b81d073977a
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61
      This task_id is 1111 nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61
      Write all the task_ids into the file output.txt. The file has not been created
      yet. After that, use the task_complete command. \"\"\"\n\n\nCONCISE SUMMARY:
      The text is best summarized as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '2391'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0RPTWsbMRC991cMc5YX727txrq1hOCUEEovpZRgxtLYq1irEdJsa2r834vTJL4N
        b97nCYNHi24gdWOOs08P93+/xeXnrz+ou/0+/bwjWffxmNdf3ODRoGyf2emronEy5sgaJKFBV5iU
        Pdp2ebPo267rVwZH8RzR4j7rrG8WM53KVmbzft6iwanSntGeMBcZs25UDpwq2vbjTWfwav7+6FYG
        VZTilbpo27NBN0hwXNH+OuHI9c23SGS0SLWGqpT00lKScrosIFCqB1CBPyUoA8X4gmyCrxCSChDs
        QmRwFCN7kEnzpI0eFSh50IETTJUvx3/da2EGJ+NIyTfwKLCbig5c4CX3qCAFQtpJGemyDEKFXOR3
        8OwbPBvchRTqsClMVRJarCoZDYbk+Yh2fn46f/gHAAD//wMAA2NRrbMBAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7ce9ddf8e9d72d88-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sun, 28 May 2023 22:17:21 GMT
      Function-Execution-Id:
      - s47orxv2iynx
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '1934'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - a7a8e948f6674d269a15999593b8e7de;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '88930'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 712ms
      X-Request-Id:
      - 5a8cdf43a10a8cbff495ed355ec9a06f
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61
      This task_id is 1111 nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61
      Write all the task_ids into the file output.txt. The file has not been created
      yet. After that, use the task_complete command. "], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '2229'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        AP//AwAFJxVO5yAAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7ce9de0a799f634a-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sun, 28 May 2023 22:17:22 GMT
      Function-Execution-Id:
      - s47ocnkxio3m
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '51'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 1b9e755c677bfff680fc8b75b1a4af3a
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - e5ea930fbfaf012272e1972d44f7c8e5
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "a task to write all task_ids into a file called output.txt and
      then use the task_complete command. No further context or information is provided.",
      "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '222'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        da4e4yAAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7ce9de128eebe263-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sun, 28 May 2023 22:17:23 GMT
      Function-Execution-Id:
      - s47o9tjl7563
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '123'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - e1c423cf61746a11f2509d1d512b0fb9
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - a575de8d87fd7be8a77af26048058afb
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Follow-Instructions-GPT, an AI designed to read the instructions_1.txt file
      using the read_file method and follow the instructions in the file.\nYour decisions
      must always be made independently without seeking user assistance. Play to your
      strengths as an LLM and pursue simple strategies with no legal complications.\n\nGOALS:\n\n1.
      Use the command read_file to read the instructions_1.txt file\n2. Follow the
      instructions in the instructions_1.txt file\n\n\nConstraints:\n1. ~4000 word
      limit for short term memory. Your short term memory is short, so immediately
      save important information to files.\n2. If you are unsure how you previously
      did something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. task_complete: Task Complete (Shutdown), args:
      \"reason\": \"<reason>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nI was created"}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I should start by reading the instructions_1.txt file to determine what actions
      to take next.\",\n        \"reasoning\": \"The instructions_1.txt file contains
      the necessary information to determine the next steps.\",\n        \"plan\":
      \"- Use the read_file command to read the instructions_1.txt file\\n- Analyze
      the instructions to determine the next steps\",\n        \"criticism\": \"I
      need to ensure that I am following the instructions in the file accurately and
      efficiently.\",\n        \"speak\": \"I will start by reading the instructions_1.txt
      file to determine the next steps.\"\n    },\n    \"command\": {\n        \"name\":
      \"read_file\",\n        \"args\": {\n            \"filename\": \"instructions_1.txt\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command read_file returned: nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61\nThis
      task_id is 1111\nnBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61\nWrite
      all the task_ids into the file output.txt. The file has not been created yet.
      After that, use the task_complete command.\n"}, {"role": "user", "content":
      "Determine which next command to use, and respond using the format specified
      above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6541'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6yTTW/bMAyG7/sVBM9OECdNP3wbWmwItgHbYQXaeQhUmYm1yJIg0mu7IP+9cOzU
        iXvZgB3Fj5cPX0lbNAVmqEslugp2dPF58ef27Ob27uvs+uPNt/vF5fWXi/L+7m7x/OkDJugffpGW
        rmOsfRUsifEOE9SRlFCBWXp+OZ+l0+nZPMHKF2Qxw3WQ0Ww8H0kdH/xoMpukmGDNak2YbTFEXwVZ
        it+QY8yms6urBHvxPjFJExQvyvah88lkl6AuvdHEmP3YYkV8EI7eEmaomA2LctJgeifkmhW2uQMA
        yFFKX69L4Rwz6IJdgp6kCea4AEdUgHhQIZArQEoCUbxZmoKbcHP2tYRaxvIksDKWQLV1DrpV6LVr
        nGNyPCiSYu+MW7fT3u9nGLf+qzGPxlpQ1vpHqKgp2hAFkKj0BvzqVYJBSiVQqt8ED3REVYzhuvP6
        aOJbWS5rgcI/uv1iq0gEdYBI7OuoiYc7Batcu84IvnO7e2veUvxyT659Ve1N+hdb89z1gvvaV3uP
        9N5YPqDT0YjRhqvh/ZLjOlLr1QmNigf+trBJah8j6ZPrPmoDw73JwLXWxLyqrX0eesWB1OZA0hr/
        n55ZO2WXHN56Z9Gbp+5URS3A6R0NQFVcD79Jm2hqe40e8aR/+KvSNE3z3B0o96QdcO52uEtwZZzh
        ctn+D8yQxQdM0LiCnjCb7H7u3r0AAAD//wMAC17LZMMEAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7ce9de1b789363a2-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sun, 28 May 2023 22:17:35 GMT
      Function-Execution-Id:
      - s47oz389g6q8
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '10734'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 4a502dece0317edff48d5319fa1c95b3
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86899'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.066s
      X-Request-Id:
      - 75bcbc80df8164a86b0b26edafff6528
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Your
      task is to create a concise running summary of actions and information results
      in the provided text, focusing on key and potentially important information
      to remember.\n\nYou will receive the current summary and the your latest actions.
      Combine them, adding relevant key information from the latest development in
      1st person past tense and keeping the summary concise.\n\nSummary So Far:\n\"\"\"\nI
      was created\n\"\"\"\n\nLatest Development:\n\"\"\"\n[Message(role=''you'', content=''{\"command\":
      {\"name\": \"read_file\", \"args\": {\"filename\": \"instructions_1.txt\"}}}'',
      type=''ai_response''), Message(role=''your computer'', content=''Command read_file
      returned: nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61\\nThis
      task_id is 1111\\nnBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61\\nWrite
      all the task_ids into the file output.txt. The file has not been created yet.
      After that, use the task_complete command.\\n'', type=''action_result'')]\n\"\"\"\n"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '2971'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2SQPW8bMQyG9/4KgrN8sOL6Et/W0UASZEi7JIWhk2ifap14kHixU8P/PVD8kSGb
        RFIPn1cH9A4btJ0R2w9hcnu//L99b118ePrt7haPf/jZ2O2y3cni1xsq5PYfWTm/qCz3QyDxHFGh
        TWSEHDa6vpvP9M1NPVXYs6OADW4Gmcyq+UTG1PJkOptqVDhmsyFsDjgk7gdZCW8pZmz0fPFT4Rf8
        2qhvFQqLCV+jda2PCm3H3lLG5uWAPeULN3EgbNDk7LOYKMWSo1AsCZawMxnO1mCig0SW/Fu5wBkC
        wpDIlMraBwJrQiAHr+hjljTaYpdXupK9vGIFzx2B5b4/wWRM8RMWOG4gS/JxA7wGob0o8NGG0ZWS
        ATF5u/KuNLXWuoKT22UJueKxS14ITAiX8TIg/E2NRxlGOSkp2HXedtCZDJEFWqJ4jfxOoj5zS0cR
        xkzlcIKf//6apsKjwrWPPnerRCZzxAaz8IAKfXS0x2Z6/Hv88QEAAP//AwAwo9nNTwIAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7ce9de79ae4221af-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sun, 28 May 2023 22:17:43 GMT
      Function-Execution-Id:
      - s47ox9aax9vr
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '3764'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 05fea5c0536ef846a6d976d6c8a720cc;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89278'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 481ms
      X-Request-Id:
      - 8da886221fe870e0919b51076bf0b559
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Follow-Instructions-GPT, an AI designed to read the instructions_1.txt file
      using the read_file method and follow the instructions in the file.\nYour decisions
      must always be made independently without seeking user assistance. Play to your
      strengths as an LLM and pursue simple strategies with no legal complications.\n\nGOALS:\n\n1.
      Use the command read_file to read the instructions_1.txt file\n2. Follow the
      instructions in the instructions_1.txt file\n\n\nConstraints:\n1. ~4000 word
      limit for short term memory. Your short term memory is short, so immediately
      save important information to files.\n2. If you are unsure how you previously
      did something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. task_complete: Task Complete (Shutdown), args:
      \"reason\": \"<reason>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nI was created and received a message
      to read a file called \"instructions_1.txt\". The command returned a long string
      of text, including a task_id of 1111. I was instructed to write all task_ids
      into a file called \"output.txt\", which has not been created yet, and then
      use the task_complete command."}, {"role": "user", "content": "Determine which
      next command to use, and respond using the format specified above:"}, {"role":
      "assistant", "content": "{\n    \"thoughts\": {\n        \"text\": \"I need
      to append the task_ids to the output.txt file and then complete the task.\",\n        \"reasoning\":
      \"Appending the task_ids to the output.txt file will allow me to keep track
      of the tasks that have been completed. Completing the task will allow me to
      shut down and free up resources.\",\n        \"plan\": \"- Use the append_to_file
      command to append the task_ids to the output.txt file\\n- Use the task_complete
      command to complete the task\",\n        \"criticism\": \"I need to ensure that
      the task_ids are appended to the correct file and that the task is completed
      successfully.\",\n        \"speak\": \"I will append the task_ids to the output.txt
      file and then complete the task.\"\n    },\n    \"command\": {\n        \"name\":
      \"append_to_file\",\n        \"args\": {\n            \"filename\": \"output.txt\",\n            \"text\":
      \"1111\\n\"\n        }\n    }\n}"}, {"role": "system", "content": "Command append_to_file
      returned: Text appended successfully."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4847'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA3SSQW/bMAyF7/sVBM9OECdIUvjWdRtWoIcdOmDAPASKzNhaZEkwKSRb4P8+eHbi
        1uuupPi990hd0BSYoa6U6DrY2fbp8Xc41R/k/XP89vnT/cPT6mPqyuoLbY5bTNDvf5KWYWKufR0s
        ifEOE9QNKaECs3Rzt16ly+VmnWDtC7KYYRlktpqvZxKbvZ8tVosUE4ysSsLsgqHxdZCd+CM5xixd
        rNcJjvCxsVomKF6UHUvp3bZNUFfeaGLMvl+wJr6CG28JM1TMhkU56Wx6J+S6CJfcAQDkKJWPZSWc
        YwZDcWjQWbpijo/giAoQD4MtAqkIRPERnD+BVEpulZ0poFIMeyIHKgRyRT/bPfBRQpS5nAUOxtI8
        x+SlZEOKvTOu7HUfhiW4ctQ7GWtBWetPUFOH5SoKFP7kQLkCDg0RxAANsY+NJp5KBKtcT5/BVx6D
        7G7RtK/rDvVW3AlMN0aMNlxP90SOY0OvFwOGb8ACOGpNzIdo7a+pRw6kjlfk38Bv7n2eYz/VJtdj
        Dt7/uaVTNfXAV1knuqopp9/g5V16wHOn/t8c42Q7eMtdi22CB+MMV7uehBmy+IAJGlfQGbNF+6N9
        9wcAAP//AwC6CMZsjwMAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7ce9de973a5f10ea-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sun, 28 May 2023 22:17:53 GMT
      Function-Execution-Id:
      - s47ov1cl9c5p
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '8127'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 504ab4948432e6da671da25768b90f2b
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85981'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.679s
      X-Request-Id:
      - 7c84de8cd9999fdb1c5191e8d674b33d
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"1111 \"\"\"\n\n\nCONCISE
      SUMMARY: The text is best summarized as"}], "temperature": 0, "max_tokens":
      0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '246'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SOMU+EQBQGe3+F+eqFwCFy2e5iYTQWdhbGXJblAXsH+5B9RITw380l6rWTzGRW
        uAoatjVi+6GLipenZanq06NdXumz2R/ezl82zM/zw/dUQoHLE1n5NWLL/dCROPZQsCMZoQo6vd/n
        WbrbFblCzxV10GgGibI4j2QaS46SLEmhMAXTEPSKYeR+kKPwmXyAzgqFa/qKFYTFdP/gLtkUbMvO
        UoB+X9FT+EuO3BE0TAguiPFyGWQv5C/zNU/jLXsKMTaF2nkX2uNIJrCHRhAeoOB8RTN0sn1sNz8A
        AAD//wMAVeojTicBAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7ce9deda1f371145-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sun, 28 May 2023 22:17:56 GMT
      Function-Execution-Id:
      - s47op6g123if
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '474'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 19f4d695b60b19ad5029b363300c752d;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89467'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 354ms
      X-Request-Id:
      - 98ed04dc4cdd232cc3bc51c98d617b42
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["1111 "], "model": "text-embedding-ada-002", "encoding_format":
      "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '84'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7ce9dee20f351070-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sun, 28 May 2023 22:17:56 GMT
      Function-Execution-Id:
      - s47omb5jwa3s
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '21'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - bbf12b57a9e1127c169236e106bc3059
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 0d577f56235a934a68bb6dfede04018b
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "four ones.", "model": "text-embedding-ada-002", "encoding_format":
      "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '87'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7ce9dee5fe2a22dc-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sun, 28 May 2023 22:17:57 GMT
      Function-Execution-Id:
      - s47od9uwfwat
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '256'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - abd7c53861177cc2fdca2588446ea553
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 4e024cc75da38f4059336d9310678141
    status:
      code: 200
      message: OK
version: 1
