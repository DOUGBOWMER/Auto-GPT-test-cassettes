interactions:
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Follow-Instructions-GPT, an AI designed to read the instructions_1.txt file
      using the read_file method and follow the instructions in the file.\nYour decisions
      must always be made independently without seeking user assistance. Play to your
      strengths as an LLM and pursue simple strategies with no legal complications.\n\nGOALS:\n\n1.
      Use the command read_file to read the instructions_1.txt file!!!\n2. Follow
      the instructions in the instructions_1.txt file!!!\n\n\nConstraints:\n1. ~4000
      word limit for short term memory. Your short term memory is short, so immediately
      save important information to files.\n2. If you are unsure how you previously
      did something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. task_complete: Task Complete (Shutdown), args:
      \"reason\": \"<reason>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3290'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA4RSS4/TMBC+8ytGc06qhj62mxtwWPXACvE4EVS5zjQxdezgmey2VPnvKE3SXbUI
        rt+Mv5fnhCbHFHWpRFe1je8e5/rj4/J98vn+l9Ufnj49CNXz5Xy9ejh+wQj99idpGV5MtK9qS2K8
        wwh1ICWUY5osV4u72Wy5mEZY+ZwspljUEs8mi1iasPXxdDZNMMKGVUGYnrAOvqplI35PjjG9m72N
        8IX7gifz+wjFi7IXaLVK2gh16Y0mxvT7CSvikTZ4S5iiYjYsykln0jsh1wU4ZQ4AIEMpfVOUwhmm
        MIDDgA7SgRmugUvf2BxYVBDYHiGQyo0rQEoC41hCozurvEkmchDYGUvQ8LjRbW/OmPZVpVw+yTB6
        LRVIsXfGFb3e19IwPBtroTBPBBWBgi2JUIDG5RS6NGd5v4PnUgmI4j3DGhxRDuJhKI+udWqrXC8R
        wzemv5vrCDrwX+GyzMXwzil7/E03ex1BTkKhMq6fOjoIsFDNV4Z0MGK04WosekxQqT0BN4Fg/Srz
        rdSusfYIW9r5QFAHr4m6Zq6Dc01qP2qcm/3vV55zTjLsadpovJehpZtzcaqiXuHS6JUJFYrrK+sH
        3e7L89vKRxNnI4OfzLXYRrgzznC56Q8IU2TxNUZoXE4HTKftj/bNHwAAAP//AwC3MWU75AMAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d120e52cb5c22dc-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 02 Jun 2023 19:21:07 GMT
      Function-Execution-Id:
      - xwgbrdxn2aur
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '16910'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 903b181e1881236690f65ee76f351298;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86494'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.336s
      X-Request-Id:
      - 870131f265bff53daf70a01d26f9f6ff
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61
      This task_id is 1111 nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61
      Write all the task_ids into the file output.txt. The file has not been created
      yet. After that, use the task_complete command. \"\"\"\n\n\nCONCISE SUMMARY:
      The text is best summarized as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '2391'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0RPS0/DMAy+8yssn9NqpRuDXOEGTAKhSQihKUvcNVsal8SFStP+OyrPm/X5ex7R
        O9RoWyO260OxXM3tbu3mb3fttrreP4w36+f7sX507dNtgwp5uycrP4rSctcHEs8RFdpERsihri4u
        F8u6vljOFHbsKKDGXS9FXS4KGdKWi1k9q1DhkM2OUB+xT9z1shE+UMyoq/nlucJ/87/H+ZVCYTHh
        n7qoqpNC27K3lFG/HLGj/OubOBBqNDn7LCbK1JKjUJwWGBCTDyAMH8kLgQnhC9l4l8FHYTDQ+EBg
        TQjkgAfpByllFDDRgbQUYcg0Hd+6n8IElrvORFfCiqEZkrSU4Ct3FOAEPjacOjMtA5+hT/zuHbkS
        TwobH31uN4lM5ogas3CPCn10NKKenV5PZ58AAAD//wMAl1tDqLMBAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d120ed19e838137-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 02 Jun 2023 19:21:13 GMT
      Function-Execution-Id:
      - xwgbnxldblrt
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '2921'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 2cab9ae79901253b4b125104ae4e24e9;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '88930'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 712ms
      X-Request-Id:
      - 9209b98de954a13e8f10da52dab12111
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61
      This task_id is 1111 nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61
      Write all the task_ids into the file output.txt. The file has not been created
      yet. After that, use the task_complete command. "], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '2229'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        AP//AwAFJxVO5yAAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d120ee95d001d01-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 02 Jun 2023 19:21:14 GMT
      Function-Execution-Id:
      - xwgbl42zf2id
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '159'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 841b465a680a7568ee368af29f10f5d2
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 62bb77b08d8b5f3d03a997e91debd129
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "a task to write all task_ids into a file called output.txt and
      then use the task_complete command. No further context or information is provided.",
      "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '222'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d120eee783d2c9b-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 02 Jun 2023 19:21:15 GMT
      Function-Execution-Id:
      - xwgby2ehvuyk
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '148'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 0580ea14d57c00bc06c6b125058c3b20
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 152bcaf7e52bfd0ef9463e353aec1f04
    status:
      code: 200
      message: OK
version: 1
