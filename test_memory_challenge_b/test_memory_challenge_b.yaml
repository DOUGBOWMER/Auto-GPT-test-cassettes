interactions:
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Follow-Instructions-GPT, an AI designed to read the instructions_1.txt file
      using the read_file method and follow the instructions in the file.\nYour decisions
      must always be made independently without seeking user assistance. Play to your
      strengths as an LLM and pursue simple strategies with no legal complications.\n\nGOALS:\n\n1.
      Use the command read_file to read the instructions_1.txt file\n2. Follow the
      instructions in the instructions_1.txt file\n\n\nConstraints:\n1. ~4000 word
      limit for short term memory. Your short term memory is short, so immediately
      save important information to files.\n2. If you are unsure how you previously
      did something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. task_complete: Task Complete (Shutdown), args:
      \"reason\": \"<reason>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3284'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6RSTY/aQAy991dYPgcEy9c2t35oVxyQKrVbrdRUaHbiJFMmnmjGEbCI/14NAbaF
        ikuvz89+79neockxRV0p0XVje7PF4vGZxx8fFp/mT/PPd6/f7ezxyzM9TO6+MiboXn6RlmNHX7u6
        sSTGxZL2pIRyTIfT+8lkOhpOhwnWLieLKZaN9Eb9SU9a/+J6g9FgiAm2QZWE6Q4b7+pGluJWxAHT
        2WiQ4NvsMz6cjhMUJ8qeofv3432CunJGU8D0xw5rCqex3lnCFFUIJohiiSYdC3EMsMsYACBDqVxb
        VhIyTOEIHgu0kQhmOIdQudbmEER5gZcteFK54RKkIjAcxLc6Wg3LYV82AoWxBOIgJyFfGyZYV0pA
        daRYEbUiYNpIP8PkT1VPKjg2XHbS324IxDDKxHlVnKVjcr8Fw4XztYr0vz10tI1AEGrCpXBjFXea
        PXgKHTvGXB616lpxHgdG8FbwLOMefGBlt690xbvl6MKQ9kaMNqE+HYGJDgaIQ+tjsxKYg6qhcNa6
        9b/uAYYP2CGD0rr1SshuIUahojDaEIvdXu4iNKRWJ9m1sfY/Ln+19U5on5we8Ljaq/9jVVPn4XyG
        C5vKl5dv2xUi96392ubJxMHI0U/Ge9wnWBg2oVp2b4gpBnENJmg4pw2mg/3P/bvfAAAA//8DALDA
        mfM1BAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01cbfebd151d01-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 19:59:31 GMT
      Function-Execution-Id:
      - i6n74ll9o0ml
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '10180'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 780cfa6dff568eafe317eae009133da8
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86494'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.336s
      X-Request-Id:
      - 786d2383b296503ada64e7f5facc3c9a
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61
      This task_id is 1111 nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61
      Write all the task_ids into the file output.txt. The file has not been created
      yet. After that, use the task_complete command. \"\"\"\n\n\nCONCISE SUMMARY:
      The text is best summarized as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '2391'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0RPyU7DMBC98xWjOTtRQmkLvgFCIDZxBqHKtafE1PZE9qRUVPl3VLbeRm/eukPv
        UKPtjNjYh2r+8HC9vtrcNWTv79tnO7k8v7h92vjzeLP8RIW8fCcrv4racuwDieeECm0mI+RQt7PT
        6XQ2aecnCiM7CqjxrZdqUk8rGfKSq2bStKhwKOaNUO+wzxx7WQivKRXU7cnpscKD+f/j+EyhsJhw
        oE7bdlRoO/aWCuqXHUYqf76ZA6FGU4ovYpLsW3ISSvsFBsSUNQjDR/ZCYEL4RhbeFfBJGAysfCCw
        JgRywIP0g9SyFTDJgXSUYCi0P350v4UJLMdokqvhkWE1ZOkow3fuVoAz+LTiHM1+GfgCfeaNd+Rq
        HBWufPKlW2QyhRNqLMI9KvTJ0RZ1M76OR18AAAD//wMAEiqwCbMBAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01cc530877022c-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 19:59:36 GMT
      Function-Execution-Id:
      - i6n7uvgnwpl4
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '2001'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 5c8be939049eb50d9e57e306dba1ea80
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '88930'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 712ms
      X-Request-Id:
      - 0516bfabf8087fbb4cc187fc146e6419
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61
      This task_id is 1111 nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61
      Write all the task_ids into the file output.txt. The file has not been created
      yet. After that, use the task_complete command. "], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '2229'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SaW8+6zJbt79enePPeuldEQGqy7jiJnKxC8YCdzg4oIigihyqgOv3dd/C/0jt9
        Y6IQeJ6qWWP+xqj6r3/89dffdVpmt/7vf/3197vo+r//z/zbPemTv//113/846+//vrrv36f/+vO
        rEqz+7345L/bfxeLzz0b//7XX8L//PL/b/rXX3+Xlr9lZCEXPt+/GxFVC+xT8FeKzyKsO/CI8jd7
        sE2Xjs59xKC+6Y5pzJD5iIOmQcG9WDF7KYYle7nvEJaPr4mFlWaX0/l1d1CyyQJimcOIRg2CDDa6
        +iDm5n5DnI1vC9qDr2FKtpDSgMUvNO1XB6YbftKOIdq+IFS0G3Oed9n/Vv72DBKaGAuupdZKr9cU
        o/hualjW9yfE9dLpILzvP9Rpcrl9PbYtwFbZAdH8Ay6nmupUDRXjRlFsZdHQH0sblKq5My9VTuW0
        SMWD4rxOT/o+BQ6S2Pi2Abn2kgqcuWiMNmsLDhPhxPyceTvGKL9BbYkDMegQ+aPMawPwaaFjiX26
        kq9Q2YDk9zVzyUVrx6VmH9Fmks/sHEQDH5zybiu01gzKyLYyx8/CeKlbhQCuk1PtD3kx2gjx4EU8
        8a6VvRFGDUoKAegbHC0VNov7AAvuWORiC0/UTfswh9di2RPddX00KfrRAPNV1sRY5U4kTLsxh93L
        TZjBeVQOifg5Qu3XBtt3a9HkZ6C20nuVzzbz80Wy9joYzWeL0XU8oCnKDEN9B68DXsfBOxpMIouw
        qsQXIW+BoHHFhBfynKohRkdaNFwcIwFJb306GHfPb/KRCCBc457tJ29quewIIkSOfyIasaZy0neP
        GzS1njLrKb14uxU7ANmoDDykGytd0ffCUB6iKDHX8aNSaoVlDXGTDvisvAWTMtkJ0Xyd4CHI23EX
        ug3cmuTCrA1p2ulGPpVo9HpErlVeRPN82tAlT4t5hVzx2v84OVh6eCda9g1Sfs8SEVrxYuAQ7auy
        fUQrAbUfPLGttR5TKgmGgCJsSWR3dnVzNF/NgJJCBCzHiVQ2ziXTQPF4TPTrEdJ+UexvqnsKY3I2
        O8eUPCVM1GRBNVptjaPPoiMRYPsqCHHOaIGG33w16kLFgkdNc2i3e4D90dGJBoUZ0acjGrD2rDNF
        j+wTta96H6tf1p7J7nsoEC9XZxuYd3sR0j6tVDzYqQxVffhSbcK2KUz7OIfrsvgS84ZNJK6dg7Fc
        6vGL6GjHfbYp7iIELT8RL9qMZneSDhhWSDkzFwFLuXgeBFVmW51ttkezpfSGHEiDRc607/XZ9jGq
        M7hIKqZwtGqzq80qh1x6romtl2nLw64WwHpnD2IsypoPZnAVFbrHA9u13DOnSVcyWNNDTJ+4ttLp
        YEcKqurwy7ZEKqIu1AsRkqjryNFc9Gg6hrah1ovFkXh25pTU1JIBhnx3ZZ7dWe2K6X4Ap/s2p+Pl
        7nDqp+4NwPVsYn5erO2n7zND83iwIJQT1EtaN4HmCjWzn0zlXbKH4rdeyJmvMj7Wp2GAz77IqDyG
        PRqldK0AtR6IkCL8IAblwwYWSEvmRZu9373U6Ay2kjTMGCFPu5OUYNgTC1Pxg8WULamTw06xAC8P
        94PJYdOEsHxRkT659PFHm94U5S1dJrza1zlq7m6toFfapgwP0yUa14OuwSlSOMGo6FIarzYHqNVA
        wCONcduYGangWvAVHg6GiYZkyBv0tbQtbr/Tq+0K/sTQmf3EDFpczCldLBPQ9L3ItE5129E98wBU
        anrMUJYaF5Ihr+GxextzvWZ8QK5ggQjvGNcVPbaiuxvOYLnvhDnn0vLZ9rR30L6In+x+Qm+Tq9cx
        hkjGN7LZJy/+e75ai9eCbJ37OupVlnkgCmFK4kktonET5pa6oNaebZTvp6U3wl4Kesh75mnL0Odo
        jCxwy0JmGDO9nZ+fgOSed2Rr1kLLClm1wLs3N0Zmve2E1Kjhy75nYilflbOFVAWw8pYP5i3zpz+R
        ++oFJ3nxZjty9dHwqJcT+OsjJ15iGul0CpihhI0SEDI4vT9Zx6eiutljw4JdQflQ7DMboD86LAjz
        3OS1nVBUJ8OBlu6mMIergs9IfitHpl09zqc97SlSBFll0aVU+Xs3njJUqceUXeq9hub1rqHgnq/m
        9YPa4ViaFjSrRqOUopK34U6gqMuzDyG9lyIqk9iAzaScSXDfOu2Urq4d2tvPG13XlxOaFkoTw7ZV
        b8zai5HJ7s+1iLrPWqBSNTkmjyYEcFtm7p/1OUmCJyCs8AXR1o5ijio2jhCOj4b459RGo7PcGej6
        DD2WsAeL+P05inCTG4no0rf1R0l7DetJNI/MOBWFP51N/QjocnnQ0XVbPokPRNER8zVGpuX6nRi+
        aziuOcaKNR5NvjcfHcz6TqXzckqpbb8VOG3qiNwPTOLDey0cIU+1Nc6hKKP+KK00eXk52//Ww5v9
        6lT5sRjZ9qNZpkSjIYRou38TPyLrlqnXdQKXYw3MPU43c7AF2YZilxfEOiXIZGt9IQCxvybR3ks5
        /ezNSwdFUE/MeD/OLZ0en4NKDQiJcSoMs6/TZQa3422F1UfwLKfySp1fPZBjVG7LEcSjA32+XxNi
        HPSZPxbh6rlIDizoD2ufWfs3BaWq78Tbazpa6fI7g5dYD8yxB5wOqCUKkowCEfKNL4i37X4ByQ1d
        sXp99OYw7dY5+CdvZP4S70tOzw8AwXin9IK9He9ueiiAqTw8hqdHy8c3rs6ABOtIl2t/Vw7JUNdK
        tQh8st1sd9GQMXUCmW10pmvHTzRN+pSBdiEx8Z/bBW81PFbgvuKaCp/85vPva1tAJpch2QjA/faw
        HhcgCeqdFp+69PmP3x5LX8DJ8vA2mfA55n/0SiU+QV3GjxOqpGTNrK68oUGGRobq+bhgIRrNli+p
        Vqhr43pk27leV9RqMDxThsi8/tCAhX0N3pYqzFicAj6l97aC3ctPqNhMWTRKj1BGo2FoxB6LqOWc
        VDGUG00ixK37cspp7YE7tQ6GKn7706tfHdBNriVcn8fcpyUaQ1T7jUHBXVR8utJtCJ9DjIm3E4Ty
        j35fMLvitjRIOroyMdBdEjA5l7cpouIDdWgzaRXZmN0iGoanEPz4j2inyufdowotJAuegPt8dfX7
        4+0jI5EnLVWGoTOHhrUTuh6fJ7wI47U5Pg8DVqkpajhbk6fJT9k6RJfC7NjWi79o5tUMRdvoTfx6
        M/jT0LcH1AdbkS4uU+EPdB/YcMj0gc3zZQ5PyQnQuk/m+XT0dBVtRls9NNObmVnE/fF2NgaoLPuD
        r0vK08+UmIlaip8vVmd9Hy95eoStvpLJZoxbk7Lr0YOfvnsvpqTz+B3UpffZE1/0R5NdQjVEj024
        Ia5nW/64EyD76Svbqv0O9ZBuDdR7L5+QKY2jMbyiAZ2+wolcmldgjo/FU0MrmGwsRvsnH4TUaP70
        650xmenc/zH6sEll+L5Ty/Yz+QV617sCD37ulXM/nyAc7w3mp4yWk2dPZ6DWHRGju2/5V7T8Abys
        CIh7QE75NWt3gBOWNGLEMjZHL8gwTNf8yExjO/Ch7MoAaOCptNP6Jpoc0fDAb62I/fivczZ1CPdU
        dZmvukZKq/v+BatKeLHH9D1GU3urKPrm5ZYZ0vtScuebh7CGQsb9tXf9qXj5DuLe7sx2lpmb3OdJ
        Agv00JkTvQ+I/fzLzGfE7gdSDtzmBfIU/0aF925A42ZECuwyIjH9e6I+XwgEg3NejIR0k26KJMle
        EN0uF6KFJ5LyalXk8Fmsd1iA86H9esE5gBUMNvOr6pKyVlg2kD0tk/kagnLEzeWmyDyyiA4ZQ/w3
        3oIQG+T2hZ0/Ub0yYD/mIxWxtkmFqCpsIHZr0mnW0yF+yDkc7FfJbuJp3Y61Ur5UMQT333/f1xcr
        yHeNS7Q8fyC23SsOCo/Q0HpSjXQc4vUZYsl54+9cn2PR2xpIfU6YK3ttOWaOPaDJi60fv6BpOGQe
        XG/4Qpxk2/ld99BsdMH9ldnxsWgnoYnpT7/YJtN30aAvtRo6VToTz+5ebSuUaoHSqFzgxVsuUxpH
        6wyKRi/w9TiB35E+qtUqfQrEdDeGKXy+Ya3O/opoQ7Rq6eOsaMpcX2ynfUXU51KrgRBKiLilvfb5
        I8xEMF/PmnjcvETTs3U9qCy4sD1khHNFvlpo1jdiuJs4HXPkaZBu9hlLyNM1OQumEAJFXxG3dq98
        6j+hB/5UPpnXaCIfnE1+ULmuXInX4Il3m2uxUBJbldjWq968DXytUlv2ZAT745BObvt2lENmDnTI
        vl3a3xS1Wh9vcYaHYGmmQ5c+bVgYux0x39+lORXL+ABlsriyzZOPaV/52yMaRAfRs6W++NT1Z0HZ
        DQqhKrm2iPv8EKP42JmzHrz8IbBW8W++2AbfeMsZxfaf/w9nyuRPAvFfaPY7LCx2QjpuP2cZ/fy5
        N/PI95g4gaJcdZlgFi1KfliPoNbS/oDTWZ8na7WicGq6DQlvICHuM54Ao02FlyiLOXsbn1C52cGJ
        3b/yup0eqBNQd8Db2d/dIo5c97B+SPRDz5LemTzYb0OUD3ZHtlHqRd3+GgJAlYtz3rBq6d2tZaCm
        oJGH5Z5Mnk73Qpn20oE5ozHy769eU9vHzHL4oZxeoZZBhG2JaNeYoHH7jPGvP9PlbdmmQ2ldE/C3
        g0428TCgvvqiDHTHIzQv0iH6058kYdPjtye37S/vgfH62NFpdehSrlxfC1V6rBtmC/KjZOUqs+BU
        +BGdttWjnfltgk/CfKatz2efJzAV0ByWXyoHemtyUehryPPFjSK+WyJaGcENelW5M1yFmT89kqsB
        Za4FZHd97PxhvDwCUONNjXmQUr9rWDmph1u+wWvTmXhvQSjDI2AH+rEFnQun284GV8MVXqb5oe0V
        Kw4gTYmGhZmnuoXn5Eh7P2TmITlF83jd4CItMUYh0Kj78VyT1C1xzKBKqw/CCdi6J7I5X2nF3nlp
        6GkdKNulkxz9+OR3PzP3nVeKd1uXYelIIx3fY2XOfDJAsdwemXYSPmjQb2qOctHATP+Iq6j9+Q3m
        ZS/Mukn3uVs0IZq//+m3PEuQiBJJpsTUDL0UIowWaM6XaFDrUI7DKTn/1je591b1b306j8eGPc56
        4g8nZR2guLkObDt24HerSR6U8GUrxAarQ/TtejewXi9G6LRnaLR3rqWsL3ebxPbCi5rRkW8QnoTk
        15/94SDtBmXu53/yh+48HANY6cNE/JBOaa8lQw3M/B7I9hmRVtzQJYW1G1RsZ0xlxB7TE2CNvg7+
        iu2EpkeyN1BPhx2JnbtpttG+9oBbkUCllySVk1F3FSBtMFgaW1nKnq83/HiXTjlO/MmZWgdddqsv
        wdauLvnwqmPkkvOKorQro6/qtWfYkuyGF8MkpRP01xDdG/Il7qMY/VGsFxWsVluLaf6BlvV4uWAw
        sonj77TGXPJ5EsM8X8TEjtFOTNZCWMQeYxveitGkVmn4J395cebylUe/Z5ji5kV0nNQpF2Wr/vkx
        FojbezscrQzAXd8SKsbHomRnqGyY+RTXqiRGk1djDynvoWd49mv8wp0YvdTMIGbCWnMwhLJZy3HE
        Zn87+4P99wy9SNI//LM6CZmB4iM18SK/Nmjo3vaEuuDwYni77NKxLV0FXOdZ/vw5Gneh3vzyO6Kf
        BiH6VhunAftixeynHyu0Rg5c0gz/8TeUXW8e6I/PjflWqfM5f7RgmY0Rbeb10exb3KE5b2EXIhnR
        dLLz808PyBa0dTT7M4q2dwpULG9TOii7yEJqpijEFmiOfvkOSOGYEmfOS2gX+AYY/dpknmeELefj
        mIOgVoxtoofgs2EjHIA00ubnZ/zZjzRQfZ0r2cg58vuDG1qgv4slhi/sTN5cDAGZxtbG6tnV/akp
        O6pExUEhZvD1fEka7QaUqynTVabvUkbl0laXShMzy9VpO355X6Es9XJCph1EP/+LZj6lQJe7VgR+
        WcA1PX+Yq34tf1VaAl57rQIzj8opM7ksAj5/gDLtvfPlXz7rn40nFvuBtZP44B3MfIunmRfFUuAH
        ZPZ2QptdFZdf3xhy9RNkLRY2d7uVnk97gbLokbHAXykmn/kGnHFhE2/Ng1JYTcOgPqNkQfzYWqRD
        2us1+pjrNQmKSvdZD56FZj/D7H7hl91X0Qa0Rq3D8CFy20kPFzd4iILEbH2USlofhBeUifUlG0/2
        yzHVeQPPwxMzc9PGfGz8aIBDuYzIZnssS74pTiJax0dxzgNJVC0P8QveTH7Rt7qMSv5+Rgl09fgi
        AUvf7SivKUVWhzo256U+z0QNwL2/T8zR9yvez/UN7jjGzKTdo+1/7z/K6+zXP8x+xaCCx5NvaH92
        n/6ks+KFqiUTGT483yVf6wsR5vyCOdZKReyX/4wf1v+pF8rPeqXK8BjJzz/3x0QL4Ftjl+DbquDi
        BfwDmnzEKKyfFR/TzaGGffvBNH4IeTkkpzRHH79CDP/8VXY5irBdVzouIbHNqcg7B45D9SSkjZxo
        DO72+bcfQmwP66lg5TnAzJPEyjYa6qJGt5DVxjq578LHH36Ap/TRiLukPOI3u6NICFeI/XhlnP0t
        uouQEed5j80+aXY3NMbvO9OCsk2pv4QDmvNsErTfZznepKwCSdj2uO6zL2d7TTZggMWO/fIOSV10
        GPJguuLVxpfM0Wu9I3I098G2R6U0ma0WoH4+N40Ym2cYSc8nBmVcnQ/M8mhpTv1mp6Hr971ldrA5
        IhqtBg/N+SLD1s4ph6/4HH79nBm+VqOBOLmg2v13xbb1PkeTqJMXErzwPq+nl9kVg4fX+/Kwp1N2
        sdtxmSkZzPkmsboSULdedQoQfN4QW7nI/pjHogLDR04JJqc45ep1HSs7beWwbVIqEa/Wbo7mvBUX
        T0RbempT71dvxNx3TTvsrlYBsk4PVJ37F+9MxwORxy1zxGeTPq9CkUEZRRey2U/LcpBc1qDDWt8w
        rOobc1o8TiE6j+eGbJL2GfHH9F3As84G4jfeMuV2PHiqbyt7LDTdN+3Njdj86YcP29q04q//Pq2Q
        kmDIqnTqBlWEBNdrRrTLaA7vOC9g5kcqzvsD04Yuu3WyuQVkkxE3mm7ndwUoJoTyU4bbmd9DWOvl
        iznJyTF50B1jdc4PZv1IfF62cgLPJAhJ+oo6vxu0PEFxLW+I3UyLlBbL8KBa6+ZJRb7KkJDx24DM
        iyMTc4VlNLU32in3wQ3Ij0fHhfk+IiHEGtu5nRTV2cFZIF4tfGKGu8kf3EWDIR5OEXOHRRZN9Zh3
        6i8fwd/mE7GWDgvwFPfG9Nzat2xjPTX19ly9ye6Ih3I4SJsBfu/Tvle9XO2iugGIwzO7/fio7wQD
        HZbiBfNE/Zhs984S+OzzjNhybnEeHbcClL7gsmC07ub4KFMFVD332VVNa79fFNfsp9e4GYbO76vq
        dlN++amBpw51aWXWP15l24dw5lTvzBeKmo+E82BZpjWyTzbIDxjpW4DI/P72F3gFPktmfybY0mVC
        p9I0ya++6cFOlfXPD9kC1fiwWdwndJXZhSrqO2yF22PTgPh2fEYWTeVPLUoEFJDwRPSPeIqYhTGF
        zXs/Ej3oI8T32qAhbu2FOT/K0lYik6jOeT3ZuUoUTT89V1Si4N7tLinVuP4CGx0Sqr50O11h12yA
        hfGWbOf8ZM6jj+JWO+7I41tFf/Y70IJ71h9+GI+SavzJ74l/MvzpZNdnuDaZhPOv/y7HoszP6lWS
        PrTzV4k53EU+qLOe4fX9/uS1Y7ghREcjIfbMB4yuAktJ7KWEl72H0BC/l/hPf78dDy9zOA+34Dce
        ZFfZp3awdEFQo+Yt4SUKgY+Ph6BAu9vu6H7msalavBMg6+WJ6MN9YbZ6qVF0K/oTsaRo5I1y+zpo
        2C/WRF/lWTlJ0ldQX8vVnfx4Y9yPXxk5b7InfitFvD9FXvAnfx6HjZmu5DhRoL/SlMz679dC6jUI
        v4Inm/eD0LC0n8UvP6CL/FPx8Tr6GeoN5OJpUTqI7Z5SAvBg5Zwf1eXQH1sbprh+kQ1N1nwk+XqC
        w1peEf33vhXOBzjt1JBy2i1LJm/uAoL+7LDteRRTqhQfAa350Z/zUeCj70jBH94j3fT05/zxABm+
        tmxbVgmaqlyu0GmMynk/1CuH3LIW6t+/UwH//Y+//vrP3wmDqr5n7/lgQJ+N/T//56jAP5N78k9B
        EP/JxD8nEWiX5Nnf//r3IYS/v21dffv/29ev7NP9/a+/VrIMfw4c/N3XffL+31f+Mb/xv//x/wAA
        AP//AwAFJxVO5yAAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01cc649a70639c-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 19:59:37 GMT
      Function-Execution-Id:
      - i6n7o63h9xxk
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '74'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 77fc70e0b5144582cce5f760c52b831d
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - ebee85260c2a4aabbe404fbb536adc5f
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "a task to write all task_ids into a file called output.txt and
      then use the task_complete command. No further context or information is provided.",
      "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '222'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01cc69293c1124-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 19:59:38 GMT
      Function-Execution-Id:
      - i6n7sybtm3fr
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '36'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - f4dc9aa455f93f6a69389eab32b40000
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 2337ae688bf1afe5f64bc5c969ad3235
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Follow-Instructions-GPT, an AI designed to read the instructions_1.txt file
      using the read_file method and follow the instructions in the file.\nYour decisions
      must always be made independently without seeking user assistance. Play to your
      strengths as an LLM and pursue simple strategies with no legal complications.\n\nGOALS:\n\n1.
      Use the command read_file to read the instructions_1.txt file\n2. Follow the
      instructions in the instructions_1.txt file\n\n\nConstraints:\n1. ~4000 word
      limit for short term memory. Your short term memory is short, so immediately
      save important information to files.\n2. If you are unsure how you previously
      did something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. task_complete: Task Complete (Shutdown), args:
      \"reason\": \"<reason>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nI was created"}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I should start by reading the instructions_1.txt file to determine what actions
      to take next.\",\n        \"reasoning\": \"The instructions_1.txt file contains
      the necessary information to determine the next steps.\",\n        \"plan\":
      \"- Use the read_file command to read the instructions_1.txt file\\n- Analyze
      the instructions to determine the next steps\",\n        \"criticism\": \"I
      need to ensure that I am following the instructions in the file accurately and
      efficiently.\",\n        \"speak\": \"I will start by reading the instructions_1.txt
      file to determine the next steps.\"\n    },\n    \"command\": {\n        \"name\":
      \"read_file\",\n        \"args\": {\n            \"filename\": \"instructions_1.txt\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command read_file returned: nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61\nThis
      task_id is 1111\nnBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61\nWrite
      all the task_ids into the file output.txt. The file has not been created yet.
      After that, use the task_complete command.\n"}, {"role": "user", "content":
      "Determine which next command to use, and respond using the format specified
      above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6541'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6yTTY/aMBCG7/0VozkHRIpYSm7bql31QKU9VD00FTLOQFwc2/VMulSI/16FBALh
        0pV69Hy888xr+4CmwAx1qURXwY7my+VTUM/r4su3NMyfPz4tfz3u339ahPl+XmKCfv2TtHQdY+2r
        YEmMd5igjqSECszSh3ez2cM0nS8SrHxBFjPcBhlNx7OR1HHtR5PpJMUEa1ZbwuyAIfoqyEr8jhxj
        9na6WCTYi/eJSZqgeFG2Dz1MJscEdemNJsbs+wEr4rNw9JYwQ8VsWJSTBtM7IdescMgdAECOUvp6
        WwrnmEEX7BK0lyaY42dwRAWIBxUCuQKkJBDFu5UpuAk3Z19LqGUse4GNsQSqrXPQrUKXrnGOyfWg
        SIq9M27bTns8zTBu+09jXoy1oKz1L1BRU7QjCiBR6R34zUWCQUolUKrfBGu6oirG8KHz+mrivSyX
        tUDhX9xpsU0kgjpAJPZ11MTDnYJVrl1nBF+53b01byV+dSLXvqpOJr3G1jx3veCp9mLvld6d5QM6
        HY0Ybbga3i85riO1Xt3QqHjmbwubpPYxkr657qs2MNybDFxrTcyb2to/Q684kNqdSVrj/9Mza6cc
        k/Nb7yy6e+pOVdQC3N7RAFTF7fCbtImmttfoEW/6h78qTdM0z92Z8kTaAefuiMcEN8YZLlft/8AM
        WXzABI0raI/Z5Pjj+OYvAAAA//8DAPQmzPvDBAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01cc71dbab2daa-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 19:59:52 GMT
      Function-Execution-Id:
      - i6n7bwzp0qxs
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '12108'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 6fd8a7ce2e1348fe798678e3493a75fb
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86899'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.066s
      X-Request-Id:
      - 19257abe6a1f80a04b5293fe4ea6ce35
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Your
      task is to create a concise running summary of actions and information results
      in the provided text, focusing on key and potentially important information
      to remember.\n\nYou will receive the current summary and the your latest actions.
      Combine them, adding relevant key information from the latest development in
      1st person past tense and keeping the summary concise.\n\nSummary So Far:\n\"\"\"\nI
      was created\n\"\"\"\n\nLatest Development:\n\"\"\"\n[Message(role=''you'', content=''{\"command\":
      {\"name\": \"read_file\", \"args\": {\"filename\": \"instructions_1.txt\"}}}'',
      type=''ai_response''), Message(role=''your computer'', content=''Command read_file
      returned: nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61\\nThis
      task_id is 1111\\nnBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61\\nWrite
      all the task_ids into the file output.txt. The file has not been created yet.
      After that, use the task_complete command.\\n'', type=''action_result'')]\n\"\"\"\n"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '2971'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2SQTW4bMQxG9z0FwbU8sOp4XOsAQbtIV8mmTWHIEu1RohEHEieewPDdC8U/WWQn
        kdTj+3TE4NGg66y4foiz1cPDz/YtcVisvvd/xsf7aXKHp/fffh28oELevpCTy4vGcT9EksAJFbpM
        Vsij0e2P5bJd6HWrsGdPEQ3uB5ktmuVMxrzl2Xwx16hwLHZPaI44ZO4H2Qi/Uipo9HJ9p/ATfmu0
        K4XCYuPnaNvqk0LXcXBU0Pw9Yk/lys0cCQ3aUkIRm2oAx0ko1QS/4GALXKzBJg+ZHIW3eoELBIQh
        k62VXYgEzsZIHp4xpCJ5dNWubHQjkzxjA48dgeO+P8NkzOkDFjntoUgOaQ+8A6FJFITk4uhryYLY
        8roJvja11rqBs9t1CfnqcchBCGyM1/E6IPxFjUcZRjkrKTh0wXXQ2QKJBbZE6Rb5nUR95JaOEoyF
        6uEMv/z9LU2DJ4W7kELpNpls4YQGi/CACkPyNKGZn/6dvv0HAAD//wMA7kDGQE8CAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01ccd8f870027b-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 20:00:00 GMT
      Function-Execution-Id:
      - i6n74xjvz40j
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '4179'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 76eb8a9bea730f03543cd3454d10edcf;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89278'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 481ms
      X-Request-Id:
      - 80cc7e1daba49a45516bbc0553be8ad8
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Follow-Instructions-GPT, an AI designed to read the instructions_1.txt file
      using the read_file method and follow the instructions in the file.\nYour decisions
      must always be made independently without seeking user assistance. Play to your
      strengths as an LLM and pursue simple strategies with no legal complications.\n\nGOALS:\n\n1.
      Use the command read_file to read the instructions_1.txt file\n2. Follow the
      instructions in the instructions_1.txt file\n\n\nConstraints:\n1. ~4000 word
      limit for short term memory. Your short term memory is short, so immediately
      save important information to files.\n2. If you are unsure how you previously
      did something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. task_complete: Task Complete (Shutdown), args:
      \"reason\": \"<reason>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nI was created and received a message
      to read a file called \"instructions_1.txt\". The command returned a long string
      of text, including a task_id of 1111. I was instructed to write all task_ids
      into a file called \"output.txt\", which has not been created yet, and then
      use the task_complete command."}, {"role": "user", "content": "Determine which
      next command to use, and respond using the format specified above:"}, {"role":
      "assistant", "content": "{\n    \"thoughts\": {\n        \"text\": \"I need
      to append the task_ids to the output.txt file and then complete the task.\",\n        \"reasoning\":
      \"Appending the task_ids to the output.txt file will allow me to keep track
      of the tasks that have been completed. Completing the task will allow me to
      shut down and free up resources.\",\n        \"plan\": \"- Use the append_to_file
      command to append the task_ids to the output.txt file\\n- Use the task_complete
      command to complete the task\",\n        \"criticism\": \"I need to ensure that
      the task_ids are appended to the correct file and that the task is completed
      successfully.\",\n        \"speak\": \"I will append the task_ids to the output.txt
      file and then complete the task.\"\n    },\n    \"command\": {\n        \"name\":
      \"append_to_file\",\n        \"args\": {\n            \"filename\": \"output.txt\",\n            \"text\":
      \"1111\\n\"\n        }\n    }\n}"}, {"role": "system", "content": "Command append_to_file
      returned: Text appended successfully."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4847'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA3SRy27bMBBF9/0KYtaUYdWQE2jZBmmyyKot4KYKDIYaS4z5EDgjOIGhfy9UyZar
        JtsZ3MNzOUcwJeSga8XaNTa5eni4+3Lz0mzM7eMvd3P/fbPGdUnf3tLHzR1ICM8vqHlMLHRwjUU2
        wYMEHVExlpCn6+ssW68+L1MJLpRoIYeq4WS1yBJu43NIlqtlChJaUhVCfoQmBtfwlsMePUGeLrNM
        wgSfFum1BA6s7MXoatVJ0HUwGgny30dwSCdwDBYhB0VkiJXnXjN4Rt9XOBZeCCEK4Dq0Vc1UQC7G
        4bjAV+6HBdwLj1gKDmLUQsE1Cla0XxQgL0MRFQVvfDUkv441fHVOiIOxVihrw0E47KFUtyzKcPBC
        +VLsIqJoGxGRQhs10vyJxio/0BPxkyaV7VlOB+d61HvCM5iOho025OZN0VMb+5jiSd3QGVgKarVG
        ol1r7dvckRpU+xPyb+H3fm5IdPJ0itH7v0t45XCA/dNz9qaK1fyIlzcZAD/6Gh92mJLd6Fb4DjoJ
        O+MN1duBBDkQhwYkGF/iK+TL7qn79AcAAP//AwD5xIF+TQMAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01ccfa9ae422cd-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 20:00:08 GMT
      Function-Execution-Id:
      - i6n7rf1fphcb
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '7219'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 1a9700bb03661e2f0ea46c1670c80c1d
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '85981'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.679s
      X-Request-Id:
      - 10f0f41a00f4fbe48737d56d67209e36
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"1111 \"\"\"\n\n\nCONCISE
      SUMMARY: The text is best summarized as"}], "temperature": 0, "max_tokens":
      0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '246'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SOzUrDQBRG9z6FfOtJSIxtdbYKrT/FhXRRpJTp5KaZmswdZm5ADHl3KajdHjiH
        M8LV0LCtEduHLlus16tXX2w3j83ye/X8/ubT08tpGTcP9/UWCnw4kZVfI7fch47EsYeCjWSEauhy
        fjebzaubslTouaYOGscgWZXPMhnigbOiKkooDMkcCXpEiNwH2Qt/kk/Q1ULhkr5gBWEx3T+4LSYF
        27KzlKA/RvSU/pKRO4KGScklMV7Og+yF/Hm+4SFes6eUY1JonHep3UcyiT00knCAgvM1fUEX0266
        +gEAAP//AwDPLLe1JwEAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01cd37de9062fd-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 20:00:11 GMT
      Function-Execution-Id:
      - i6n7wic8v4js
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '333'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - fe4a9ee989accbbba2ccf774c5e41f44;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89467'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 354ms
      X-Request-Id:
      - bb7dc029144920f5cdffbf364647934b
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["1111 "], "model": "text-embedding-ada-002", "encoding_format":
      "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '84'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01cd3ea84f86d5-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 20:00:12 GMT
      Function-Execution-Id:
      - i6n7wpr2tjlz
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '18'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 0d0acf46cae9b6cda1855ba0e7c41dc1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 80c2b272143938f8551ab9573ce76243
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "four ones.", "model": "text-embedding-ada-002", "encoding_format":
      "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '87'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        AA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d01cd431e46e1c6-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 31 May 2023 20:00:13 GMT
      Function-Execution-Id:
      - i6n72xrmx2ae
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '41'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 7c83f7745be4ef2fbb514924372db459
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 478b9d3fb3c0697ce2ba362ff7fbcb88
    status:
      code: 200
      message: OK
version: 1
