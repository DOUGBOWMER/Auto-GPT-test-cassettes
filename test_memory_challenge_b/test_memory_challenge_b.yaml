interactions:
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Follow-Instructions-GPT, an AI designed to read the instructions_1.txt file
      using the read_file method and follow the instructions in the file.\nYour decisions
      must always be made independently without seeking user assistance. Play to your
      strengths as an LLM and pursue simple strategies with no legal complications.\n\nGOALS:\n\n1.
      Use the command read_file to read the instructions_1.txt file\n2. Follow the
      instructions in the instructions_1.txt file\n\n\nConstraints:\n1. ~4000 word
      limit for short term memory. Your short term memory is short, so immediately
      save important information to files.\n2. If you are unsure how you previously
      did something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. task_complete: Task Complete (Shutdown), args:
      \"reason\": \"<reason>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3284'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA4RSS2/bMAy+71cQPNtBjDRN5ltvLQZ0h24rsHkIFIm2tcqSJ9Fr0sD/fVAcp4NT
        dNePj+9BHlArzFHWgmXTmnR1//nPy/fb7cPNx0fL9Scy39rr9f2DN7ePChN0218k+TQxk65pDbF2
        FhOUngSTwjy7Xi/XWba6WiXYOEUGc6xaThezZcqd37p0vphnmGAXREWYH7D1rml5w+6JbMB8tcgS
        fN19xrPlIkF2LMwZWq+v+gRl7bSkgPmPAzYUxrXeGcIcRQg6sLAcRTrLZKOBQ2EBAArk2nVVzaHA
        HE7gqUA7jmCBdxBq1xkFgYVn2O7Bk1DaVsA1gbaBfSej1LDJZrxjKLUh6MLYEbs3R0y6phFWzQpM
        /qXyJIKz2lYD35eaoNQ+MASmFnQAdtBZRT76UBesEMHnWnBs9fS7054UuBIamjK1RtiBJIWvgd6W
        F+ki+J69orAp3Fhh9i/0tiBFTL7Rdihb2g12wkSR9Jq11KEZs7ZERwVkQ+fjsGC4g7IzZv9uCFsq
        nSdovZNEw3XchHqaRmhJPI28z9qY/1/4aH5W4LCmT8Y3OkV38UVWNDQwnGOeiBC+mj7fUIi9r+OX
        dxhFHIWc9BS2xz7BUlsd6s3wV5hjYNdigtoq2mE+73/2H/4CAAD//wMATmXVM/sDAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d1980fcbe176332-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sat, 03 Jun 2023 17:02:41 GMT
      Function-Execution-Id:
      - ggzhal5k5r2p
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '14111'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 9f23ee52b7c9b5187692c8ed925c3b34;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86496'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.336s
      X-Request-Id:
      - 18d48277fc6c1840f58ba01b5995c8c8
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61
      This task_id is 1111 nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61
      Write all the task_ids into the file output.txt. The file has not been created
      yet. After that, use the task_complete command. \"\"\"\n\n\nCONCISE SUMMARY:
      The text is best summarized as"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '2391'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0RPS08CMRC++ysmcy4bFuRhr8REPUA0nDSGlHaWrXQ7m3ZWSMj+dwOi3CbffM8T
        eocabW3ENm0YzJarw/P71D+t1m+5sotcravHxWuVZuOXDhXy9ousXBWF5aYNJJ4jKrSJjJBDXU7n
        k3lZzqZThQ07Cqhx18pgXEwG0qUtD4bjYYkKu2x2hPqEbeKmlY3wnmJGXd7PRwpv5v+P0YNCYTHh
        Rp2UZa/Q1uwtZdQfJ2wo//kmDoQaTc4+i4lybslRKJ4XGBCT9yAMh+SFwIRwQTbeZfBRGAxUPhBY
        EwI54E7aTgo5CpjoQGqK0GU6H7+6a2ECy01joitgyVB1SWpKcMk9CnACHytOjTkvA5+hTfztHbkC
        e4WVjz7Xm0Qmc0SNWbhFhT46OqIe9p/93Q8AAAD//wMAeWovQLMBAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d198171e89b1046-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sat, 03 Jun 2023 17:02:48 GMT
      Function-Execution-Id:
      - ggzhplzz2rq3
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '2663'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 4e3f62a04df874562d0c3f569e92bb9a;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '88930'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 712ms
      X-Request-Id:
      - adcc0acd647a4098584170cbbbc28456
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61
      This task_id is 1111 nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61
      Write all the task_ids into the file output.txt. The file has not been created
      yet. After that, use the task_complete command. "], "model": "text-embedding-ada-002",
      "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '2229'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        AP//AwAFJxVO5yAAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d19818bba12e271-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sat, 03 Jun 2023 17:02:50 GMT
      Function-Execution-Id:
      - ggzhqad3twt1
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '206'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 4135e04109ea570054f75c67b614634b
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 3edd3d8dfcab4708b42c0b28b2a40221
    status:
      code: 200
      message: OK
- request:
    body: '{"input": "a task to write all task_ids into a file called output.txt and
      then use the task_complete command. No further context or information is provided.",
      "model": "text-embedding-ada-002", "encoding_format": "base64"}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '222'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        //8DAFIO77PjIAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - private
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d1981944d6a115a-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sat, 03 Jun 2023 17:02:51 GMT
      Function-Execution-Id:
      - ggzh7yml1dg4
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '24'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - baeead626b2ffc20ac6498dab1e54e28
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3000'
      X-Ratelimit-Remaining-Requests:
      - '2999'
      X-Ratelimit-Reset-Requests:
      - 20ms
      X-Request-Id:
      - 8e263b35dd882ea777514207a6f74733
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are Follow-Instructions-GPT, an AI designed to read the instructions_1.txt file
      using the read_file method and follow the instructions in the file.\nYour decisions
      must always be made independently without seeking user assistance. Play to your
      strengths as an LLM and pursue simple strategies with no legal complications.\n\nGOALS:\n\n1.
      Use the command read_file to read the instructions_1.txt file\n2. Follow the
      instructions in the instructions_1.txt file\n\n\nConstraints:\n1. ~4000 word
      limit for short term memory. Your short term memory is short, so immediately
      save important information to files.\n2. If you are unsure how you previously
      did something or want to recall past events, thinking about similar events will
      help you remember.\n3. No user assistance\n4. Exclusively use the commands listed
      below e.g. command_name\n\nCommands:\n1. append_to_file: Append to file, args:
      \"filename\": \"<filename>\", \"text\": \"<text>\"\n2. delete_file: Delete file,
      args: \"filename\": \"<filename>\"\n3. list_files: List Files in Directory,
      args: \"directory\": \"<directory>\"\n4. read_file: Read a file, args: \"filename\":
      \"<filename>\"\n5. write_to_file: Write to file, args: \"filename\": \"<filename>\",
      \"text\": \"<text>\"\n6. delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7.
      get_hyperlinks: Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary:
      Get text summary, args: \"url\": \"<url>\", \"question\": \"<question>\"\n9.
      list_agents: List GPT Agents, args: () -> str\n10. message_agent: Message GPT
      Agent, args: \"key\": \"<key>\", \"message\": \"<message>\"\n11. start_agent:
      Start GPT Agent, args: \"name\": \"<name>\", \"task\": \"<short_task_desc>\",
      \"prompt\": \"<prompt>\"\n12. task_complete: Task Complete (Shutdown), args:
      \"reason\": \"<reason>\"\n\nResources:\n1. Internet access for searches and
      information gathering.\n2. Long Term memory management.\n3. GPT-3.5 powered
      Agents for delegation of simple tasks.\n4. File output.\n\nPerformance Evaluation:\n1.
      Continuously review and analyze your actions to ensure you are performing to
      the best of your abilities.\n2. Constructively self-criticize your big-picture
      behavior constantly.\n3. Reflect on past decisions and strategies to refine
      your approach.\n4. Every command has a cost, so be smart and efficient. Aim
      to complete tasks in the least number of steps.\n5. Write all code to a file.\n\nYou
      should only respond in JSON format as described below \nResponse Format: \n{\n    \"thoughts\":
      {\n        \"text\": \"thought\",\n        \"reasoning\": \"reasoning\",\n        \"plan\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n        \"criticism\":
      \"constructive self-criticism\",\n        \"speak\": \"thoughts summary to say
      to user\"\n    },\n    \"command\": {\n        \"name\": \"command name\",\n        \"args\":
      {\n            \"arg name\": \"value\"\n        }\n    }\n} \nEnsure the response
      can be parsed by Python json.loads"}, {"role": "system", "content": "The current
      time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system", "content": "This
      reminds you of these events from your past: \nI was created"}, {"role": "user",
      "content": "Determine which next command to use, and respond using the format
      specified above:"}, {"role": "assistant", "content": "{\n    \"thoughts\": {\n        \"text\":
      \"I should start by reading the instructions_1.txt file using the read_file
      command.\",\n        \"reasoning\": \"The first step is to understand the instructions
      and what is required of me.\",\n        \"plan\": \"- Use the read_file command
      to read the instructions_1.txt file\\n- Analyze the instructions and determine
      the next steps\",\n        \"criticism\": \"I need to ensure that I fully understand
      the instructions before proceeding to the next steps.\",\n        \"speak\":
      \"I will start by reading the instructions file.\"\n    },\n    \"command\":
      {\n        \"name\": \"read_file\",\n        \"args\": {\n            \"filename\":
      \"instructions_1.txt\"\n        }\n    }\n}"}, {"role": "system", "content":
      "Command read_file returned: nBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61\nThis
      task_id is 1111\nnBRNtp3FaBNfBMohNkyAxrVJ7UFF0lyth8Xizm1jrCOREOGRnWWMQ6olKtKX9niq0wOBTQN62ToY4cQPiQk3YN9fFCGmxaDX9g81AsqhQnGac72QfL41SnlJvhwgAUB52zTD26FeEvvHdiQ2aNhtMT9obgHNUkONEnO41EOpNI6jdwyLGaactp9GYV1PLbaRP5b1iD9z850KeNYDX9Qwca79isJS8jhuDkf0J7ELkpOH3PkmZkg5MsOYpSTuEc99ENQ522WJzrl9oAySp6IHGiQlsMnQe40FaRAvnQtiaAE24hzkJHT3x13NPGw2ZmJ518y2BtU5x1yQwG21NycSxOBLU17RnY8h6H8L7QGatTlfXjPrA5hsupWEpUT0sSTZYSHa6p3mShARajocbNd3xKFfnUyupNMBPd0EZnMrePoAuvGaK7gDP0cxp9k63lsfzh3udQPnvgmRERQThIOrrDZhZMa4kr1vXAVu07ZuhlNNbBUqZKcHmBYiBnIcDXNUvXuzPFBh9Vowou6MBJHpiNrvKluHy7GBTp7YsEqmGv0lH8wVaWfV0yG7nzrbt7QyhdbtQ0zF2PclXB0LNxV2rRA6FsevqoexFNqSkdgauUrQPHLHhvLNes8gRGMOLAhR8irH1e2jdbLD6dyYEnDJiS9HvlxNgbb19Smlt6MNoJKEAbkSOrrcq5wmo5aho4zEKTujRHqr6feECaTPF7zj69pQCudo4LkneFVUp1UrR6yicTU8Zf9ohZLWumvMi5brH8lOJiiF94cHzesfQz8PiX5f21RwZ5fyRSk9eJhVihcTLrjOwCuryXpy8eCfk12bgcsZoJd8Uqo001XTsv2CEn59uaGn2br4CxSXJgjxKE1mO4IcPPAx3qJbVknaP0MXdOjj9S8oRjquDle4RxlVnmqsozm4oTbjtFSuKIh8g4zPzdyuVH7I71s87xWxAhcppky6GOB2i4NDz4SZI6SeG3Icpu6ZuJZGeZ6CWb61\nWrite
      all the task_ids into the file output.txt. The file has not been created yet.
      After that, use the task_complete command.\n"}, {"role": "user", "content":
      "Determine which next command to use, and respond using the format specified
      above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '6483'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        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
        AA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d19819f19a110d3-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Sat, 03 Jun 2023 17:04:19 GMT
      Function-Execution-Id:
      - ggzhtiwrby0h
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '85741'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - dd4196e26a04482edfcec90c1e71c30e
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86905'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.063s
      X-Request-Id:
      - a5f71f72f94d037eeef3de47395805be
    status:
      code: 200
      message: OK
version: 1
