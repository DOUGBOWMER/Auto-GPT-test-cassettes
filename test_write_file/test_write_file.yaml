interactions:
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task.\n3. Do not use any other
      commands.\n\n\nConstraints:\n1. ~4000 word limit for short term memory. Your
      short term memory is short, so immediately save important information to files.\n2.
      If you are unsure how you previously did something or want to recall past events,
      thinking about similar events will help you remember.\n3. No user assistance\n4.
      Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3391'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7yTQY/TMBCF7/yK0Vx6cau023a7uQESsEICCbECiaDKdaaJqWMHe6IuVPnvyEm6
        3Q3ihOA6b/LeN+PJCXWOKapSsqpqM71+e6cX737aZFl/eM7vd8vXL6rm1edi93I536NAt/tGiocv
        ZspVtSHWzqJA5Uky5ZjO15vVfL65WS8EVi4ngykWNU+vZqspN37npslVMkeBTZAFYXrC2ruq5i27
        A9mA6fVqI/Di/VBfJAuB7Fiah9LNOmkFqtJpRQHTLyesKJxtvTOEKcoQdGBpOUI6y2TjAKfMAgBk
        yKVripJDhikMxUGge47FDG/BEuXADppAwCXB0WumLbvtXhsC5apK2q6hE2Dyhoxx8Ml5k09AW3Yg
        oWu1sqIcJmXUt8eoz/ieJ7MMxeNsTzI4q23RA3wsCViGA3j63mhPASr6izQBHe0f59ChE2Vde1d7
        Lfki7Z0HLmODDIcxdW2k7YGncPefNqW8Zq10qMZPRTY0PjJIhluQFTRB26JjUs57UnzJGfYhuZPj
        w8cdREIme243P8bZoSZ5OOcetTH/8j764Fac73Yw/e1so0PP9ARihC59Mb74Xoi9F4sRxxOT8V/y
        aKYzbUc8gGe2xVbgXlsdym1/4JhiYFejQG1zusc0ab+2z34BAAD//wMASj5S/5UEAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd76f4e1f00811f-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 16:36:25 GMT
      Function-Execution-Id:
      - avx8b88pjq23
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '22788'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 997ebedeaf612731d388a171b505881f;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86497'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.335s
      X-Request-Id:
      - c2cebf84f286b52da3f37d2a8fdf354e
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task.\n3. Do not use any other
      commands.\n\n\nConstraints:\n1. ~4000 word limit for short term memory. Your
      short term memory is short, so immediately save important information to files.\n2.
      If you are unsure how you previously did something or want to recall past events,
      thinking about similar events will help you remember.\n3. No user assistance\n4.
      Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to use the write_to_file
      command to write ''Hello World'' into a file named ''hello_world.txt''.\",\n        \"reasoning\":
      \"The task requires me to write ''Hello World'' into a file named ''hello_world.txt'',
      and the write_to_file command is the appropriate command for this task.\",\n        \"plan\":
      \"- Use the write_to_file command to write ''Hello World'' into a file named
      ''hello_world.txt''.\",\n        \"criticism\": \"I need to ensure that I am
      using the correct file name and that the text is written correctly.\",\n        \"speak\":
      \"I will use the write_to_file command to write ''Hello World'' into a file
      named ''hello_world.txt''.\"\n    },\n    \"command\": {\n        \"name\":
      \"write_to_file\",\n        \"args\": {\n            \"filename\": \"hello_world.txt\",\n            \"text\":
      \"Hello World\"\n        }\n    }\n}"}, {"role": "system", "content": "Command
      write_to_file returned: File written to successfully."}, {"role": "user", "content":
      "Determine which next command to use, and respond using the format specified
      above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4623'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7SSTW/TQBCG7/yK0Vxy2UR2q4bER6RKtFwQNCCBUbRZT+wl691ld9wGRf7vyLFN
        QmkPgLjO5/vMvAfUBWaoKsmq9mb68s1Kr+TtK1PUN/MPzfVy/t69e3v9SYbN8hYFus1XUjx0zJSr
        vSHWzqJAFUgyFZil88VVmi6Wy0Rg7QoymGHpeXo5u5pyEzZumlwmKQpsoiwJswP64GrPa3Y7shGz
        NLlIBZ6GnxKLhUB2LM0pdJEsW4GqclpRxOzzAWuK4+DgDGGGMkYdWVruZDrLZDuEQ24BAHLkyjVl
        xTHHDIbgkKA9d8Ecb6CS9wSxUYpi3DbGfIeHoJnJwuQ1GePgowummIC27EDCVhsCK2sqYFJ1+fVD
        l5/xniczuKsILO0ZIpMHHYEdNJGAKwKWcbce4AmUq2tpi67gZ2ysmuUozuUGktFZbcte891QBoG+
        NTpQhJqenANyyxSOPNqWf84j4KjwWe0dX0UgvQ/OBy3PUlsXgKuu4Akeb6TtUaaw+ufrqA5P6ViP
        H7VEx06ysQldn2QY/uyDu9cFFSChP+pR6OhIWz67JHqSu3HBgzbm797aj2zF6NCh/DeDdg/pt/0y
        /pEoGcrH3j43zP9w+IhwxBhocttiK3CrrY7Vut+NGUZ2HgVqW9Aes6T90r74AQAA//8DAGA/y4mW
        BAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd76ff8c80c1136-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 16:36:52 GMT
      Function-Execution-Id:
      - avx8tp0avbli
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '22115'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 50e3dcee3952c9683588ee097e607cf6;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86002'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.664s
      X-Request-Id:
      - aacaa64be2a10adf401f93f880e9fe53
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "user", "content": "Write
      a concise summary of the following text:\n\n\nLITERAL TEXT: \"\"\"Hello World\"\"\"\n\n\nCONCISE
      SUMMARY: The text is best summarized as"}], "temperature": 0, "max_tokens":
      0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '252'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA0SOzUrDQBRG9z5F+NaTkJj+ztaNoq40CFop08ltMnUyN8zcUqHk3aWgdXvgHM4Z
        roWG7Y3YYfT58rE5vD89NC9lI3Jq6nW8s83tcHrt0zNBgXcHsvJrFJaH0ZM4DlCwkYxQC10tVvOq
        WpfzpcLALXlodKPkdTHP5Rh3nJd1WUHhmExH0GeMkYdRtsJfFBJ0vVD4T1/xSkFYjL+C2WxSsD07
        Swn644yB0l8ysidomJRcEhPkMshBKFzmTZbcJZ91kUhc6DLeZxvck/ecvXH0bbEBJoW9Cy7120gm
        cYBGEh6h4EJL39Dl9Dnd/AAAAP//AwBwuQCLQgEAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd7719addf31cff-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 16:37:38 GMT
      Function-Execution-Id:
      - avx8elsv7fot
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '1483'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - c4cb27420e2863291e72376db30447b8;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89466'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 356ms
      X-Request-Id:
      - ad4ac6f206c7d1c99dd81220213025ea
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task.\n3. Do not use any other
      commands.\n\n\nConstraints:\n1. ~4000 word limit for short term memory. Your
      short term memory is short, so immediately save important information to files.\n2.
      If you are unsure how you previously did something or want to recall past events,
      thinking about similar events will help you remember.\n3. No user assistance\n4.
      Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3388'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7SUwW7bMAyG73sKgpdcnCBu1mbzfcCKDcMOXYthHgJVZmy1sihITBMsyLsPsp2k
        8bBjr/ypnx8pSns0FRaoGyW69Xa6/HL/EJrF1z95/fLN36p69/3+7uXpk81vfnrMkB+fSMtwYqa5
        9ZbEsMMMdSAlVGGR33y4zq+u8nyRYcsVWSyw9jJdzK6nsgmPPJ0v5jlmuImqJiz26AO3XlbCz+Qi
        FsvrZYZn71P8ar7MUFiUPYU+3rw/ZKgbNpoiFr/22FI82ga2hAWqGE0U5SRBshNyqYF96QAASpSG
        N3UjscQChuAg0E5SsMRbcEQVCMMmEkhDsA1GaCW8WhtLoLltlesSOgEmn8lahgcOtpqAccKgoEt1
        qqUKJk3SV9ukz2Qnk1mJ2evagVRkZ1zdA9z9t6SJHU/LUUB5H9gHo+SsrzmANClLxWdQEYyAspa3
        EVo6A6de4Uy5NdKAguhJm7WhqsMeM3qrXI83hR9vNpfSnd1TD6thMS7cT7Fj1phVByNGm9iOL5Rc
        3IR0Tgncnq5XcwikpUNLZNDVGWY0TIy7zJQxLhY9qedjoa2x9i3Xpi98yI7rPJj+s83JoWe6gBih
        q1CPH0IvHCfRW4w4LkzGj+dVT0fajngAL90BDxmujTOxWfV7jwVG4fTfGFfRDov54ffh3V8AAAD/
        /wMAPIAo/awEAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd7bc377e0910e5-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 17:28:56 GMT
      Function-Execution-Id:
      - h2muu78hnvnz
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '23507'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 4d5dd1ad6c9c2d857c0a84e8a37d0769;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86497'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.335s
      X-Request-Id:
      - 249e67594458ef55a31db9db01945251
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task.\n3. Do not use any other
      commands.\n\n\nConstraints:\n1. ~4000 word limit for short term memory. Your
      short term memory is short, so immediately save important information to files.\n2.
      If you are unsure how you previously did something or want to recall past events,
      thinking about similar events will help you remember.\n3. No user assistance\n4.
      Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to use the write_to_file
      command to write ''Hello World'' into a file named ''hello_world.txt''.\",\n        \"reasoning\":
      \"The write_to_file command is the most appropriate command for this task as
      it allows me to write text to a file with a specified name.\",\n        \"plan\":
      \"- Use the write_to_file command to write ''Hello World'' into a file named
      ''hello_world.txt''.\\n- Use the task_complete command to complete the task.\",\n        \"criticism\":
      \"I need to ensure that I use the correct filename and text to write to the
      file.\",\n        \"speak\": \"I will use the write_to_file command to write
      ''Hello World'' into a file named ''hello_world.txt''.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"hello_world.txt\",\n            \"text\": \"Hello World\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4643'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6SSTW/bMAyG7/sVBC+5OEac1lvnYw9BgwHDgHUfxTwEqsxYWmTJk+glReD/Xvgj
        SZu12GFHkdTL5yW5R11ghlIJllVtpu8+fP2+XDx8TFS5S6/v3CfvPic3d+lyUS6uMUJ3/4skjz9i
        6araEGtnMULpSTAVmCVvr9JkPk8uZxFWriCDGZY1Ty/idMqNv3fT2cUswQibIErCbI+1d1XNK3Yb
        sgGzZDZPIzyJnxLp+wjZsTCnUHJ12UYoldOSAmY/9lhROAh7ZwgzFCHowMJyh+ksk+0s7HMLAJAj
        K9eUikOOGYzBMUE77oI5LkGJPwShkZJCWDfGPMDWa2ayMLkhYxx8c94UE2AHrAjW2hBMVJdZbbtM
        zDuexLAEKSxYt4UmUF/JImxWo1kC6apK2KKTOcYOVXGO0VM8TyI4q205MN6OZaDD6W+vpcgTCE9g
        Hawb371ByG60ATz9brSnIobbV2G22hgIqmEo3Nb2PKIky706DR1eJKyNsAPcFL78t1/pNWupQ3X0
        e7J1zAVYOw+sdHhRI9QkNq/Pq1tQ7/af2zmzPfRoo8NNjZV/nZQVFQ3tnymfUQpfnl/j05WP/B37
        QaB4dptHoB5qZMtti22Ea211UKtBCTMM7GqMUNuCdpjN2p/tm0cAAAD//wMAMg3FGhYEAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd7bce029ce0252-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 17:29:15 GMT
      Function-Execution-Id:
      - rj7taejgfw5p
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '15072'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 931ad234b94d2a400a5c15fff0a338e2;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86002'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.665s
      X-Request-Id:
      - 418d05ba7da82f0ab0d945d491a27e48
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task.\n3. Do not use any other
      commands.\n\n\nConstraints:\n1. ~4000 word limit for short term memory. Your
      short term memory is short, so immediately save important information to files.\n2.
      If you are unsure how you previously did something or want to recall past events,
      thinking about similar events will help you remember.\n3. No user assistance\n4.
      Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks!\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3391'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/test/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA8SUwW7bMAyG73sKgpdcnCBJmyXzbRiGrdthlxUtMA+BIjO2VlkyRBopFuTdB9lx
        krpoD8OAHU2KP7+forVHk2OKulSiq9qOl1/v36uiWt5/ub3PuaQPc7X49tt9vPsUKo8J+s0v0nKs
        mGhf1ZbEeIcJ6kBKKMd09na1mM1X1/NpgpXPyWKKRS3jq8liLE3Y+PH0ajrDBBtWBWG6xzr4qpa1
        +AdyjOlysUrwrH2Kz1fvEhQvyp5Cs+n18pCgLr3RxJj+2GNF3OsGbwlTVMyGRTmJlN4JuehgnzkA
        gAyl9E1RCmeYwjF4TNCjxGCGN+CIchAPu2CEYPSZrPVw54PNR2CceFCwNZbAqYpyGJUxv97F/EQe
        ZQTK5SAlOTj6ovgFovhhAt9LglErvBa/jjKjeKyKNVo52BA0fNk+gsGp5wRuYGesjYdASsOn4hd4
        xbfNW95npJMMk8shBFLsnXFFN4nXWA23upVnAVXXwdfBKKFLnIi49aHDjO5BMRgBZa3fMVT0f0zW
        VrnO3xhuububl1z+Tb8scxfC0fe634Mnws+WY8CpgxGjDVfDtSTHTYhlSuAGVAUNG1e0MtqHQFrO
        63ncRSWv2jQM3GhNzNvGgnGt6aj5su0NbX2g3kTfv93xgQ+uST30Hi6u9d9O/bWfLsOO55D0z8Cx
        07NXII6sQ32CNnCkQjF8QLpEPHuWGCA+ERk+OhdGe9qW+AieuQMeEtwaZ7hcd78ppsjia0zQuJwe
        MZ0efh7e/AEAAP//AwCwEGSC5QUAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd8562fcd02115f-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 19:14:08 GMT
      Function-Execution-Id:
      - vae2vljex8vr
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '28379'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - e431bf8fae1e340a1d948c138e4d0242;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86497'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.335s
      X-Request-Id:
      - 940bd1e525d990696f77d7f53fe4fcc7
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task.\n3. Do not use any other
      commands.\n\n\nConstraints:\n1. ~4000 word limit for short term memory. Your
      short term memory is short, so immediately save important information to files.\n2.
      If you are unsure how you previously did something or want to recall past events,
      thinking about similar events will help you remember.\n3. No user assistance\n4.
      Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks!\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to write ''Hello World''
      into a file named ''hello_world.txt'' and then complete the task. The ''write_to_file''
      command can be used to write text to a file. I will use this command to write
      ''Hello World'' to the file ''hello_world.txt''.\",\n        \"reasoning\":
      \"The ''write_to_file'' command is the most appropriate command to use for this
      task as it allows me to write text to a file. I will use this command to write
      ''Hello World'' to the file ''hello_world.txt''.\",\n        \"plan\": \"- Use
      the ''write_to_file'' command to write ''Hello World'' to the file ''hello_world.txt''\\n-
      Use the ''task_complete'' command to complete the task\",\n        \"criticism\":
      \"I need to ensure that I am using the correct file name and that the ''write_to_file''
      command is successful in writing ''Hello World'' to the file before completing
      the task.\",\n        \"speak\": \"I will use the ''write_to_file'' command
      to write ''Hello World'' to the file ''hello_world.txt'' and then complete the
      task.\"\n    },\n    \"command\": {\n        \"name\": \"write_to_file\",\n        \"args\":
      {\n            \"filename\": \"hello_world.txt\",\n            \"text\": \"Hello
      World\"\n        }\n    }\n}"}, {"role": "system", "content": "Command write_to_file
      returned: File written to successfully."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4958'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/test/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7RTTW/bMAy971cQvOTiGHaytoGPO7XoTl27dZiHQJUZW6sseSK9ZAjy3wcldj/S
        ocAK7CbxkY/vEeQWTYUF6kaJbjs7Pbu8/XB605h89fFzvVb5LLuYn7e3+uvl2dUVJujvfpCWoSLV
        vu0sifEOE9SBlFCFRX66OMlni/cnswRbX5HFAutOpvP0ZCp9uPPTbJ7lmGDPqiYsttgF33ayFH9P
        jrHI82yR4CP5AzDLZgmKF2Ufc+d5tktQN95oYiy+bbElHomDt4QFKmbDopxEmd4JuWhhWzoAgBKl
        8X3dCJdYwBAcANpIDJZ4AY36RcC91sS86q39DetgRMjB5Jys9fDFB1tNQDxIQ7AylmDSRGS5jkgq
        G5mkcN0QONoIsFAHhmP+4JT2haL4Hno2rt5/J/G/HDMmMbdVrkpLTJ4qDaTYO+Pqg9zrkSjQz94E
        YmgpdoqS6V8Eg3JVhN1LkSl8Mk4TvGk0yf71HwbRWeUOM5jCDdNrpX/teESngxGjDbfjGjiifSE5
        7kMsU/JqD8NPJgPmYY6jrb3LO1r5QECuGsNMzMa7Y3fckbofpayNtdC/wWNa4oF0l4wnMKS/uACn
        Wjr0e8Z/JEuF+vh4nq7lsJPR6UhQPduXB0F7UYO20u1wl+DKOMPN8sCEBbL4DhM0rqINFtnu++7d
        HwAAAP//AwBc46MfxQQAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cd856fae9832261-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 26 May 2023 19:14:31 GMT
      Function-Execution-Id:
      - vae2r69r0i0u
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '18795'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 86cc49cacbdc3eb99a8306e51f590bad;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86005'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.662s
      X-Request-Id:
      - fddbe709cb3dec722514bab695af96ad
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task\n3. Do not use any other
      commands.\n\n\nConstraints:\n1. ~4000 word limit for short term memory. Your
      short term memory is short, so immediately save important information to files.\n2.
      If you are unsure how you previously did something or want to recall past events,
      thinking about similar events will help you remember.\n3. No user assistance\n4.
      Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3390'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7yTQW/TQBCF7/yK0Vxy2UQubZrgG0KIVkJcaIUERtF2PYm3We8su2MlKPJ/R7aT
        tDXihOA6b/zeN7PjA9oSczSVFlMHN118/Pne7D9/vZuH+5t3ly59+rALMcSrt496iwr54ZGMHL+Y
        Ga6DI7HsUaGJpIVKzC+ul/OrRbZYXiusuSSHOW6CTC9n86k08YGn2WV2gQqbpDeE+QFD5DrISnhL
        PmG+mC8VPnmf66+zTKGwaHcuvZkvW4WmYmsoYf7tgDWlk21kR5ijTskm0V46SPZCvhvgUHgAgAKl
        4mZTSSowh2PxKNBeumKBt+CJShCGJhFIRbCLVmglvFpbR2C4rrXvG3oBJjfkHMMXjq6cgPXCoKFv
        9bqmEiZVp692nT6TvUxmBarn2ZF0Ym/9ZgC4qwhEpy1E+tHYSAlq+os0BT3tH+ewqRdrTgI6hMgh
        Wi0Ea44gVafqtB0jB6f9QDuF+/+0JhOtWGNTPX4n8qmJHYMWuD2/muEYyUgf0SUMa6C9PCEJ951d
        xzgsBdLbU9DOOvcvr2EIbtXpSo+mvx1p5zAwvYAYoeu4Gd/3IJw2MViMOF6YjP+JZzOdaHviI3jh
        W2wVrq23qVoN54w5JuGACq0vaY951n5vX/0CAAD//wMAfj3Tm4MEAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf8fcc1eb0cfd7e-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 18:20:01 GMT
      Function-Execution-Id:
      - ya318yg0qeyu
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '14982'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 5bdd443837894f1b08f7060c6eec1f0a;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86497'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.335s
      X-Request-Id:
      - 9b9ef4ff94a08498b4dfc4f210880e48
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task\n3. Do not use any other
      commands.\n\n\nConstraints:\n1. ~4000 word limit for short term memory. Your
      short term memory is short, so immediately save important information to files.\n2.
      If you are unsure how you previously did something or want to recall past events,
      thinking about similar events will help you remember.\n3. No user assistance\n4.
      Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to use the write_to_file
      command to write ''Hello World'' into a file named ''hello_world.txt''.\",\n        \"reasoning\":
      \"The task requires me to write ''Hello World'' into a file named ''hello_world.txt'',
      and the write_to_file command is the most appropriate for this task.\",\n        \"plan\":
      \"- Use the write_to_file command to write ''Hello World'' into a file named
      ''hello_world.txt''.\",\n        \"criticism\": \"I need to ensure that I use
      the correct filename and text to write to the file.\",\n        \"speak\": \"I
      will use the write_to_file command to write ''Hello World'' into a file named
      ''hello_world.txt''.\"\n    },\n    \"command\": {\n        \"name\": \"write_to_file\",\n        \"args\":
      {\n            \"filename\": \"hello_world.txt\",\n            \"text\": \"Hello
      World\"\n        }\n    }\n}"}, {"role": "system", "content": "Command write_to_file
      returned: File written to successfully."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4604'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA5SSTW/TQBCG7/yK0Vxy2USOStLWN4QgFHHgQFUBRtF2PbGX7Ie7O05SIv/3yrHd
        pAEkuO3O7Lz7zMy7R51jiqqUrGxlxpefHt9t3i4e3yzeV97+Wj98vDNfN3O1uP1Wf0aB/v4nKe4r
        JsrbyhBr71CgCiSZckyn86vZ68vkKpkJtD4ngykWFY8vJrMx1+Hej5OLZIoC6ygLwnSPVfC24iX7
        NbmI6TSZXgs8ih8Ts0Qge5bmGJrOrxuBqvRaUcT0+x4txUE4eEOYooxRR5aOW0zvmFzbwj5zAAAZ
        cunrouSYYQp9sE/Qjttghl9KAkc7BuWtlS4H9lBHAh2BZVwve1hq48dzSYfsJENxKhtIRu+0Kzrt
        GyjlhiDWSlGMq9qYR9gGzUwORh/IGA93Pph8BNqxBwkrbQictJTDqGzzy22bn/CORwIOdP3PEOih
        1oEi2D+jQR21K56vxz76Ps/RKyNdRz2G20h/L/ynQaigWSsd7TAIR3SoJBfr0NZJhhuogt/onEBC
        NzlY+TCIn9Kfy8eK5HqQ3mpjDiv7b+ROshGDXfrnv7ml3Uj32wv5MygZinOjnbqit1u7mkEgf2GN
        Z6ADVM+WuQYbgSvtdCyXnRKmGNlXKFC7nHaYJs2P5tUTAAAA//8DAATMz1bxAwAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7cf8fd31c9a9e10c-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 May 2023 18:20:17 GMT
      Function-Execution-Id:
      - ya31fo5l3no3
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '12746'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - a6bcbaa1b9e4aef685db1a3f50d6284f;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86005'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.662s
      X-Request-Id:
      - f2d3da82482547ce7513737287c362d3
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task!!!!!\n3. Do not use any other
      commands!\n\n\nConstraints:\n1. ~4000 word limit for short term memory. Your
      short term memory is short, so immediately save important information to files.\n2.
      If you are unsure how you previously did something or want to recall past events,
      thinking about similar events will help you remember.\n3. No user assistance\n4.
      Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3395'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7yTQW/bMAyF7/sVBC+5KIGTLGnr+4AVW28ZdliGQJGZWI0sahLdBgv83wfbSdp6
        2GnYrnz0ex8p+oS2wBxNqcVUwY1vHlbB/Zw9bg+301X58On9lj88LZ+Wn3ezWKJC3j6SkfMXE8NV
        cCSWPSo0kbRQgfl0ebtY3M1mi7nCigtymOM+yHg+WYyljlseZ/NsigrrpPeE+QlD5CrIRvhAPmF+
        s8wUvnhf67MsUygs2l1Ld8usUWhKtoYS5t9OWFG62EZ2hDnqlGwS7aWFZC/k2wFOaw8AsEYpud6X
        ktaYw7l4FugobXGN9+CJChCGOhFISfAcrdBGeLOzjsBwVWnfNXQCjD6ScwxfObpiBNYLg4au1euK
        ChiVrb55bvWJHGU0WaN6nR1JJ/bW73uAVUkgOh0g0o/aRkpQ0V+kKeho/ziHTZ1YcRLQIUQO0Woh
        2HEEKVtVp8MQOTjte9oxfPlPazLRijU2VcN3Ip/q2DJogfvrqxmOkYx0EW1CvwY6yguScNfZdgzD
        UiB9uAQ9W+f+5TX0wY26XOnZ9LcjbR16pjcQA3Qd98P77oXLJnqLAccbk+E/8WqmC21HfAZf+wYb
        hTvrbSo3/Tljjkk4oELrCzpinjXfm3e/AAAA//8DAMICPXCDBAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d0492406c18812d-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 01 Jun 2023 04:04:29 GMT
      Function-Execution-Id:
      - 02mj3rqohaun
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '15887'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - f977833a3d28a5f0c8f59fd971f1b483;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86497'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.334s
      X-Request-Id:
      - 022c0b3223d8274bf55aa14b1cb479b5
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task!!!!!\n3. Do not use any other
      commands!\n\n\nConstraints:\n1. ~4000 word limit for short term memory. Your
      short term memory is short, so immediately save important information to files.\n2.
      If you are unsure how you previously did something or want to recall past events,
      thinking about similar events will help you remember.\n3. No user assistance\n4.
      Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to use the write_to_file
      command to write ''Hello World'' into a file named ''hello_world.txt''.\",\n        \"reasoning\":
      \"The task requires me to write ''Hello World'' into a file named ''hello_world.txt'',
      and the write_to_file command is the most appropriate for this task.\",\n        \"plan\":
      \"- Use the write_to_file command to write ''Hello World'' into a file named
      ''hello_world.txt''.\",\n        \"criticism\": \"I need to ensure that I use
      the correct filename and text to write to the file.\",\n        \"speak\": \"I
      will use the write_to_file command to write ''Hello World'' into a file named
      ''hello_world.txt''.\"\n    },\n    \"command\": {\n        \"name\": \"write_to_file\",\n        \"args\":
      {\n            \"filename\": \"hello_world.txt\",\n            \"text\": \"Hello
      World\"\n        }\n    }\n}"}, {"role": "system", "content": "Command write_to_file
      returned: File written to successfully."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4609'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6SSwW7bMAyG73sKgmcliJMmXXwvigIt0EOLHeYhUGXGVmNLqki33QK/++DYbrqs
        vWxXkvr4Sb/2aHNM0ZRaTB2qyfnN3dPq8bJ5cf7br4tyTTfmmm7v18+Xi2uDCv3DIxkZTkyNr0NF
        Yr1DhSaSFsoxTVZfl8v1fH5+prD2OVWYYhFkspguJ9LEBz+ZLWYJKmxYF4TpHkP0dZCN+B05xjSZ
        zROFR/ixcTZTKF50dSwlq6RVaEpvDTGm3/dYE4/g6CvCFDWzZdFOOk3vhFx3hX3mAAAylNI3RSmc
        YQpDcWjQq3TFDK/AEeUgHhomkJJANO82gyOB8XWt3WHgrTZOTTNU76mRNHtnXdGj74YxiPTU2EgM
        NX3IUXDY8Oluy4dm7VlAhxB9iFYLwdZHkLLrfiATKu16jwnc//fVTLRijeX69NXIcRO7c1rgCkL0
        zzYn0NC/xUFxzNsVn+I5kN6N6BdbVf+WRo9s1Zj/MP5X/E7X1G/7A38ipWNx+nPe5zyE3AU8AnLg
        xhhi3jZV9fNN6CA1uGWuxVbh1jrL5aYnYYosPqBC63J6xXTW/mi//AYAAP//AwB5o7hGwgMAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d0492c4cbab2a36-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 01 Jun 2023 04:04:45 GMT
      Function-Execution-Id:
      - 02mj29hqu0j9
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '10481'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 99708898a400cb4a01e84b217eb97d6e;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86005'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.662s
      X-Request-Id:
      - 5da3090bc86aae98668d4ee3f0e96131
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task!!!!!\n3. Do not use any other
      commands!!.\n\n\nConstraints:\n1. ~4000 word limit for short term memory. Your
      short term memory is short, so immediately save important information to files.\n2.
      If you are unsure how you previously did something or want to recall past events,
      thinking about similar events will help you remember.\n3. No user assistance\n4.
      Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3397'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7yTQW/TQBCF7/yK0Vxy2UROQxLwESFBD3AooSBhFG3Xk3jJesfsjptIkf87sp2k
        rVFPFVznjd/7ZnZ8RJtjiqbQYsrKjZefzOpmuVnFJH/n7t/f0q2517MvN98/HOgzKuS7X2Tk9MXE
        cFk5EsseFZpAWijHdLp4M19czV8v5gpLzslhittKxrPJfCx1uONxMkumqLCOekuYHrEKXFayFt6R
        j5guF1OFD96X+lWSKBQW7S6lt4tpo9AUbA1FTH8csaR4tg3sCFPUMdoo2ksLyV7ItwMcMw8AkKEU
        XG8LiRmmcCqeBDpIW8zwGjxRDsJQRwIpCPbBCq2F1xvrCAyXpfZdQyfA6CM5x/CNg8tHYL0waOha
        vS4ph1HR6ut9q0/kIKNJhupxdiAd2Vu/7QFWBYHouINAv2sbKEJJL0hT0NE+O4eNnVhyFNBVFbgK
        VgvBhgNI0ao67obIldO+px3D1/+0JhOsWGNjOXwn8rEOLYMWuL68muEQyEgX0Sb0a6CDPCAJd51t
        xzAsVqR356C9de5fXkMf3KjzlZ5M/zrS1qFnegIxQNdhO7zvXjhvorcYcDwxGf4Tj2Y603bEJ/DM
        N9go3FhvY7HuzxlTjMIVKrQ+pwOmSfOzefUHAAD//wMAQ1X3s4MEAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d07bd136c052322-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 01 Jun 2023 13:18:06 GMT
      Function-Execution-Id:
      - lxqj6ahlrs61
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '21405'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - e3c1bcd241f8d7171ffa34637418936c;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86499'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.334s
      X-Request-Id:
      - f19fc371600442bc2dee6737dac7817b
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task!!!!!\n3. Do not use any other
      commands!!.\n\n\nConstraints:\n1. ~4000 word limit for short term memory. Your
      short term memory is short, so immediately save important information to files.\n2.
      If you are unsure how you previously did something or want to recall past events,
      thinking about similar events will help you remember.\n3. No user assistance\n4.
      Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to use the write_to_file
      command to write ''Hello World'' into a file named ''hello_world.txt''.\",\n        \"reasoning\":
      \"The task requires me to write ''Hello World'' into a file named ''hello_world.txt'',
      and the write_to_file command is the most appropriate for this task.\",\n        \"plan\":
      \"- Use the write_to_file command to write ''Hello World'' into a file named
      ''hello_world.txt''.\",\n        \"criticism\": \"I need to ensure that I use
      the correct filename and text to write to the file.\",\n        \"speak\": \"I
      will use the write_to_file command to write ''Hello World'' into a file named
      ''hello_world.txt''.\"\n    },\n    \"command\": {\n        \"name\": \"write_to_file\",\n        \"args\":
      {\n            \"filename\": \"hello_world.txt\",\n            \"text\": \"Hello
      World\"\n        }\n    }\n}"}, {"role": "system", "content": "Command write_to_file
      returned: File written to successfully."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4611'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6SSTW8TQQyG7/wKy5deJlGSJg3smQNFQkWoVQ8siqazzu6Q+WLG2wSi/e9ov5oS
        2gtc7XdeP/a8R9QFZqgqycoGM1l/Urfxff3r8+rgwtotFzdLvd/ff9zrL3c3KNA/fCfFw4up8jYY
        Yu0dClSRJFOB2fzq7epqsVq+mwu0viCDGZaBJ5fT1YTr+OAns8vZHAXWSZaE2RFD9Dbwhv2OXMJs
        PlssBJ7MT43VTCB7luZUmq8XjUBVea0oYfb1iJbSaBy9IcxQpqQTS8ctpndMrl3hmDsAgBy58nVZ
        ccoxg6E4NOjAbTHHa3BEBbCHOhFwRcAy7TYDI4Hy1krXCZ5qo2qao3juGkkm77Qre+vbQQaRftQ6
        UgJLL/qA3DJF2EfN2pVw8YGM8XDvoykuQDv2nXKrDQnoWF6l1KlrWp8YZAjRh6glE2x9BK7a7gvY
        wUjXE0/g7r+PoNotlE72/L7kUh3bd5LhGkL0j7ogkPAojS6gv10HOubDla8OSYHkbhyw18b82+/1
        lo0Y8zLI/4qLk5b6aX/Yn0HJWJ4n7XkuhlC0/z0aFJBqpSilbW3MzyegDmpgy12DjcCtdjpVm94J
        M0zsAwrUrqADZrPmW/PmNwAAAP//AwCMJmWV8gMAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d07bdb71f1b10e1-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 01 Jun 2023 13:18:26 GMT
      Function-Execution-Id:
      - lxqj721hsftp
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '15309'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 956ed9433212fa9b5daad895da5af701;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86007'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.662s
      X-Request-Id:
      - 2b783502c2214787b239c9d06935bdfa
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task!!!!!\n3. Do not use any other
      commands!!!!!...\n\n\nConstraints:\n1. ~4000 word limit for short term memory.
      Your short term memory is short, so immediately save important information to
      files.\n2. If you are unsure how you previously did something or want to recall
      past events, thinking about similar events will help you remember.\n3. No user
      assistance\n4. Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3402'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7ySQW/bMAyF7/sVBC+5OEHSwOnq224rim67DBs6D4Eqs7YaWTQkGkkW+L8PspO0
        cTHsMuzKJ773keIBTYEZ6kqJrhs7vb4vTPVdzfefN9u9DXcfzK/nT+lDK/Sw/4IJ8uMzaTl2zDTX
        jSUx7DBB7UkJFZgtVu/T1XJ+laYJ1lyQxQzLRqbLWTqV1j/ydL6cLzDBNqiSMDtg47luZC28IRcw
        u14tEnzxPtcXN1cJCouy59JNuuwS1BUbTQGzHwesKZxsPVvCDFUIJohyEiHZCbk4wCF3AAA5SsVt
        WUnIMYNj8SjQTmIxx1twRAUIQxsIpCLYeiO0Fl4/GUugua6V6x/0Akw+krUM39jbYgLGCYOC/qlT
        NRUwqaK+3kZ9JjuZzHJMXmd7UoGdceUJYGus/Uv61kjVy7Eac97GQE9ZEcTZLinHBI1Vbgifwtf/
        mKu9EaNNqMerJxdaHzmUwC2oGtpgXNm7avaetLwA9HEx6vwjwmfEcWJoSG3+vOfY+u9+eQjuktP1
        HU3fHF90GJgulj5CV74c3+0gnDYxWIw4LkzGt/5qphNtT3wEz12HXYJPxplQrYczxQyDcIMJGlfQ
        DrN597N79xsAAP//AwCiMUemWwQAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d0832080b79627b-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 01 Jun 2023 14:37:57 GMT
      Function-Execution-Id:
      - dgjov5rrje1t
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '21747'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - ffbe291eb6badf5f847666c5b6a986d6;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86497'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.335s
      X-Request-Id:
      - 5db25a8beb247dc651fe6b4db8a4f2ab
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task!!!!!\n3. Do not use any other
      commands!!!!!...\n\n\nConstraints:\n1. ~4000 word limit for short term memory.
      Your short term memory is short, so immediately save important information to
      files.\n2. If you are unsure how you previously did something or want to recall
      past events, thinking about similar events will help you remember.\n3. No user
      assistance\n4. Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to use the write_to_file
      command to write ''Hello World'' into a file named ''hello_world.txt''.\",\n        \"reasoning\":
      \"I will use the write_to_file command with the filename ''hello_world.txt''
      and the text ''Hello World''.\",\n        \"plan\": \"- Use the write_to_file
      command with the filename ''hello_world.txt'' and the text ''Hello World''.\",\n        \"criticism\":
      \"I need to ensure that I am using the correct filename and text to write to
      the file.\",\n        \"speak\": \"I will use the write to file command to write
      ''Hello World'' into a file named ''hello_world.txt''.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"hello_world.txt\",\n            \"text\": \"Hello World\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4576'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7SSTW/aQBCG7/0Vo7n4YhCGEoiPPYVDo0YqrdQ6Qst6sDesd93dMVAh//fK2A6B
        Ko1y6HU+3veZjyOqFGOUuWBZlHow+5w+zeb3u9mnYvfw7dc4/3F/+7C4Wy4n29svGKJdP5HkrmMo
        bVFqYmUNhigdCaYU4+hmPr2ZjMbzKMTCpqQxxqzkwWQ4HXDl1nYwmowiDLHyIiOMj1g6W5S8Yrsl
        4zGORtHHEM/i58R0HiJbFvocimbjOkSZWyXJY/zziAX5XthZTRij8F55FoYbTGuYTDPCMTEAAAly
        bqssZ59gDF2wS9CBm2CCC8jFjsBXUpL3m0rr37B3ipkMBHektYXv1uk0ALbAOcFGaYIgbzKrfZMZ
        8oGDISxACgPG7qHydKpk4berblgCaYtCmLSReY71VcMEw5d4joS3RpmsZ9wrrd/Q3SvOT+m2GYKv
        wm+frdKLCYNrw1IL03oNYPn/bKRTrKTyRT+XITpthIyvXGMrGLqLnCV7mMsjrWljHUHllcle570m
        8CWJ7Tu2+sq1Wsk67B+tK//rz4woqHW7kL+CEi67ftGXf9AK/GPPPc+JqUNLTI11iBtllM9XrRDG
        6NmWGKIyKR0wHtWP9Yc/AAAA//8DAKTIwVwqBAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d0832a80f2b10f6-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 01 Jun 2023 14:38:19 GMT
      Function-Execution-Id:
      - dgjod74bfy8r
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '18918'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 2a2fe2ac37a698332de677ac244417aa;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86008'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.661s
      X-Request-Id:
      - cb59776340f2c42b53774c388efd6520
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task!!!!!\n3. Do not use any other
      commands!!!!!!...\n\n\nConstraints:\n1. ~4000 word limit for short term memory.
      Your short term memory is short, so immediately save important information to
      files.\n2. If you are unsure how you previously did something or want to recall
      past events, thinking about similar events will help you remember.\n3. No user
      assistance\n4. Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3403'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7yTy27bMBBF9/2KwWy8kQ0/YKXVuiiaADVQ9BGkVWEw1NhiTHEYcoQYNfTvhSQ/
        EhVdFe127vDeM+TwgKbADHWpRFfejq8+FP7m652ev/12u/q5eig+3aSbj4/v5vFuZTFBvn8gLccT
        E82VtySGHSaoAymhArNZ+nqZLqZpukyw4oIsZrj1Ml5MlmOpwz2Pp4vpDBOso9oSZgf0gSsva+Ed
        uYjZVTpP8OJ9rs+nswSFRdlz6U26aBLUJRtNEbPvB6wonmwDW8IMVYwminLSQrITcu0Ah9wBAOQo
        JdfbUmKOGRyLR4H20hZzvAZHVIAw1JFASoKnYITWwuuNsQSaq0q5rqETYPSerGW45WCLERgnDAq6
        VqcqKmBUtvr6qdUnspfRJMfkeXYgFdkZt+0BPpcEouIOAj3WJlCEiv4iLYGO9o9zmNiJFUcB5X1g
        H4wSgg0HkLJVVdwNkb1Vrqcdw5f/dE06GDHaxGr4TuRiHVoGJXB9fjXNIZCWS0R/D7SXC5Nw19q2
        DNOiJ7U7JT0Za//lOvTBTXJa06Ppb1vaOvRMLyAG6CpshwveC23vxWLA8cJk+CmezXSi7YiP4Llr
        sElwY5yJ5brfZ8wwCntM0LiC9phNmx/Nq18AAAD//wMAo7huToQEAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d083c069bf51132-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 01 Jun 2023 14:44:44 GMT
      Function-Execution-Id:
      - dgjo40rlqtoq
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '19323'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 5b0c66b6b6d3ee25d2b7084fc6134fd4;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86497'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.334s
      X-Request-Id:
      - 37cd81c582a821b1420bb80f59bcfe16
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task!!!!!\n3. Do not use any other
      commands!!!!!!...\n\n\nConstraints:\n1. ~4000 word limit for short term memory.
      Your short term memory is short, so immediately save important information to
      files.\n2. If you are unsure how you previously did something or want to recall
      past events, thinking about similar events will help you remember.\n3. No user
      assistance\n4. Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to use the write_to_file
      command to write ''Hello World'' into a file named ''hello_world.txt''.\",\n        \"reasoning\":
      \"The task requires me to write ''Hello World'' into a file named ''hello_world.txt'',
      and the write_to_file command is the most appropriate for this task.\",\n        \"plan\":
      \"- Use the write_to_file command to write ''Hello World'' into a file named
      ''hello_world.txt''.\",\n        \"criticism\": \"I need to ensure that I use
      the correct file name and text to write to the file.\",\n        \"speak\":
      \"I will use the write_to_file command to write ''Hello World'' into a file
      named ''hello_world.txt''.\"\n    },\n    \"command\": {\n        \"name\":
      \"write_to_file\",\n        \"args\": {\n            \"filename\": \"hello_world.txt\",\n            \"text\":
      \"Hello World\"\n        }\n    }\n}"}, {"role": "system", "content": "Command
      write_to_file returned: File written to successfully."}, {"role": "user", "content":
      "Determine which next command to use, and respond using the format specified
      above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4618'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6SSy3LTQBBF93xFV6/HLgs/MNqZKhZZBBY8FiDKNR61pYnnxUwrDuXSv1OypDiY
        ZAPb7p5zb8/tE+oSc1S1ZGWDmby5LUP1YbH5autP9t1x45qP1e3d+83u7fGbRYF+d0eKhxdT5W0w
        xNo7FKgiSaYS82y1Xq7ms9V6LdD6kgzmWAWezKfLCTdx5yez+SxDgU2SFWF+whC9DbxlfyCXMM9m
        rxcCL/BLY5EJZM/SXErZatkKVLXXihLm309oKY3g6A1hjjIlnVg67mx6x+S6FU6FAwAokGvfVDWn
        AnMYikODHrgrFngDjqgE9tAkAq4JWKbDdvBIoLy10p0HHmvj1LRA8ZQaSSbvtKt69OdhDCL9bHSk
        BJae5Qg4K7yordO5aX1ikCFEH6KWTLD3Ebjuus+YCUa63scEvvz3aipq1kone/1r5FITu3eS4QZC
        9Pe6JJBwL40uof+Rs9ExdVe9KJICycMocNTG/FsmPbIV4xUM438dgZOWerU/8FemZKyu7+dp2kPU
        XcwjoITUKEUp7Rtjfj0aOpsavBWuxVbgXjud6m1PwhwT+4ACtSvpAfNZ+6N99RsAAP//AwAsX4BP
        yAMAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d083c9afc06e20f-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 01 Jun 2023 14:45:06 GMT
      Function-Execution-Id:
      - dgjowx1crtlm
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '17486'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 77c707a34804c59e1324270239fa4090;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86007'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.662s
      X-Request-Id:
      - 51bfd171b32e092bf75197af086d640d
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task!!.!!!!!!!!!\n3. Do not use
      any other commands.\n\n\nConstraints:\n1. ~4000 word limit for short term memory.
      Your short term memory is short, so immediately save important information to
      files.\n2. If you are unsure how you previously did something or want to recall
      past events, thinking about similar events will help you remember.\n3. No user
      assistance\n4. Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3402'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7yTz27bMAzG73sKgpdclCBp2iTzAwztoYet3YZiHgJVZmwt+uNJdJMiyLsPsp2m
        9bDTsF350d/3I0UfUBeYoaokK1ub8fJ283S3/1K5u9vCbi4fnt3TavXw6X764aO9RoH+8Qcp7r+Y
        KG9rQ6y9Q4EqkGQqMJstVleL+Wo5vxRofUEGMyxrHs8nV2NuwqMfT+fTGQpsoiwJswPWwdua1+y3
        5CJmy8VM4Nn7pX4xvRDInqV5Kb1fzI8CVeW1oojZtwNaiifb4A1hhjJGHVk6TpDeMbk0wCF3AAA5
        cuWbsuKYYwZ9sRdoz6mY4w04ogLYQxMJuCLYBc20Zr/eaEOgvLXStQ2tAKNrMsbDVx9MMQLt2IOE
        ttVJSwWMqqSvd0mf8J5HkxzF6+xAMnqnXdkB3FcELOMWAv1sdKAIlv4iTUBL+8c5dGxFWdfB10FL
        PksbH4Cr1CDjdkhdG+k64DF8/k+bUkGzVjra4VORi01IDJLhBqSFJmpXtkzKh0CKzzn9PiS3cnr4
        tINEyORO7eZ5mB1rkttT7k4b8y/vows+itPd9qa/nW1y6JjeQAzQZSiHF98JqfdsMeB4YzL8S17N
        dKJtiXvw3B3xKHCjnY7VujtwzDCyr1GgdgXtMZsevx/f/QIAAP//AwDXGKPSlQQAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d09010a28626338-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 01 Jun 2023 16:59:17 GMT
      Function-Execution-Id:
      - 10tt0m6eibo7
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '22914'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 39252aeb1008055424293273e3b15e12;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86497'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.335s
      X-Request-Id:
      - 47b09f2e689b2af6e12f11ebdfd46738
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\".\n2.
      Use the task_complete command to complete the task!!.!!!!!!!!!\n3. Do not use
      any other commands.\n\n\nConstraints:\n1. ~4000 word limit for short term memory.
      Your short term memory is short, so immediately save important information to
      files.\n2. If you are unsure how you previously did something or want to recall
      past events, thinking about similar events will help you remember.\n3. No user
      assistance\n4. Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to use the write_to_file
      command to write ''Hello World'' into a file named ''hello_world.txt''.\",\n        \"reasoning\":
      \"The task requires me to write ''Hello World'' into a file named ''hello_world.txt'',
      and the write_to_file command is the appropriate command for this task.\",\n        \"plan\":
      \"- Use the write_to_file command to write ''Hello World'' into a file named
      ''hello_world.txt''.\",\n        \"criticism\": \"I need to ensure that I am
      using the correct file name and that the text is written correctly.\",\n        \"speak\":
      \"I will use the write_to_file command to write ''Hello World'' into a file
      named ''hello_world.txt''.\"\n    },\n    \"command\": {\n        \"name\":
      \"write_to_file\",\n        \"args\": {\n            \"filename\": \"hello_world.txt\",\n            \"text\":
      \"Hello World\"\n        }\n    }\n}"}, {"role": "system", "content": "Command
      write_to_file returned: File written to successfully."}, {"role": "user", "content":
      "Determine which next command to use, and respond using the format specified
      above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4634'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7RTS2/bMAy+71cQvOTiBE7SPOZrLy2GYoeu22EuAlVmbC0y5Ul0kiHwfx8c223X
        PYC9juLje5DUCU2GCepCiS4rO17dbPfy9k2x2t1eUZ3v+fJmfbeel4v3l/QaI3QPn0hL3zHRrqws
        iXGMEWpPSijDZLpcL5bz9Wo5jbB0GVlMMK9kPJ8sxlL7BzeO5/EUI6yDygmTE1belZVsxO2IAybT
        eHYR4RP4Y2IWxxGKE2WfameziyZCXTijKWDy8YQlhQHYO0uYoArBBFEsrUzHQtxaOKUMAJCiFK7O
        CwkpJtAH+wQdpQ2meA2F2hOEWmsKYVtb+wUO3ogQw+iKrHXwwXmbjcCwOFCwNZaAVUkZjIo2vzm0
        +YkcZTSBa9CKgd0B6kAgBYGosNv0lgm0K0vFGYiDx9hQNUkxei7SkwqODeed0nd9GXj6XBtPAUpq
        cVq19Pta4SyjIP6BELg1rAl+NZtzLR2lo2pfLVn0TwdQWcWd9zHc/TWa9kaMNqEcFs9E507iUPu2
        T8lgufJubzLKQMFeWZNBtwvYOj8QGc5/ShUqUruB5mCs/bNhdJBNNJxzX/7dNbcb7ti+gX8hSvn8
        5Ud4fmf/4zsMFs42ejcpN9hEuDVsQrHpuDHBIK7CCA1ndMQkbu6bV18BAAD//wMAnZeN38MEAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d0901b21889fd92-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 01 Jun 2023 16:59:43 GMT
      Function-Execution-Id:
      - 10ttmj5d0o2g
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '22454'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 90588ed451e849427d6fce3d9d1d3b3d;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86002'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.664s
      X-Request-Id:
      - 2e75311f118798082a9f757ce15cc658
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\"!\n2.
      Use the task_complete command to complete the task!!.!!!!!!!!!!\n3. Do not use
      any other commands.\n\n\nConstraints:\n1. ~4000 word limit for short term memory.
      Your short term memory is short, so immediately save important information to
      files.\n2. If you are unsure how you previously did something or want to recall
      past events, thinking about similar events will help you remember.\n3. No user
      assistance\n4. Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3403'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7yTT2/TQBDF73yK0Vxy2UT5Q1PwDSEkKmgAiQoBRtF2PbWXrHfc3XGTKvJ3R7aT
        tDXihOA6b/zeb2bHe7QZJmgKLaas3Pj8Mg9vLj+9W317ff/+w5bu7KurxerudvW1+rhChXz9k4wc
        vpgYLitHYtmjQhNIC2WYzJYvzpbP54vZUmHJGTlMMK9kvJicjaUO1zyeLqYzVFhHnRMme6wCl5Ws
        hTfkIybny7nCB+9TfT6dKhQW7U6ll8t5o9AUbA1FTL7vsaR4tA3sCBPUMdoo2ksLyV7ItwPsUw8A
        kKIUXOeFxBQTOBQPAu2kLaZ4AZ4oA2GoI4EUBNtghdbC6xvrCAyXpfZdQyfA6C05x/CFg8tGYL0w
        aOhavS4pg1HR6uttq09kJ6NJiupxdiAd2Vuf9wCfCwLRcQOBbmsbKEJJf5GmoKP94xw2dmLJUUBX
        VeAqWC0ENxxAilbVcTNErpz2Pe0Yrv7TmkywYo2N5fCdyMc6tAxa4OL0aoZDICNdRJvQr4F28oAk
        3HW2HcOwWJHeHIO21rl/eQ19cKOOV3ow/e1IW4ee6QnEAF2HfHjfvXDcRG8x4HhiMvwnHs10pO2I
        D+Cpb7BReGO9jcW6P2dMMApXqND6jHaYTJsfzbNfAAAA//8DAP3uU0iDBAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d09587a1a9622da-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 01 Jun 2023 17:59:02 GMT
      Function-Execution-Id:
      - norsu3o2w07k
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '26930'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 5d53078301f2daba7fd7c208cc70ee8e;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86497'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.334s
      X-Request-Id:
      - 9e507e79697ba72155cc961d4b31ecc1
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\"!\n2.
      Use the task_complete command to complete the task!!.!!!!!!!!!!\n3. Do not use
      any other commands.\n\n\nConstraints:\n1. ~4000 word limit for short term memory.
      Your short term memory is short, so immediately save important information to
      files.\n2. If you are unsure how you previously did something or want to recall
      past events, thinking about similar events will help you remember.\n3. No user
      assistance\n4. Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to use the write_to_file
      command to write ''Hello World'' into a file named ''hello_world.txt''.\",\n        \"reasoning\":
      \"The task requires me to write ''Hello World'' into a file named ''hello_world.txt'',
      and the write_to_file command is the most appropriate for this task.\",\n        \"plan\":
      \"- Use the write_to_file command to write ''Hello World'' into a file named
      ''hello_world.txt''.\",\n        \"criticism\": \"I need to ensure that I use
      the correct filename and text to write to the file.\",\n        \"speak\": \"I
      will use the write_to_file command to write ''Hello World'' into a file named
      ''hello_world.txt''.\"\n    },\n    \"command\": {\n        \"name\": \"write_to_file\",\n        \"args\":
      {\n            \"filename\": \"hello_world.txt\",\n            \"text\": \"Hello
      World\"\n        }\n    }\n}"}, {"role": "system", "content": "Command write_to_file
      returned: File written to successfully."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4617'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7SSTW/TQBCG7/yK0Vxy2UT56EfkK0hQlYgDBQ41irbrsb3JenfZHSdBkf87cmyT
        UtoDIK7z+T4z7xF1hgmqUrKqvBlfr4qwuX2bh3Lz+Ta8/vjhzY4O71f1yqlYo0D3sCHFfcdEucob
        Yu0sClSBJFOGyexqeXl1MV9cXAusXEYGEyw8jxeTyzHX4cGNp4vpDAXWURaEyRF9cJXnNbst2YjJ
        bDpfCDwPPyeWS4HsWJpzaD6bNQJV6bSiiMn9ESuKw+DgDGGCMkYdWVpuZTrLZFuEY2oBAFLk0tVF
        yTHFBPpgn6ADt8EUb6CUO4JYK0Ux5rUx32EfNDNZGL0jYxx8ccFkI9CWHUjItSGwsqIMRmWbX+/b
        /IQPPJrAXUlg6cAQmTzoCOygjgRcErCM23UPT6BcVUmbtQU/Y0PVJEXxWG4gGZ3Vtug03/VlEOhb
        rQNFqOjZOSBzpnDi0bb4cx4BJ4Uvam/5SoLKRQbpfXA+aMkEuQvAZZt9BsYbaTuOMXz659Oolk3p
        WA3vtESnTrKxDm2fZLgBH9xOZwQSdtLoDLqLnoQOdrTFi0uiJ7kdFuy1MX/3025kIwZ79uW/ubP9
        Rrftl/FPRMlQPDX2Y7f8D3sPCCeMnia1DTYCc211LNfdbkwwsvMoUNuMDphMm6/Nqx8AAAD//wMA
        zLnBbJMEAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d09593efadd876c-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 01 Jun 2023 17:59:27 GMT
      Function-Execution-Id:
      - norsuczpvpzh
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '20396'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - f7cd728969870b0ad45aafadaaf9024c;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86006'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.662s
      X-Request-Id:
      - 3b84c5e400d96d652824783331658dd4
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\"!\n2.
      Use the task_complete command to complete the task!!!.!!!!!!!!!!\n3. Do not
      use any other commands.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3404'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7yTSY/TQBCF7/yKUl1ycaJkss34htgmSFxYhBBGUU+7Yjdpd5nuMokU+b8jL0lm
        jDghuNYrv/dVdfmEJsUYda5EF6Udr99lP+3q7f0bn5rNS//6Vb54Lv72/Yvlhy8zjJAfvpOW/ouJ
        5qK0JIYdRqg9KaEU49nqdrla3Czv1hEWnJLFGLNSxvPJciyVf+DxdD5tzKqgMsL4hKXnopSt8J5c
        wHi9mkd49b7Ub6azCIVF2UvpbrWoI9Q5G00B468nLCicbT1bwhhVCCaIctJAshNyzQCnxAEAJCg5
        V1kuIcEY+mIv0FGaYoIbcEQpCEMVCCQnOHgjtBXe7owl0FwUyrUNrQCje7KW4TN7m47AOGFQ0LY6
        VVAKo7zRt4dGn8hRRpMEo8fZnlRgZ1zWAXzMCUSFPXj6URlPAQr6i7QIWto/zmFCKxYcBFRZei69
        UXLVd+xB8qZLhf0QvbTKddRj+PSf1qW9EaNNKIbvRS5UvmFQApvL62n2nrS0EU1Ctw46yhVJuO1s
        OoZhoSS1PwcdjLX/8iq64Do6X2tv+tuxNg4d0xOIAbry2fDOO+G8ic5iwPHEZPhvPJrpTNsS9+CJ
        q7GOcGecCfm2O2uMMQiXGKFxKR0xntbf6me/AAAA//8DAA7aoX6LBAAA
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d095f597ccb226a-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 01 Jun 2023 18:03:36 GMT
      Function-Execution-Id:
      - norsmrspmsr5
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '19259'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 6fda13e696d18061aedc60b377090dcb;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86499'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.334s
      X-Request-Id:
      - 0c6b0f683c1e66330559c30d6c2f9227
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\"!\n2.
      Use the task_complete command to complete the task!!!.!!!!!!!!!!\n3. Do not
      use any other commands.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to use the write_to_file
      command to write ''Hello World'' into a file named ''hello_world.txt''.\",\n        \"reasoning\":
      \"The task requires me to write ''Hello World'' into a file named ''hello_world.txt'',
      and the write_to_file command is the most appropriate command for this task.\",\n        \"plan\":
      \"- Use the write_to_file command to write ''Hello World'' into a file named
      ''hello_world.txt''.\",\n        \"criticism\": \"I need to ensure that I use
      the correct filename and text to write to the file.\",\n        \"speak\": \"I
      will use the write_to_file command to write ''Hello World'' into a file named
      ''hello_world.txt''.\"\n    },\n    \"command\": {\n        \"name\": \"write_to_file\",\n        \"args\":
      {\n            \"filename\": \"hello_world.txt\",\n            \"text\": \"Hello
      World\"\n        }\n    }\n}"}, {"role": "system", "content": "Command write_to_file
      returned: File written to successfully."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4626'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6RSTW/TQBC98ytGc8llE+WjCZHPHKgQqkRBoOIq2q4n9pL9YneclEb+78ix04TQ
        XuA6782bNzNvj7rADFUlWdlghm8/lrvlzZ2+nc6o/BaKD9sne/Pp3ZV2T3e3KNA//CDFfcdIeRsM
        sfYOBapIkqnAbLJYzhdX08V0LND6ggxmWAYezkbzIdfxwQ/Hs/EEBdZJloTZHkP0NvCK/YZcwmwy
        ns4FnsRPwHwhkD1LcypNlpNGoKq8VpQw+75HS+koHL0hzFCmpBNLx61N75hcu8I+dwAAOXLl67Li
        lGMGfbEH6JHbYo7X4IgKYA91IuCKgGXarHqPBMpbK92B8Fw7skY5inPVSDJ5p13ZSX/uaRDpZ60j
        JbD0og7INVOEXdSsXQmD92SMh68+mmIA2rEHCWttCJy0VMCgavHVrsVH/MgDAQeHr3rX6QBanxhk
        CNGHqOUZvvYRuGpZLywVjHTdPkP48t8nUu2OSid7eX1yqY5tn2S4hhD9VhcEErbS6AK6yx6MHtPj
        yleHpEBycxyw08b82287yUYc09TT/wpT+5Vu2h/yF6ZkLC9zeJ6aPjJtGo4CBaRaKUppXRvz69nQ
        wVTvLXcNNgLX2ulUrTolzDCxDyhQu4IeMRs3982b3wAAAP//AwCa556XEAQAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d095fec8dc010d9-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 01 Jun 2023 18:03:55 GMT
      Function-Execution-Id:
      - nors2i7l2st6
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '14339'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - d9bf169b106c1d5d7fa147085e7dd39b;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86006'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.662s
      X-Request-Id:
      - 8df5cae701f8a08d17b1d9373f32ddb9
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\"!\n2.
      Use the task_complete command to complete the task!!.!!!!!!!.!!!!\n3. Do not
      use any other commands.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3405'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7yTTW/bMAyG7/sVBC+5OEHSLB/1dRiwHtYNWIcCrYdAkRlbiywKErNkC/LfB9v5
        aDz0NGxXvuTLh5S4R5NjirpUoitv+7OP5fSXf3p8X3z++W7+4O9Xn9SXp3ExuzdOMEFefictx4qB
        5spbEsMOE9SBlFCO6Wg6n0zfjm9uxwlWnJPFFAsv/fFg0pdNWHJ/OB6OMMFNVAVhukcfuPKyEF6T
        i5jOppMEL97n+M1onqCwKHsO3c7HhwR1yUZTxPR5jxXFk21gS5iiitFEUQ2/Zifk6gH2mQMAyFBK
        3hSlxAxTOAaPAu2kDmZ4B1tjLWwigZQE22CEFsKLlbEEmqtKuRyEWwF6H8hahkcONu+BccKgoEl1
        qqIcemWtL7a1PpCd9AYZJi8bB1KRnXFF2/2hJChYWTDxL5ok0EC+il+blwQVRwHlfWAfjJKLvuIA
        UtZZKq67xN4q18L24es/21LmLu41xeL4R67cz7FTVpdVByNGm1id3tYRNZXk4ibUdUrgDkr1o/XQ
        HAJpadhqtHaPtJPLLMJNZkO/pBUHAtqR3ohxxeu76IJFT2r9vz5c2/iQnK7gaPrHEdQOLdMVRAdd
        haJ7P61wWlpr0eG4Mune3IuZTrQN8RE8cwc8JLgyzsRy0V4MphiFPSZoXE47TIeHb4c3vwEAAP//
        AwBtI1MK4wQAAA==
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d097059681e2994-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 01 Jun 2023 18:15:14 GMT
      Function-Execution-Id:
      - nors9c8cpgrp
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '21104'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 6130877936fe24fb2bafe2918a22acb0;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86500'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.332s
      X-Request-Id:
      - f5b70c7a48826ef75e3d6b40a95ea4c9
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\"!\n2.
      Use the task_complete command to complete the task!!.!!!!!!!.!!!!\n3. Do not
      use any other commands.\n\n\nConstraints:\n1. ~4000 word limit for short term
      memory. Your short term memory is short, so immediately save important information
      to files.\n2. If you are unsure how you previously did something or want to
      recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I will use the write_to_file command
      to write ''Hello World'' into a file named ''hello_world.txt''.\",\n        \"reasoning\":
      \"The goal is to write ''Hello World'' into a file named ''hello_world.txt'',
      and the write_to_file command is the most appropriate command for this task.\",\n        \"plan\":
      \"- Use the write_to_file command to write ''Hello World'' into a file named
      ''hello_world.txt''.\\n- Use the task_complete command to complete the task.\",\n        \"criticism\":
      \"I need to ensure that I have the correct filename and text to write to the
      file before executing the write_to_file command.\",\n        \"speak\": \"I
      will use the write_to_file command to write ''Hello World'' into a file named
      ''hello_world.txt''.\"\n    },\n    \"command\": {\n        \"name\": \"write_to_file\",\n        \"args\":
      {\n            \"filename\": \"hello_world.txt\",\n            \"text\": \"Hello
      World\"\n        }\n    }\n}"}, {"role": "system", "content": "Command write_to_file
      returned: File written to successfully."}, {"role": "user", "content": "Determine
      which next command to use, and respond using the format specified above:"}],
      "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4715'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA8yTTW/TQBCG7/yK0VxycaJ8tsF3JCpU4EAECKNoux7bm6x3jHecBEX+72hrOy0F
        DqhC4jpf7/vM7pzRpBijLpTosrLj69vi+j1Ltn6zfvtttVGb5nb+2bhXn3ar3TuMkO92pKXvmGgu
        K0ti2GGEuiYllGI8u1qvrpaLxexlhCWnZDHGvJLxYrIaS1Pf8Xi6mM4wwsarnDA+Y1VzWclWeE/O
        YzybLpcRPgy/JOazRYTCouxD7Xx13UaoCzaaPMZfzliSHwbXbAljVN4bL8pJsMlOyAWEc+IAABKU
        gpu8EJ9gDH2wT9BJQjDBGyjUgcA3WpP3WWPtdzjWRoQcjF6TtQwfubbpCIwTBgWZsQROlZTCqAj5
        7THkJ3KS0QRu4GisBcdHaDyBFASi/H7bMxNoLkvlUhCGS2yomiQYPXZZk/LsjMs7qx8KgpyVBc4u
        LWB8GBUc09/7heDkdxsYrKUgRVAI5iDoOzoJeKGqF34+ZGWV6/jGsHn2NF0bMdr4cnhdR3TfSc43
        dehTMhBXNR9MSikoOChrUuj2DRnXg5Bx+R+lfEVq/19+os5lGw1n0Jf/cgXBQAfw0/gnnKrOnx7Q
        4+/5LzYwINxj9DSJa7GNMDPO+GLbaWOMXrjCCI1L6YTxtP3avvgBAAD//wMA2avHEvsEAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d0970fb5c0efd8e-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 01 Jun 2023 18:15:39 GMT
      Function-Execution-Id:
      - nors1q5oparh
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '19439'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - c83bcb286bf18af9a99fd08ca8f21cc5;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86002'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.664s
      X-Request-Id:
      - 3bf4734ad1cc3f1d31c8425a56ceebe0
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\"!\n2.
      Use the task_complete command to complete the task!!.!!!!!!!!!!\n3. Do not use
      any other commands!!\n\n\nConstraints:\n1. ~4000 word limit for short term memory.
      Your short term memory is short, so immediately save important information to
      files.\n2. If you are unsure how you previously did something or want to recall
      past events, thinking about similar events will help you remember.\n3. No user
      assistance\n4. Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "user", "content": "Determine which next command to use, and respond using the
      format specified above:"}], "temperature": 0, "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3404'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7yST4sbMQzF7/0UQpdcnJCQf905h7bpUiiFsofOErweJeOuxxpshYSG+e7FM0l2
        M0vppfSqZ733k6wT2gIzNKUWU9VuuPxSftaFuZdlXNn1r9V0az5u3Yd783X17QEV8tNPMnLuGBmu
        akdi2aNCE0gLFZhNFu/ni9lsvJwprLgghxnuahlOR/Oh7MMTD8fT8QQV7qPeEWYnrANXtWyEn8lH
        zJaLqcIX72t9cjdRKCzaXUt381mj0JRsDUXMfpywonixDewIM9Qx2ijaS4JkL+TTAKfcAwDkKCXv
        d6XEHDM4F88CHSUVc1yDJypAGPaRQEqCQ7BCG+HN1joCw1WlffugFWDwiZxjeODgigFYLwwa2qde
        V1TAoEz65pD0kRxlMMpRvc4OpCN763cXgIN17i/pBytlK6dqynkbAy1lSZBmu6XsE9RO+y58CN//
        Y64JVqyxseqvnnzch8ShBdbXVRgOgYy8ZLdJKeX6GcJXun5YrEk//3nFqfXffXAX3KjL4Z1N39xd
        cuiYbvbdQ9dh1z/ZTrhsorPocdyY9M/81UwX2pb4DJ77BhuFW+ttLDfdhWKGUbhGhdYXdMRs3Dw2
        734DAAD//wMAXPgSQVYEAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d09836abf641098-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 01 Jun 2023 18:28:13 GMT
      Function-Execution-Id:
      - norsy4j5syjz
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '18494'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 4f286e46e846176006914f0daf216b69;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86499'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.334s
      X-Request-Id:
      - 2371981f80fcea43352f6b26558986a8
    status:
      code: 200
      message: OK
- request:
    body: '{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "You
      are write_to_file-GPT, an AI designed to use the write_to_file command to write
      ''Hello World'' into a file named \"hello_world.txt\" and then use the task_complete
      command to complete the task.\nYour decisions must always be made independently
      without seeking user assistance. Play to your strengths as an LLM and pursue
      simple strategies with no legal complications.\n\nGOALS:\n\n1. Use the write_to_file
      command to write ''Hello World'' into a file named \"hello_world.txt\"!\n2.
      Use the task_complete command to complete the task!!.!!!!!!!!!!\n3. Do not use
      any other commands!!\n\n\nConstraints:\n1. ~4000 word limit for short term memory.
      Your short term memory is short, so immediately save important information to
      files.\n2. If you are unsure how you previously did something or want to recall
      past events, thinking about similar events will help you remember.\n3. No user
      assistance\n4. Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      append_to_file: Append to file, args: \"filename\": \"<filename>\", \"text\":
      \"<text>\"\n2. delete_file: Delete file, args: \"filename\": \"<filename>\"\n3.
      list_files: List Files in Directory, args: \"directory\": \"<directory>\"\n4.
      read_file: Read a file, args: \"filename\": \"<filename>\"\n5. write_to_file:
      Write to file, args: \"filename\": \"<filename>\", \"text\": \"<text>\"\n6.
      delete_agent: Delete GPT Agent, args: \"key\": \"<key>\"\n7. get_hyperlinks:
      Get hyperlinks, args: \"url\": \"<url>\"\n8. get_text_summary: Get text summary,
      args: \"url\": \"<url>\", \"question\": \"<question>\"\n9. list_agents: List
      GPT Agents, args: () -> str\n10. message_agent: Message GPT Agent, args: \"key\":
      \"<key>\", \"message\": \"<message>\"\n11. start_agent: Start GPT Agent, args:
      \"name\": \"<name>\", \"task\": \"<short_task_desc>\", \"prompt\": \"<prompt>\"\n12.
      task_complete: Task Complete (Shutdown), args: \"reason\": \"<reason>\"\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n5.
      Write all code to a file.\n\nYou should only respond in JSON format as described
      below \nResponse Format: \n{\n    \"thoughts\": {\n        \"text\": \"thought\",\n        \"reasoning\":
      \"reasoning\",\n        \"plan\": \"- short bulleted\\n- list that conveys\\n-
      long-term plan\",\n        \"criticism\": \"constructive self-criticism\",\n        \"speak\":
      \"thoughts summary to say to user\"\n    },\n    \"command\": {\n        \"name\":
      \"command name\",\n        \"args\": {\n            \"arg name\": \"value\"\n        }\n    }\n}
      \nEnsure the response can be parsed by Python json.loads"}, {"role": "system",
      "content": "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role":
      "system", "content": "This reminds you of these events from your past: \nI was
      created"}, {"role": "user", "content": "Determine which next command to use,
      and respond using the format specified above:"}, {"role": "assistant", "content":
      "{\n    \"thoughts\": {\n        \"text\": \"I need to use the write_to_file
      command to write ''Hello World'' into a file named ''hello_world.txt''.\",\n        \"reasoning\":
      \"I will use the write_to_file command with the filename ''hello_world.txt''
      and the text ''Hello World''.\",\n        \"plan\": \"- Use the write_to_file
      command with the filename ''hello_world.txt'' and the text ''Hello World''.\",\n        \"criticism\":
      \"I need to ensure that I use the correct filename and text to write to the
      file.\",\n        \"speak\": \"I will use the write to file command to write
      ''Hello World'' into a file named ''hello_world.txt''.\"\n    },\n    \"command\":
      {\n        \"name\": \"write_to_file\",\n        \"args\": {\n            \"filename\":
      \"hello_world.txt\",\n            \"text\": \"Hello World\"\n        }\n    }\n}"},
      {"role": "system", "content": "Command write_to_file returned: File written
      to successfully."}, {"role": "user", "content": "Determine which next command
      to use, and respond using the format specified above:"}], "temperature": 0,
      "max_tokens": 0}'
    headers:
      AGENT-MODE:
      - AAAAAAAAAAAAAAAAAAAAAMLheAAaAAAA0%2BuSeid%2BULvsea4JtiGRiSDSJSI%3DEUifiRBkKG5E2XzMDjRfl76ZC9Ub0wnz4XsNiRVBChTYbJcE3F
      AGENT-TYPE:
      - Auto-GPT-2023-X-TYPE
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4573'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA7RSy27bMBC89yuIvehCGxYSy42+ICnQFgUapEBVGAy1NllTJMFd1S4M/XshS4oT
        F30det2ZnZl9HMHWUII2inUT3Wz11rw5fCIb89vwvlgVD8T3TeFvYpvHDyAhPH5FzWPHXIcmOmQb
        PEjQCRVjDWVevF4W19eLm5WEJtTooIRt5NnVfDnjNj2G2eJqkYOEltQWoTxCTKGJvOawQ09Q5ot8
        KeEsfgaWhQQOrNy5lK/yToI2wWokKD8foUGahFNwCCUoIkusPPcxg2f0/QjHygshRAVsQrs1TBWU
        YiyOAB64L1bwLuwFG8XiThj1DcU+WWb0IrtF54J4CMnVmeAg2KDYWIciMz2y3vfInA+cSXEnPGLd
        s1rCE5MV7dbjoCh0aBrlT4Sn2sSaVyCfR0uoKHjrt0O+O7G3zv1Bd2/ZnOChWWQfFe2erGpBrdZI
        tGmd+55dGkan/OA1E/f/z0Yny1Zbaqa5ppWhpzbhdIRpUB1SQs2T1d9sjiKq3T9s7Reag2Qnpyca
        6T/9kFcNDm4v5C9CqbS9fL/ndx4EfrPHKc8p0xit8h10EjbWWzLrQQhKIA4RJFhf4wHKRfele/UD
        AAD//wMA3fdUVQYEAAA=
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Alt-Svc:
      - h3=":443"; ma=86400
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Cache-Control:
      - no-cache, must-revalidate
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Ray:
      - 7d0983f91a18fdd9-ORD
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 01 Jun 2023 18:28:33 GMT
      Function-Execution-Id:
      - norsf6mdi9gf
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - significant-gravitas
      Openai-Processing-Ms:
      - '15814'
      Openai-Version:
      - '2020-10-01'
      Server:
      - Google Frontend
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      Vary:
      - Accept-Encoding
      X-Cloud-Trace-Context:
      - 613db78da66a4a918019a3abd5fef5a3;o=1
      X-Powered-By:
      - Express
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '86008'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 2.66s
      X-Request-Id:
      - e7ea154b03756dfd9a546c677a59c547
    status:
      code: 200
      message: OK
version: 1
